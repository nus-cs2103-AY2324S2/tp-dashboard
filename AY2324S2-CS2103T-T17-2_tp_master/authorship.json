[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"[![Java CI](https://github.com/AY2324S2-CS2103T-T17-2/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2324S2-CS2103T-T17-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"## ContactSwift","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"ContactSwift is an efficient and intuitive contact management software designed for small-scale business owners like John Doe, founder and CEO of DoeInnovationsTech. With ContactSwift, users can:","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"- Effortlessly manage their employees\u0027 contact details","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"- Streamline communication","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"- Maintain an organized address book","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"- Enjoy lightning-fast speed and cross-platform compatibility","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"### Installation","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"- ContactSwift will be available soon for download at [ContactSwift](https://ay2324s2-cs2103t-t17-2.github.io/tp/).","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"- Run the JAR file on any compatible operating system by double-clicking it or using the command line: `java -jar ContactSwift.jar`","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"### Features","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"1. **Quick Contact Addition**: Quickly add new contacts with a unique ID for easy reference.","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"Command format: `add contact /name John Doe /email john@example.com /number 1234567890`","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"2. **Contact Deletion**: Easily delete unnecessary contacts to keep your address book organized.","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"   Command format: `delete contact /id \u003ccontact_id\u003e`","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"3. **Contact Information Storage**: Store detailed information about your contacts securely for easy reference. Information is stored locally to ensure privacy and security.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"4. **All Contacts List Display**: View a complete list of all your contacts in a user-friendly format.","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"   Command format: `list all`","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"## Acknowledgements","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"PyromancerBoom":34,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"run {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"    archiveFileName \u003d \u0027contactswift.jar\u0027","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"PyromancerBoom":1,"hjungwoo01":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"### Jay Hong","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"\u003cimg src\u003d\"images/hjungwoo01.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"[[github](https://github.com/hjungwoo01)] [[portfolio](team/hjungwoo01.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"- Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"- Responsibilities: Team lead, Integration, Deliverables and deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"### Priyansh Bimbisariye","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"\u003cimg src\u003d\"images/pyromancerboom.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"[[github](https://github.com/PyromancerBoom)] [[portfolio](team/pyromancerboom.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"- Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"- Responsibilities: Scheduling and Tracking, Deliverables and deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"### Shayaan Sultan","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"quelinxiao"},"content":"\u003cimg src\u003d\"images/shayaansultan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"quelinxiao"},"content":"[[github](http://github.com/shayaansultan)] [[portfolio](team/shayaansultan.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"- Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"- Responsibilities: Documentation, Deliverables and deadlines","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"### Que Linxiao","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"quelinxiao"},"content":"\u003cimg src\u003d\"images/quelinxiao.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"[[github](http://github.com/quelinxiao)] [[portfolio](team/quelinxiao.md)]","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"- Role: Developer","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"- Responsibilities: Testing, Deliverables and deadlines","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"PyromancerBoom":8,"quelinxiao":6,"hjungwoo01":6,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"The **_Architecture Diagram_** given above explains the high-level design of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"- At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"- At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"- [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"- [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"- [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"- [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"The _Sequence Diagram_ below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2024-03-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"- defines its _API_ in an `interface` with the same name as the Component.","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"- implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"- executes user commands using the `Logic` component.","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"- listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2024-03-07"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"- keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2024-03-07"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"- depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a employee).\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"- When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"- All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"- stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-07"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"- stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-03-07"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"- stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"- does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2024-03-07"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"- can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-07"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"- inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2024-03-07"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"- depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2024-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"### Unique Identifier (UID) Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"The introduction of Unique Identifiers (UID) marks a significant enhancement in managing employee records, ensuring the uniqueness of each entry and preventing duplicates. This section elaborates on the UID system\u0027s integration into the application, focusing on the deletion process and the assignment of teams and roles.","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"- UID Assignment: Every employee added to the contact book is automatically assigned a unique identifier (UID). This UID serves as a definitive reference to each employee, distinguishing between individuals even if other attributes (such as name, email, and contact number) are identical.","lastModifiedDate":"2024-03-29"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"  The UID is generated sequentially, starting from `100` for the first employee and incrementing by one for each subsequent addition. This systematic approach ensures that each employee is uniquely identified within the system. To work with exisiting data, UID is set to the last UID in the data, which is also the maximum UID. Furthmore, the UID is displayed alongside the employee\u0027s details in the contact list, providing users with a clear and unambiguous reference point for each entry.","lastModifiedDate":"2024-03-29"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":170,"author":{"gitId":"PyromancerBoom"},"content":"- Enhanced Duplicate Detection: The system leverages UIDs to identify and prevent duplicate entries. Upon adding a new employee, the application checks for duplicates based on a combination of name, email, and contact number. If a potential duplicate is detected, the system relies on the UID to ascertain uniqueness, thereby maintaining the integrity of the employee database.","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"PyromancerBoom"},"content":"#### Implications","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"PyromancerBoom"},"content":"One of the major ways the UID system enhances the application is by streamlining the deletion process. When a user initiates the deletion of an employee, the system prompts the user to specify the deletion target using the employee\u0027s UID. This approach eliminates ambiguity and ensures that the correct employee is removed from the database, even in cases where multiple employees share the same name, email, or contact number.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"PyromancerBoom"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"PyromancerBoom"},"content":"- **Why this design**: Integrating UIDs enhances the robustness and reliability of the employee management system. It addresses the challenge of duplicate entries and streamlines the process of deleting, team assignment, and role designation, ensuring accuracy and precision in employee record management. In the future, the UID system can be further extended to support additional functionalities such as search, filtering, and sorting, providing users with a more robust and efficient employee management experience.","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"PyromancerBoom"},"content":"- **Alternatives considered**: While alternatives such as relying solely on name, email, or contact number for identification were considered, these methods were prone to ambiguity and errors, especially in large datasets. The UID approach was selected for its ability to uniquely identify each employee, thereby enhancing the system\u0027s overall functionality and user experience.","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"hjungwoo01"},"content":"### Filter Command Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"hjungwoo01"},"content":"The `FilterCommand` is implemented to allow users to refine the list of employees displayed based on specified criteria, such as role, team, and tags. This functionality is crucial for users who need to work with subsets of large employee datasets.","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"hjungwoo01"},"content":"- `FilterCommandParser` parses the user input and creates a `FilterCommand` object with a specific predicate that encapsulates the filtering logic.","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"- `Model#updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate)` is then called to filter the list of employees according to the given criteria.","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"Given below is an example usage scenario and how the filter mechanism behaves at each step.","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"hjungwoo01"},"content":"Step 1. The user executes `filter t/ developer`, intending to view only employees tagged as developers. The input is parsed by `FilterCommandParser`, which creates a `FilterCommand` with a predicate that checks the tags of each employee.","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"hjungwoo01"},"content":"Step 2. The `FilterCommand` is executed, calling `Model#updateFilteredEmployeeList(predicate)`, where `predicate` is the condition that an employee\u0027s tags must include \"developer\".","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"hjungwoo01"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"hjungwoo01"},"content":"- **Why this design:** The command pattern is used for consistency with other commands in the application and to keep the parsing and execution logic separated. The use of predicates for filtering allows for flexible and dynamic searches without hard-coding specific query types.","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"hjungwoo01"},"content":"- **Alternatives considered:** A direct approach where the `FilterCommand` directly manipulates the employee list was considered but rejected to maintain a clean separation between the command and the model, adhering to the Single Responsibility Principle.","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"### Show All Command Implementation","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"hjungwoo01"},"content":"The `ShowAllCommand` is a simple feature designed to reset any filters applied and show the complete list of employees.","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"hjungwoo01"},"content":"- `ShowAllCommand` directly interacts with the `Model` to reset the filtered employee list to show all employees.","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"hjungwoo01"},"content":"- It calls `Model#updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate)` with a predicate that always returns true, ensuring all employees are displayed.","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"hjungwoo01"},"content":"Given below is how the show all mechanism operates:","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"hjungwoo01"},"content":"Step 1. After various filter commands, the user decides to view all employees and executes `showAll`. This command creates a `ShowAllCommand` object.","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"hjungwoo01"},"content":"Step 2. `ShowAllCommand` executes and invokes `Model#updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate)` with a predicate that evaluates to true for all employees, effectively clearing any active filters.","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"hjungwoo01"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"hjungwoo01"},"content":"- **Why this design:** The implementation provides a straightforward and intuitive way to revert any filters and view the complete list of employees. It follows the existing command structure and integrates seamlessly with the model.","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"hjungwoo01"},"content":"- **Alternatives considered:** An alternative could have been to maintain a separate list for the unfiltered state and toggle between filtered and unfiltered lists. However, this was deemed unnecessary and potentially confusing, as the single list approach with dynamic predicates is simpler and more consistent with the rest of the application\u0027s design.","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"shayaansultan"},"content":"## Delete by Name Command Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"shayaansultan"},"content":"The `DeleteCommand` was further enhanced to allow users to remove employees from the list by their full name. This functionality is crucial for users who need to manage their employee datasets. The command has been enhanced to handle deletion by name in case of duplicate names.","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"shayaansultan"},"content":"- `DeleteCommandParser` parses the user input and creates a `DeleteCommand` object with a specific target name that encapsulates the deletion logic.","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"shayaansultan"},"content":"- `Model#deleteEmployee(Employee target)` is then called to remove the employee from the list according to the given criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"shayaansultan"},"content":"- In the scenario where multiple employees have the same name, the user is prompted to delete by uid to ensure the correct employee is removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"shayaansultan"},"content":"Given below is an example usage scenario and how the delete by name mechanism behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"shayaansultan"},"content":"Step 1. The user executes `delete John Doe`, intending to remove the employee named John Doe. The input is parsed by `DeleteCommandParser`, which creates a `DeleteCommand` with the target name.","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"shayaansultan"},"content":"Step 2. The `DeleteCommand` is executed, calling `Model#deleteEmployee(target)`, where `target` is the employee with the name \"John Doe\". If there are multiple employees with the name \"John Doe\", a `CommandException` is thrown asking the user to delete by uid.","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"shayaansultan"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"shayaansultan"},"content":"- **Why this design:** The command pattern is used for consistency with other commands in the application and to keep the parsing and execution logic separated. The use of target name for deletion allows for precise and flexible removal of employees without hard-coding specific deletion types.","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"shayaansultan"},"content":"- **Alternatives considered:** A direct approach where the `DeleteCommand` directly manipulates the employee list was considered but rejected to maintain a clean separation between the command and the model, adhering to the Single Responsibility Principle.","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"shayaansultan"},"content":"## Delete by UID Command Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"shayaansultan"},"content":"The `DeleteCommand` is also implemented to allow users to remove employees from the list by their unique id. This functionality is crucial for users who need to manage their employee datasets, especially when there are multiple employees with the same name.","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"shayaansultan"},"content":"- `DeleteCommandParser` parses the user input and creates a `DeleteCommand` object with a specific target uid that encapsulates the deletion logic.","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"shayaansultan"},"content":"- `Model#deleteEmployee(Employee target)` is then called to remove the employee from the list according to the given criteria.","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"shayaansultan"},"content":"Given below is an example usage scenario and how the delete by uid mechanism behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":245,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":246,"author":{"gitId":"shayaansultan"},"content":"Step 1. The user executes `delete uid/1234`, intending to remove the employee with uid 1234. The input is parsed by `DeleteCommandParser`, which creates a `DeleteCommand` with the target uid.","lastModifiedDate":"2024-03-29"},{"lineNumber":247,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":248,"author":{"gitId":"shayaansultan"},"content":"Step 2. The `DeleteCommand` is executed, calling `Model#deleteEmployee(target)`, where `target` is the employee with the uid 1234.","lastModifiedDate":"2024-03-29"},{"lineNumber":249,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":250,"author":{"gitId":"shayaansultan"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":251,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":252,"author":{"gitId":"shayaansultan"},"content":"- **Why this design:** The command pattern is used for consistency with other commands in the application and to keep the parsing and execution logic separated. The use of target uid for deletion allows for precise and flexible removal of employees without hard-coding specific deletion types.","lastModifiedDate":"2024-03-29"},{"lineNumber":253,"author":{"gitId":"shayaansultan"},"content":"- **Alternatives considered:** A direct approach where the `DeleteCommand` directly manipulates the employee list was considered but rejected to maintain a clean separation between the command and the model, adhering to the Single Responsibility Principle.","lastModifiedDate":"2024-03-29"},{"lineNumber":254,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":255,"author":{"gitId":"quelinxiao"},"content":"### Add Command Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":256,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":257,"author":{"gitId":"quelinxiao"},"content":"The `AddCommand` implements the abstract class `Command` to add a new `Employee` to the `Model`.","lastModifiedDate":"2024-03-29"},{"lineNumber":258,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"quelinxiao"},"content":"Given below is how the `AddCommand` operates:","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"quelinxiao"},"content":"Step 1. After the user inputs all the `prefixes` necessary, which are `Name`, `Phone`, `Address`, `Email`, `Team`, `Role`, and optionally `Tag`, the `AddCommandParser` parses the input and creates a new `Employee` for the `AddCommand`.","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"quelinxiao"},"content":"Step 2. The `AddCommand` will then store the added `Employee` and feed it to the `execute` method.","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"quelinxiao"},"content":"Step 3. The `execute` method then gives the `Employee` parameter to the `addEmployee` method under the `Model` interface.","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"quelinxiao"},"content":"Step 4. The `addEmployee` adds the `Employee` to the `Model`.","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"quelinxiao"},"content":"The following class diagram shows the structure of an `Employee`:","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"quelinxiao"},"content":"\u003cpuml src\u003d\"diagrams/UpdatedEmployeeClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"quelinxiao"},"content":"And this is the sequence diagram that describes the steps:","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"quelinxiao"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"quelinxiao"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"quelinxiao"},"content":"- **Alternative:** `Team` and `Role` could have been further abstracted into a Class called `Header` as they appear above the names of the `Employee` in the GUI. This was considered so that we could filter the contact list to employees who are in the same team or role. However, it is rejected as filter will be able to be implemented in a simpler manner when avoiding this over-abstraction.","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"PyromancerBoom"},"content":"- `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":289,"author":{"gitId":"PyromancerBoom"},"content":"- `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":290,"author":{"gitId":"PyromancerBoom"},"content":"- `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2024-03-07"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"hjungwoo01"},"content":"Step 2. The user executes `delete 5` command to delete the 5th employee in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-14"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"hjungwoo01"},"content":"Step 3. The user executes `add n/David …​` to add a new employee. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2024-03-14"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"hjungwoo01"},"content":"Step 4. The user now decides that adding the employee was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":321,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":333,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"PyromancerBoom"},"content":"- **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":364,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":365,"author":{"gitId":"PyromancerBoom"},"content":"  - Pros: Easy to implement.","lastModifiedDate":"2024-03-07"},{"lineNumber":366,"author":{"gitId":"PyromancerBoom"},"content":"  - Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2024-03-07"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"PyromancerBoom"},"content":"- **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2024-03-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"hjungwoo01"},"content":"  - Pros: Will use less memory (e.g. for `delete`, just save the employee being deleted).","lastModifiedDate":"2024-03-14"},{"lineNumber":371,"author":{"gitId":"PyromancerBoom"},"content":"  - Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2024-03-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"PyromancerBoom"},"content":"- [Documentation guide](Documentation.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":384,"author":{"gitId":"PyromancerBoom"},"content":"- [Testing guide](Testing.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":385,"author":{"gitId":"PyromancerBoom"},"content":"- [Logging guide](Logging.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":386,"author":{"gitId":"PyromancerBoom"},"content":"- [Configuration guide](Configuration.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":387,"author":{"gitId":"PyromancerBoom"},"content":"- [DevOps guide](DevOps.md)","lastModifiedDate":"2024-03-07"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"PyromancerBoom"},"content":"- needs to manage contacts of a growing population of employees","lastModifiedDate":"2024-03-07"},{"lineNumber":398,"author":{"gitId":"PyromancerBoom"},"content":"- prefers to use CLI over GUI","lastModifiedDate":"2024-03-07"},{"lineNumber":399,"author":{"gitId":"PyromancerBoom"},"content":"- can type fast","lastModifiedDate":"2024-03-07"},{"lineNumber":400,"author":{"gitId":"PyromancerBoom"},"content":"- values efficiency, transparency, and effective communication","lastModifiedDate":"2024-03-07"},{"lineNumber":401,"author":{"gitId":"PyromancerBoom"},"content":"- wants an app that works with different OS","lastModifiedDate":"2024-03-07"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"quelinxiao"},"content":"**Value proposition**: manage contacts in an efficient manner using CLI app","lastModifiedDate":"2024-03-07"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"| Priority | As a …​              | I want to …​                                   | So that I can…​                                       |","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"PyromancerBoom"},"content":"| -------- | -------------------- | ---------------------------------------------- | ----------------------------------------------------- |","lastModifiedDate":"2024-03-07"},{"lineNumber":411,"author":{"gitId":"hjungwoo01"},"content":"| `* * *`  | small business owner | easily add new contacts to my database         | quickly message and nurture my employees              |","lastModifiedDate":"2024-03-07"},{"lineNumber":412,"author":{"gitId":"hjungwoo01"},"content":"| `* * *`  | busy professional    | access my contact information from my computer | stay organized and responsive even when I\u0027m on the go |","lastModifiedDate":"2024-03-07"},{"lineNumber":413,"author":{"gitId":"hjungwoo01"},"content":"| `* * *`  | user                 | add new contacts to my address book            | easily store their information                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":414,"author":{"gitId":"hjungwoo01"},"content":"| `* * *`  | user                 | delete contacts I no longer need               | keep my address book organized                        |","lastModifiedDate":"2024-03-07"},{"lineNumber":415,"author":{"gitId":"hjungwoo01"},"content":"| `* * *`  | user                 | view a complete list of all my contacts        | browse through them easily                            |","lastModifiedDate":"2024-03-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"PyromancerBoom"},"content":"_{More to be added}_","lastModifiedDate":"2024-03-07"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"shayaansultan"},"content":"#### **Use Case: Add Contact for ContactSwift v1.2**","lastModifiedDate":"2024-03-07"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"shayaansultan"},"content":"**System:** ContactSwift v1.2","lastModifiedDate":"2024-03-07"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"shayaansultan"},"content":"**Actor:** User","lastModifiedDate":"2024-03-07"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"shayaansultan"},"content":"1. **User adds a new contact:**","lastModifiedDate":"2024-03-07"},{"lineNumber":428,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":429,"author":{"gitId":"shayaansultan"},"content":"   - Command: `add contact /name Jane Smith /email jane@example.com /number 9876543210`","lastModifiedDate":"2024-03-07"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"shayaansultan"},"content":"2. **ContactSwift processes the command:**","lastModifiedDate":"2024-03-07"},{"lineNumber":432,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":433,"author":{"gitId":"shayaansultan"},"content":"   - Validates the command format and required details.","lastModifiedDate":"2024-03-07"},{"lineNumber":434,"author":{"gitId":"shayaansultan"},"content":"   - Generates a unique ID for the new contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"shayaansultan"},"content":"3. **ContactSwift updates the address book:**","lastModifiedDate":"2024-03-07"},{"lineNumber":437,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":438,"author":{"gitId":"shayaansultan"},"content":"   - Adds the contact details to the in-memory database.","lastModifiedDate":"2024-03-07"},{"lineNumber":439,"author":{"gitId":"shayaansultan"},"content":"   - Sends a success message to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"shayaansultan"},"content":"4. **User verifies the addition:**","lastModifiedDate":"2024-03-07"},{"lineNumber":442,"author":{"gitId":"shayaansultan"},"content":"   - Command: `list all`","lastModifiedDate":"2024-03-07"},{"lineNumber":443,"author":{"gitId":"shayaansultan"},"content":"   - ContactSwift displays the updated list with Jane Smith\u0027s details.","lastModifiedDate":"2024-03-07"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"shayaansultan"},"content":"#### **Use Case: Delete Contact for ContactSwift v1.2**","lastModifiedDate":"2024-03-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"shayaansultan"},"content":"**System:** ContactSwift v1.2","lastModifiedDate":"2024-03-07"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"shayaansultan"},"content":"**Actor:** User","lastModifiedDate":"2024-03-07"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"shayaansultan"},"content":"1. **User identifies the contact to delete:**","lastModifiedDate":"2024-03-07"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":453,"author":{"gitId":"shayaansultan"},"content":"   - Command: `list all`","lastModifiedDate":"2024-03-07"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":455,"author":{"gitId":"shayaansultan"},"content":"2. **ContactSwift displays the contact list:**","lastModifiedDate":"2024-03-07"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":457,"author":{"gitId":"shayaansultan"},"content":"   - User identifies the contact to delete, e.g., with the ID 5678.","lastModifiedDate":"2024-03-07"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":459,"author":{"gitId":"shayaansultan"},"content":"3. **User initiates the deletion:**","lastModifiedDate":"2024-03-07"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":461,"author":{"gitId":"shayaansultan"},"content":"   - Command: `delete contact /id 5678`","lastModifiedDate":"2024-03-07"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":463,"author":{"gitId":"shayaansultan"},"content":"4. **ContactSwift processes the deletion:**","lastModifiedDate":"2024-03-07"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":465,"author":{"gitId":"shayaansultan"},"content":"   - Verifies the command format and the contact ID.","lastModifiedDate":"2024-03-07"},{"lineNumber":466,"author":{"gitId":"shayaansultan"},"content":"   - Deletes the contact if conditions are met.","lastModifiedDate":"2024-03-07"},{"lineNumber":467,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":468,"author":{"gitId":"shayaansultan"},"content":"5. **ContactSwift updates the address book:**","lastModifiedDate":"2024-03-07"},{"lineNumber":469,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":470,"author":{"gitId":"shayaansultan"},"content":"   - Removes the contact from the in-memory database.","lastModifiedDate":"2024-03-07"},{"lineNumber":471,"author":{"gitId":"shayaansultan"},"content":"   - Sends a confirmation message to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":472,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":473,"author":{"gitId":"shayaansultan"},"content":"6. **User verifies the deletion:**","lastModifiedDate":"2024-03-07"},{"lineNumber":474,"author":{"gitId":"shayaansultan"},"content":"   - Command: `list all`","lastModifiedDate":"2024-03-07"},{"lineNumber":475,"author":{"gitId":"shayaansultan"},"content":"   - ContactSwift displays the updated list without the deleted contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":476,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":477,"author":{"gitId":"shayaansultan"},"content":"#### **Use Case: Quick Contact Addition for ContactSwift v1.2**","lastModifiedDate":"2024-03-07"},{"lineNumber":478,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":479,"author":{"gitId":"shayaansultan"},"content":"**System:** ContactSwift v1.2","lastModifiedDate":"2024-03-07"},{"lineNumber":480,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":481,"author":{"gitId":"shayaansultan"},"content":"**Actor:** User","lastModifiedDate":"2024-03-07"},{"lineNumber":482,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":483,"author":{"gitId":"shayaansultan"},"content":"1. **User meets a new contact at a networking event:**","lastModifiedDate":"2024-03-07"},{"lineNumber":484,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":485,"author":{"gitId":"shayaansultan"},"content":"   - Command: `add contact /name Sam Johnson /email sam@example.com /number 5551234567`","lastModifiedDate":"2024-03-07"},{"lineNumber":486,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":487,"author":{"gitId":"shayaansultan"},"content":"2. **ContactSwift processes the command:**","lastModifiedDate":"2024-03-07"},{"lineNumber":488,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":489,"author":{"gitId":"shayaansultan"},"content":"   - Validates the command format and required details.","lastModifiedDate":"2024-03-07"},{"lineNumber":490,"author":{"gitId":"shayaansultan"},"content":"   - Generates a unique ID for the new contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":491,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":492,"author":{"gitId":"shayaansultan"},"content":"3. **ContactSwift updates the address book:**","lastModifiedDate":"2024-03-07"},{"lineNumber":493,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":494,"author":{"gitId":"shayaansultan"},"content":"   - Adds the contact details to the in-memory database.","lastModifiedDate":"2024-03-07"},{"lineNumber":495,"author":{"gitId":"shayaansultan"},"content":"   - Sends a success message to the user.","lastModifiedDate":"2024-03-07"},{"lineNumber":496,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":497,"author":{"gitId":"shayaansultan"},"content":"4. **User verifies the addition:**","lastModifiedDate":"2024-03-07"},{"lineNumber":498,"author":{"gitId":"shayaansultan"},"content":"   - Command: `list all`","lastModifiedDate":"2024-03-07"},{"lineNumber":499,"author":{"gitId":"shayaansultan"},"content":"   - ContactSwift displays the updated list with Sam Johnson\u0027s details.","lastModifiedDate":"2024-03-07"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"PyromancerBoom"},"content":"_{More to be added}_","lastModifiedDate":"2024-03-07"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"PyromancerBoom"},"content":"1.  Cross-Platform Compatibility: Must be executable on any mainstream operating system (Windows, macOS, Linux) with Java Runtime Environment (JRE) version 11 or above installed. This ensures that the application can serve a wide user base without being restricted by their OS choice.","lastModifiedDate":"2024-03-07"},{"lineNumber":506,"author":{"gitId":"hjungwoo01"},"content":"2.  Should be able to hold up to 1000 employees without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-14"},{"lineNumber":507,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"PyromancerBoom"},"content":"4.  The design and user interaction model of the software should cater to users with above-average typing speeds for regular English text. It implies that the command-line interface (CLI) or similar input methods should allow for faster task accomplishment compared to traditional graphical user interface (GUI) interactions involving the mouse. This would include quick command shortcuts for adding, deleting, and searching for contacts, among other actions.","lastModifiedDate":"2024-03-07"},{"lineNumber":509,"author":{"gitId":"PyromancerBoom"},"content":"5.  Intuitive User Interface: Despite the focus on efficiency and command-line usage, the software should still offer an intuitive interface for those moments when a user prefers or needs to interact with the software in a more traditional manner. This includes clear visual cues, easy navigation, and minimalistic design to reduce cognitive load.","lastModifiedDate":"2024-03-07"},{"lineNumber":510,"author":{"gitId":"PyromancerBoom"},"content":"6.  Data Security: The software should ensure that private contact details are stored securely and are not accessible to unauthorized users. This includes encryption of sensitive data and secure access control mechanisms.","lastModifiedDate":"2024-03-07"},{"lineNumber":511,"author":{"gitId":"PyromancerBoom"},"content":"7.  Data Integrity: The software should ensure that contact details are stored accurately and are not lost or corrupted due to software errors or hardware failures. This includes regular data backups and error-checking mechanisms.","lastModifiedDate":"2024-03-07"},{"lineNumber":512,"author":{"gitId":"PyromancerBoom"},"content":"8.  Portability: As a Java application packaged in a .jar file, it should ensure that all dependencies are included or easily resolvable, making the application easily portable and runnable across different systems without additional setup.","lastModifiedDate":"2024-03-07"},{"lineNumber":513,"author":{"gitId":"hjungwoo01"},"content":"9.  All operations should run in under 0.5 seconds for a typical user with a typical address book size (1000 employees).","lastModifiedDate":"2024-03-14"},{"lineNumber":514,"author":{"gitId":"hjungwoo01"},"content":"10. Should work well with 500 MB of memory, and should not consume more than 0.5 GB of memory for a typical user with a typical address book size (50k employees).","lastModifiedDate":"2024-03-14"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"PyromancerBoom"},"content":"\u003c!-- *{More to be added}* --\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"PyromancerBoom"},"content":"- **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-03-07"},{"lineNumber":521,"author":{"gitId":"PyromancerBoom"},"content":"- **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2024-03-07"},{"lineNumber":522,"author":{"gitId":"PyromancerBoom"},"content":"- **Quick Contact Addition**: Allows users to rapidly add new contacts to their address book during networking events. Generates a unique ID for each contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":524,"author":{"gitId":"PyromancerBoom"},"content":"- **Command Format**: The syntax used to input commands in ContactSwift. Example commands include adding or deleting contacts, and the format must be followed for successful execution.","lastModifiedDate":"2024-03-07"},{"lineNumber":525,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":526,"author":{"gitId":"PyromancerBoom"},"content":"- **Contact Deletion**: Enables users to remove contacts they no longer need, contributing to the organization of their address book. Requires a valid contact ID for deletion.","lastModifiedDate":"2024-03-07"},{"lineNumber":527,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":528,"author":{"gitId":"PyromancerBoom"},"content":"- **Contact Information Storage**: Allows users to store detailed information about their contacts for easy reference. In the initial version, information is stored in memory to simulate a database, text file, or CSV file.","lastModifiedDate":"2024-03-07"},{"lineNumber":529,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":530,"author":{"gitId":"PyromancerBoom"},"content":"- **All Contacts List Display**: Provides users with a complete list of all their contacts for easy browsing and reference. Users can request the display of all contacts with their details in a user-friendly format.","lastModifiedDate":"2024-03-07"},{"lineNumber":531,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":532,"author":{"gitId":"PyromancerBoom"},"content":"- **Contact ID**: A unique identifier assigned to each contact. Used in commands such as deleting a contact to specify the target contact.","lastModifiedDate":"2024-03-07"},{"lineNumber":533,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":534,"author":{"gitId":"PyromancerBoom"},"content":"- **Acceptable Values**: The valid input criteria for various fields such as contact name, email, and phone number. Ensures that the entered data meets the required format.","lastModifiedDate":"2024-03-07"},{"lineNumber":535,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":536,"author":{"gitId":"PyromancerBoom"},"content":"- **Expected Outputs**: The successful outcomes or confirmation messages expected after executing specific commands, such as adding or deleting contacts.","lastModifiedDate":"2024-03-07"},{"lineNumber":537,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":538,"author":{"gitId":"PyromancerBoom"},"content":"- **Failure Outputs**: Error messages generated when there are issues, such as missing details or incorrect command formats. Communicates problems to the user for troubleshooting.","lastModifiedDate":"2024-03-07"},{"lineNumber":539,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":540,"author":{"gitId":"PyromancerBoom"},"content":"- **Mainstream OS**: Refers to widely used operating systems including Windows, Linux, Unix, and MacOS. ContactSwift is designed to work seamlessly across these platforms.","lastModifiedDate":"2024-03-07"},{"lineNumber":541,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":542,"author":{"gitId":"PyromancerBoom"},"content":"- **Private Contact Detail**: A contact detail that is not meant to be shared with others. Ensures the confidentiality of certain information stored in the address book.","lastModifiedDate":"2024-03-07"},{"lineNumber":543,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":544,"author":{"gitId":"PyromancerBoom"},"content":"- **Must-have Features**: Quick Contact Addition, Contact Deletion, Contact Information Storage, and All Contacts List Display. Core functionalities essential for addressing the needs of business owners and managers.","lastModifiedDate":"2024-03-07"},{"lineNumber":545,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":546,"author":{"gitId":"PyromancerBoom"},"content":"- **Good to Have Features**: Additional functionalities that enhance user experience, such as tags and remarks while adding contacts, searching specific contacts, filtering based on tags, and a favorites option for quick lookup.","lastModifiedDate":"2024-03-07"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":556,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":557,"author":{"gitId":"PyromancerBoom"},"content":"testers are expected to do more _exploratory_ testing.","lastModifiedDate":"2024-03-07"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"      Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"hjungwoo01"},"content":"### Deleting a employee","lastModifiedDate":"2024-03-14"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"hjungwoo01"},"content":"1. Deleting a employee while all employees are being shown","lastModifiedDate":"2024-03-14"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"hjungwoo01"},"content":"   1. Prerequisites: List all employees using the `list` command. Multiple employees in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"hjungwoo01"},"content":"      Expected: No employee is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-03-14"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"PyromancerBoom":105,"quelinxiao":28,"hjungwoo01":53,"shayaansultan":103,"-":312}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":"# ContactSwift User Guide","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"ContactSwift is a **desktop app for managing emplyoee contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ContactSwift can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"2. Download the latest `contactswift.jar` from [here](https://github.com/AY2324S2-CS2103T-T17-2/tp/releases/tag/MVP).","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"quelinxiao"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"quelinxiao"},"content":"   ![Ui](images/v1.2.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"quelinxiao"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"   - `list` : Lists all contacts.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"   - `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 T/A r/Manager` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"   - `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"   - `clear` : Deletes all contacts.","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"   - `exit` : Exits the app.","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"- Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"- Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"- Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"- If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"quelinxiao"},"content":"### Adding an employee: `add`","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"Adds a employee to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"quelinxiao"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS T/TAG r/ROLE [t/TAG]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":85,"author":{"gitId":"quelinxiao"},"content":"**Tip:** An employee can have any number of tags (including 0)","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"- `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 T/A r/Manager`","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"- `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Appartment p/1234567 T/B r/Secretary`","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"### Filter employees by name, tags, roles, or teams: `filter`","lastModifiedDate":"2024-04-04"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"Filters the list of employees based on their name, tags, roles, or teams.","lastModifiedDate":"2024-04-04"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"Format: `filter [n/NAME] [t/TAG] [r/ROLE] [T/TEAM]`","lastModifiedDate":"2024-04-04"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"- Filters the employee list according to the specified criteria.","lastModifiedDate":"2024-04-04"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"- At least one of the parameters must be provided.","lastModifiedDate":"2024-04-04"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"- Employees matching all provided criteria will be listed (i.e., `AND` search).","lastModifiedDate":"2024-04-04"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"- Multiple values for each parameter can be provided, separated by a space.","lastModifiedDate":"2024-04-04"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"Examples:","lastModifiedDate":"2024-04-04"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"- `filter n/John Doe` : Shows all employees with the name `John Doe`.","lastModifiedDate":"2024-04-04"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"- `filter t/friend` : Shows all employees tagged as `friend`.","lastModifiedDate":"2024-04-04"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"- `filter r/Manager T/HR` : Shows all employees who are managers and belong to the HR team.","lastModifiedDate":"2024-04-04"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"- `filter t/friend t/colleague r/Technician` : Shows all employees tagged as `friend` and `colleague` who are also technicians.","lastModifiedDate":"2024-04-04"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"- `filter n/Jane Doe t/friend r/Executive` : Shows employees named `Jane Doe`, tagged as `friend`, and with the role of `Executive`.","lastModifiedDate":"2024-04-04"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-04"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"### Listing all employees : `list`","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"Shows a list of all employees in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"### Editing a employee : `edit`","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"Edits an existing employee in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"quelinxiao"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [T/TEAM] [r/ROLE] [t/TAG]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"- Edits the employee at the specified `INDEX`. The index refers to the index number shown in the displayed employee list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"- At least one of the optional fields must be provided.","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"- Existing values will be updated to the input values.","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"- When editing tags, the existing tags of the employee will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"- You can remove all the employee’s tags by typing `t/` without","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"- `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st employee to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"- `edit 2 n/Betsy Crower t/` Edits the name of the 2nd employee to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"### Locating employees by name: `find`","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"Finds employees whose names contain any of the given keywords.","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"- The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"- Only the name is searched.","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"- Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"- `find John` returns `john` and `John Doe`","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"- `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"### Deleting a employee : `delete`","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"hjungwoo01"},"content":"Deletes the specified employee from the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"quelinxiao"},"content":"Format: `delete INDEX`/`delete UID`/`delete NAME`","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"- Deletes the employee at the specified `INDEX`/`UID`/`NAME`.","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"- The index refers to the index number shown in the displayed employee list.","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"- The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"- The UID refers to the user ID displayed beside the employee\u0027s name.","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"- `list` followed by `delete 2` deletes the 2nd employee in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"- `delete betsy` deletes the the employee with the name `betsy` if there are no duplicates. In the case of duplicates, a list will be provided to prompt for specifics.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"AddressBook data are saved automatically as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-09-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Furthermore, certain edits can cause the AddressBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2023-09-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":213,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"PyromancerBoom"},"content":"| Action     | Format, Examples                                                                                                                                                                                  |","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"PyromancerBoom"},"content":"| ---------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"PyromancerBoom"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS T/TEAM r/ROLE [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 T/A r/Cleaner t/friend t/colleague` |","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"PyromancerBoom"},"content":"| **Clear**  | `clear`                                                                                                                                                                                           |","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"PyromancerBoom"},"content":"| **Delete** | `delete INDEX`/`delete UID`/`delete NAME`\u003cbr\u003e e.g., `delete 3`, `delete 101`, `delete John`                                                                                                       |","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"PyromancerBoom"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [T/TEAM] [r/ROLE] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                     |","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"PyromancerBoom"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                        |","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"PyromancerBoom"},"content":"| **List**   | `list`                                                                                                                                                                                            |","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"PyromancerBoom"},"content":"| **Help**   | `help`                                                                                                                                                                                            |","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"PyromancerBoom":48,"quelinxiao":12,"hjungwoo01":28,"-":137}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eMy Product\u003c/a\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"shayaansultan":1,"-":66}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"!include style.puml","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"participant \"ac:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"participant \"cr:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"participant \"toAdd:Employee\" as Employee MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"participant \"e:Employee\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"box Storage MODEL_COLOR_T2","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"participant \":Storage\" as Storage MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"[-\u003e LogicManager : execute(\"add [args]\")","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add [args]\")","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"[args]\")","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"create Employee","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"AddCommandParser -\u003e Employee","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"activate Employee","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"Employee --\u003e AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"deactivate Employee","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"create AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"activate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"AddCommand --\u003e AddCommandParser : ac","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"AddCommandParser --\u003e AddressBookParser : ac","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"AddressBookParser --\u003e LogicManager : ac","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"AddressBookParser -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"destroy AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"LogicManager -\u003e AddCommand : execute(commandText)","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"activate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"AddCommand -\u003e Model : addEmployee(toAdd)","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"create CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"activate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"CommandResult --\u003e AddCommand : cr","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"AddCommand --\u003e LogicManager : cr","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"LogicManager -\u003e Model : getAddressBook()","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"activate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"Model --\u003e LogicManager : ab","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"LogicManager -\u003e Storage : saveAddressBook(ab)","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"activate Storage","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"Storage --\u003e LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"deactivate Storage","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"hjungwoo01":95}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteEmployee(p)","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"quelinxiao":1,"-":38}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":"AddressBook *-right-\u003e \"1\" UniqueEmployeeList","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"UniqueTagList -[hidden]down- UniqueEmployeeList","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"UniqueTagList -[hidden]down- UniqueEmployeeList","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"UniqueEmployeeList -right-\u003e Employee","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"Employee -up-\u003e \"*\" Tag","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Name","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Phone","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Email","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Address","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Team","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Role","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"quelinxiao":11,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"DeleteCommand -\u003e Model : deleteEmployee(1)","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"quelinxiao":1,"-":69}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"Class UniqueEmployeeList","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"Class Employee","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"quelinxiao"},"content":"Class Role","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"Class Team","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"AddressBook *--\u003e \"1\" UniqueEmployeeList","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"UniqueEmployeeList --\u003e \"~* all\" Employee","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Name","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Phone","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Email","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Address","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Role","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e Team","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"*\" Tag","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"Employee -[hidden]up--\u003e I","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"quelinxiao"},"content":"UniqueEmployeeList -[hidden]right-\u003e I","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"ModelManager --\u003e \"~* filtered\" Employee","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"quelinxiao":16,"-":42}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"Class EmployeeListPanel","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"Class EmployeeCard","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"MainWindow *-down-\u003e \"1\" EmployeeListPanel","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"EmployeeListPanel -down-\u003e \"*\" EmployeeCard","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"EmployeeListPanel --|\u003e UiPart","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"quelinxiao"},"content":"EmployeeCard --|\u003e UiPart","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"EmployeeCard ..\u003e Model","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"quelinxiao"},"content":"EmployeeListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"quelinxiao":8,"-":52}},{"path":"docs/diagrams/UpdatedEmployeeClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"quelinxiao"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"quelinxiao"},"content":"!include style.puml","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"quelinxiao"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"quelinxiao"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"quelinxiao"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Name","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Phone","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Email","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Address","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Team","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"1\" Role","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"Employee *--\u003e \"*\" Tag","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"quelinxiao":14,"shayaansultan":1}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"ecp -\u003e ec ++: index, editEmployeeDescriptor","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"hjungwoo01":1,"-":21}},{"path":"docs/team/hjungwoo01.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"  layout: default.md","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"  title: \"Jay Hong\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"* **New Feature**: Updated Developer Guide","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"* **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"  * Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"  * User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    * Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    * Work in progress","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"hjungwoo01":26}},{"path":"docs/team/pyromancerboom.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"  layout: default.md","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"  title: \"Priyansh Bimbisariye\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"- **New Feature**: something","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"- **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"- **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"  - Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"- **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"  - User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"    - Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"  - Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"    - Work in progress","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"PyromancerBoom":28}},{"path":"docs/team/quelinxiao.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"quelinxiao"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"quelinxiao"},"content":"  layout: default.md","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"quelinxiao"},"content":"  title: \"Que Linxiao\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"quelinxiao"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"quelinxiao"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"* **New Feature**: Updated AboutUs and incharge of documentation","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"* **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"  * Work in progress","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"  * User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"quelinxiao"},"content":"    * Work in progress","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"quelinxiao"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"    * Work in progress","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"quelinxiao":26,"shayaansultan":1}},{"path":"docs/team/shayaansultan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"  layout: default.md","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"  title: \"Shayaan Sultan\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"---","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"* **New Feature**: Updated AboutUs and incharge of documentation","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"* **Project management**:","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"  * Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"* **Documentation**:","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"  * User Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    * Work in progress","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"  * Developer Guide:","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    * Work in progress","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"shayaansultan":26}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":" * Changes the remark of an existing employee in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"            + \": Edits the remark of the employee identified \"","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"            + \"by the index number used in the last employee listing. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"     * @param index of the employee in the filtered employee list to edit the remark","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"     * @param remark of the employee to be updated to","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"hjungwoo01"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of employee data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the employee’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"hjungwoo01"},"content":"Create a new `Remark` in `seedu.address.model.employee`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"hjungwoo01"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2023-09-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"hjungwoo01"},"content":"public PersonCard(Person employee, int displayedIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"hjungwoo01"},"content":"    remark.setText(employee.getRemark().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"hjungwoo01"},"content":"        Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":348,"author":{"gitId":"hjungwoo01"},"content":"        Person editedEmployee \u003d new Person(","lastModifiedDate":"2024-03-14"},{"lineNumber":349,"author":{"gitId":"hjungwoo01"},"content":"                employeeToEdit.getName(), employeeToEdit.getPhone(), employeeToEdit.getEmail(),","lastModifiedDate":"2024-03-14"},{"lineNumber":350,"author":{"gitId":"hjungwoo01"},"content":"                employeeToEdit.getAddress(), remark, employeeToEdit.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"hjungwoo01"},"content":"        model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(generateSuccessMessage(editedEmployee));","lastModifiedDate":"2024-03-14"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"hjungwoo01"},"content":"     * {@code employeeToEdit}.","lastModifiedDate":"2024-03-14"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"hjungwoo01"},"content":"    private String generateSuccessMessage(Person employeeToEdit) {","lastModifiedDate":"2024-03-14"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"hjungwoo01"},"content":"        return String.format(message, employeeToEdit);","lastModifiedDate":"2024-03-14"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"hjungwoo01":19,"-":383}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.employee.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"  \"employees\": [ {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hjungwoo01":2,"-":113}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"hjungwoo01"},"content":"       Person employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"hjungwoo01"},"content":"       Person editedEmployee \u003d createEditedPerson(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"       if (!employeeToEdit.isSamePerson(editedEmployee) \u0026\u0026 model.hasPerson(editedEmployee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"hjungwoo01"},"content":"       model.setPerson(employeeToEdit, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"hjungwoo01"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedEmployee));","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"hjungwoo01"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the employee data.","lastModifiedDate":"2024-03-14"},{"lineNumber":211,"author":{"gitId":"hjungwoo01"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ employees.\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":212,"author":{"gitId":"hjungwoo01"},"content":"     FYI, The \u0027filtered list\u0027 is the list of employees resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the employees so that the user can see the edited employee along with all other employees. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":213,"author":{"gitId":"hjungwoo01"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of employees is being tracked.","lastModifiedDate":"2024-03-14"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"hjungwoo01"},"content":"        employees.addAll(","lastModifiedDate":"2024-03-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hjungwoo01":10,"-":301}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"     * book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"     * The data from the sample address book will be used instead if","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code storage}\u0027s address book is not found,","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"     * or an empty address book will be used instead if errors occur when reading","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code storage}\u0027s address book.","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"        // Update config file in case it was missing to begin with or there are","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"        // new/unused fields","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"PyromancerBoom"},"content":"     * file path,","lastModifiedDate":"2024-03-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"        // Update prefs file in case it was missing to begin with or there are","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"        // new/unused fields","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PyromancerBoom":12,"-":180}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    /** Returns an unmodifiable view of the filtered list of employees */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hjungwoo01":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        return model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hjungwoo01":3,"-":85}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX \u003d \"The employee index provided is invalid\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public static final String MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID \u003d \"The employee UID provided is invalid\";","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_EMPLOYEES_LISTED_OVERVIEW \u003d \"%1$d employees listed!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_EMPLOYEE_NOT_FOUND \u003d \"The employee could not be found.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     * Formats the {@code employee} for display to the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    public static String format(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        builder.append(employee.getName())","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"                .append(\"; ID: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"                .append(employee.getUid())","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"                .append(employee.getPhone())","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"                .append(employee.getEmail())","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"                .append(employee.getAddress())","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        employee.getTags().forEach(builder::append);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PyromancerBoom":2,"hjungwoo01":12,"shayaansultan":1,"-":41}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":" * Adds an employee to the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a employee to the address book. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"quelinxiao"},"content":"            + PREFIX_TEAM + \"TEAM \"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"            + PREFIX_TEAM + \"A \"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"            + PREFIX_ROLE + \"Manager \"","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New employee added: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in the address book\";","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    private final Employee toAdd;","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     * Creates an AddCommand to add the specified {@code Employee}","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    public AddCommand(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        toAdd \u003d employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an {@code Employee} with the details of the employee to be added","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"     * @return Employee to be added","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    public Employee getEmployee() {","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        return toAdd;","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        if (model.hasEmployee(toAdd)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        model.addEmployee(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"quelinxiao":6,"hjungwoo01":19,"-":73}},{"path":"src/main/java/seedu/address/logic/commands/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":" * Adds a task to the todo list of an employee.","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    public static final String COMMAND_WORD \u003d \"addTask\";","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a task to the todo list of an employee. \"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"            + \"Parameters: UID (must be a positive integer) \"","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"            + \"TASK_DESCRIPTION\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 Buy milk\";","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    private final UniqueId uid;","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    private final Description description;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"     * Creates an AddTaskCommand to add a task to the todo list of an employee.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    public AddTaskCommand(UniqueId uid, Description description) {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     * Adds a task to the todo list of an employee.","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * @return A {@code CommandResult} representing the result of the command","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     *         execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"    private CommandResult addTask(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        Employee employee \u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        for (Employee e : lastShownList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"            assert uid !\u003d null;","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            if ((e.getUid().getUidValue()).equals(uid.getUidValue())) {","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"                employee \u003d e;","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"                break;","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        if (employee \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        employee.addTask(description);","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(Model.PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"Task added: \" + description + \" to employee: \" + employee.getName());","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, description));","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        boolean employeeExists \u003d lastShownList.stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"                .anyMatch(employee -\u003e employee.getUid().equals(uid));","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        if (!employeeExists) {","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"            return addTask(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"            return new CommandResult(e.getMessage());","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"                || (other instanceof AddTaskCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"                        \u0026\u0026 uid.equals(((AddTaskCommand) other).uid)","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"                        \u0026\u0026 description.equals(((AddTaskCommand) other).description));","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"        return \"Add task for employee with UID: \" + uid + \" and description: \" + description;","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shayaansultan":89,"hjungwoo01":11}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":" * Deletes a employee identified using it\u0027s displayed index from the address","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":" * book.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"            + \": Deletes the employee identified by the index number used in the displayed employee list.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_DELETE_EMPLOYEE_SUCCESS \u003d \"Deleted Employee: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    public static final String MESSAGE_DELETE_EMPLOYEE_DUPLICATE \u003d \"Multiple employees with the same name found. \"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"            + \"Please use the unique ID to delete the employee.\";","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    private final String targetName;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"    private final UniqueId uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"     * Null constructor for DeleteCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    public DeleteCommand() {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        this.targetName \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        this.uid \u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"     * Constructor for index-based deletion","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"     * @param targetIndex index of the employee in the filtered employee list to","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"     *                    delete","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        this.targetName \u003d null; // Name is not used in this context","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d null; // UniqueId is not used in this context","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     * Constructor for name-based deletion","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     * @param targetName name of the employee to delete","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    public DeleteCommand(String targetName) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        this.targetIndex \u003d null; // Index is not used in this context","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        this.targetName \u003d targetName;","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d null; // UniqueId is not used in this context","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"     * Constructor for unique id-based deletion","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"     * @param uid unique id of the employee to delete","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"    public DeleteCommand(UniqueId uid) {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        this.targetIndex \u003d null; // Index is not used in this context","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"        this.targetName \u003d null; // Name is not used in this context","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        if (targetIndex !\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"            // Index-based deletion logic remains the same","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"            return deleteByIndex(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"        } else if (targetName !\u003d null \u0026\u0026 !targetName.isEmpty()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"            // Implement name-based deletion logic","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"            return deleteByName(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"        } else if (uid !\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"            // Implement unique id-based deletion logic","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"            return deleteByUid(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"     * Deletes a employee by index","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"     * @param model the model to execute the command","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"     * @return the result of the command","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"     * @throws CommandException if the index is invalid","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"    private CommandResult deleteByIndex(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        model.deleteEmployee(employeeToDelete);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, Messages.format(employeeToDelete)));","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"     * Deletes a employee by name","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"     * @param model the model to execute the command","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"     * @return the result of the command","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"     * @throws CommandException if the employee is not found","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"    CommandResult deleteByName(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"shayaansultan"},"content":"        List\u003cEmployee\u003e employeesWithTargetName \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"        for (Employee employee : lastShownList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"            if (employee.getName().fullName.equalsIgnoreCase(targetName)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"shayaansultan"},"content":"                employeesWithTargetName.add(employee);","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"shayaansultan"},"content":"        if (employeesWithTargetName.size() \u003e 1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"            throw new CommandException(\"Multiple employees with this name found. Please delete by uid.\\n\"","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"                    + \"Format: delete uid/UID_NUMBER\\n\" + \"Example: delete uid/101\");","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"shayaansultan"},"content":"        } else if (employeesWithTargetName.size() \u003d\u003d 1) {","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"shayaansultan"},"content":"            model.deleteEmployee(employeesWithTargetName.get(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"shayaansultan"},"content":"            return new CommandResult(","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"shayaansultan"},"content":"                    String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, Messages.format(employeesWithTargetName.get(0))));","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"shayaansultan"},"content":"        } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_EMPLOYEE_NOT_FOUND);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"     * Deletes an employee by unique id","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"PyromancerBoom"},"content":"     * @param model the model to execute the command","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"PyromancerBoom"},"content":"     * @return the result of the command","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws CommandException if the employee is not found","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"PyromancerBoom"},"content":"    private CommandResult deleteByUid(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"PyromancerBoom"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"        for (Employee employee : lastShownList) {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"            assert uid !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"            if (employee.getUid().getUidValue().equals(uid.getUidValue())) {","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"                model.deleteEmployee(employee);","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_EMPLOYEE_SUCCESS, Messages.format(employee)));","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"        throw new CommandException(Messages.MESSAGE_EMPLOYEE_NOT_FOUND);","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"hjungwoo01"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":177,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"hjungwoo01"},"content":"        // Check if both commands have the same index","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"hjungwoo01"},"content":"        boolean isIndexEqual \u003d targetIndex !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 otherDeleteCommand.targetIndex !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 targetIndex.equals(otherDeleteCommand.targetIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":183,"author":{"gitId":"hjungwoo01"},"content":"        // Check if both commands have the same UID","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"hjungwoo01"},"content":"        boolean isUidEqual \u003d uid !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 otherDeleteCommand.uid !\u003d null","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 uid.equals(otherDeleteCommand.uid);","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"hjungwoo01"},"content":"        boolean isNameEqual \u003d targetName !\u003d null","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 otherDeleteCommand.targetName !\u003d null","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 targetName.equalsIgnoreCase(otherDeleteCommand.targetName);","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"hjungwoo01"},"content":"        return isIndexEqual || isUidEqual || isNameEqual;","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2019-02-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PyromancerBoom":31,"shayaansultan":23,"hjungwoo01":87,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":" * Edits the details of an existing employee in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the employee identified \"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"            + \"by the index number used in the displayed employee list. \"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"            + \"[\" + PREFIX_TEAM + \"TEAM] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"quelinxiao"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_EDIT_EMPLOYEE_SUCCESS \u003d \"Edited Employee: %1$s\";","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"This employee already exists in the address book.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    private final EditEmployeeDescriptor editEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"     * @param index                  of the employee in the filtered employee list","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"     *                               to edit","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"     * @param editEmployeeDescriptor details to edit the employee with","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    public EditCommand(Index index, EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        this.editEmployeeDescriptor \u003d new EditEmployeeDescriptor(editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedEmployee \u003d createEditedEmployee(employeeToEdit, editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"        if (!employeeToEdit.isSameEmployee(editedEmployee) \u0026\u0026 model.hasEmployee(editedEmployee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        model.setEmployee(employeeToEdit, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EMPLOYEE_SUCCESS, Messages.format(editedEmployee)));","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"     * Creates and returns a {@code Employee} with the details of","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code employeeToEdit}","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"     * edited with {@code editEmployeeDescriptor}.","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"    private static Employee createEditedEmployee(Employee employeeToEdit,","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"            EditEmployeeDescriptor editEmployeeDescriptor) {","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"        assert employeeToEdit !\u003d null;","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        Name updatedName \u003d editEmployeeDescriptor.getName().orElse(employeeToEdit.getName());","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"        Phone updatedPhone \u003d editEmployeeDescriptor.getPhone().orElse(employeeToEdit.getPhone());","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"        Email updatedEmail \u003d editEmployeeDescriptor.getEmail().orElse(employeeToEdit.getEmail());","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"        Address updatedAddress \u003d editEmployeeDescriptor.getAddress().orElse(employeeToEdit.getAddress());","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"quelinxiao"},"content":"        Team updatedTeam \u003d editEmployeeDescriptor.getTeam().orElse(employeeToEdit.getTeam());","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"quelinxiao"},"content":"        Role updatedRole \u003d editEmployeeDescriptor.getRole().orElse(employeeToEdit.getRole());","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEmployeeDescriptor.getTags().orElse(employeeToEdit.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"        UniqueId uid \u003d employeeToEdit.getUid();","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks \u003d employeeToEdit.getTasks();","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"quelinxiao"},"content":"        return new Employee(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTeam, updatedRole,","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"shayaansultan"},"content":"                updatedTags, uid, tasks);","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 editEmployeeDescriptor.equals(otherEditCommand.editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"                .add(\"editEmployeeDescriptor\", editEmployeeDescriptor)","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"PyromancerBoom"},"content":"     * Stores the details to edit the employee with. Each non-empty field value will","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"PyromancerBoom"},"content":"     * replace the","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"     * corresponding field value of the employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"    public static class EditEmployeeDescriptor {","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"quelinxiao"},"content":"        private Team team;","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"quelinxiao"},"content":"        private Role role;","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"        public EditEmployeeDescriptor() {","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"hjungwoo01"},"content":"        public EditEmployeeDescriptor(EditEmployeeDescriptor toCopy) {","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"quelinxiao"},"content":"            setTeam(toCopy.team);","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"quelinxiao"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"quelinxiao"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, team, role, tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"quelinxiao"},"content":"        public void setTeam(Team team) {","lastModifiedDate":"2024-03-14"},{"lineNumber":218,"author":{"gitId":"quelinxiao"},"content":"            this.team \u003d team;","lastModifiedDate":"2024-03-14"},{"lineNumber":219,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":220,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":221,"author":{"gitId":"quelinxiao"},"content":"        public Optional\u003cTeam\u003e getTeam() {","lastModifiedDate":"2024-03-14"},{"lineNumber":222,"author":{"gitId":"quelinxiao"},"content":"            return Optional.ofNullable(team);","lastModifiedDate":"2024-03-14"},{"lineNumber":223,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":224,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":225,"author":{"gitId":"quelinxiao"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2024-03-14"},{"lineNumber":226,"author":{"gitId":"quelinxiao"},"content":"            this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":227,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"quelinxiao"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"quelinxiao"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"PyromancerBoom"},"content":"         * Returns an unmodifiable tag set, which throws","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"PyromancerBoom"},"content":"         * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":258,"author":{"gitId":"hjungwoo01"},"content":"            if (!(other instanceof EditEmployeeDescriptor)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":262,"author":{"gitId":"hjungwoo01"},"content":"            EditEmployeeDescriptor otherEditEmployeeDescriptor \u003d (EditEmployeeDescriptor) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"hjungwoo01"},"content":"            return Objects.equals(name, otherEditEmployeeDescriptor.name)","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"hjungwoo01"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditEmployeeDescriptor.phone)","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"hjungwoo01"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditEmployeeDescriptor.email)","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"hjungwoo01"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditEmployeeDescriptor.address)","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"quelinxiao"},"content":"                    \u0026\u0026 Objects.equals(team, otherEditEmployeeDescriptor.team)","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"quelinxiao"},"content":"                    \u0026\u0026 Objects.equals(role, otherEditEmployeeDescriptor.role)","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"hjungwoo01"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditEmployeeDescriptor.tags);","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":279,"author":{"gitId":"quelinxiao"},"content":"                    .add(\"team\", team)","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"quelinxiao"},"content":"                    .add(\"role\", role)","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"PyromancerBoom":12,"quelinxiao":31,"hjungwoo01":49,"shayaansultan":3,"-":190}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * Filters the employee list based on the given criteria.","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    private final Predicate\u003cEmployee\u003e predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    private final String filterDescription;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a FilterCommand to filter the employee list based on the given criteria.","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     * @param predicate The predicate to filter the employee list.","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * @param filterDescription The description of the filter criteria.","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public FilterCommand(Predicate\u003cEmployee\u003e predicate, String filterDescription) {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        this.filterDescription \u003d filterDescription;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        if (model.getFilteredEmployeeList().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(\"No employees found matching the criteria: \" + filterDescription);","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(\"Filtered list based on: \" + filterDescription);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the predicate used to filter the employee list.","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"     * @return The predicate used to filter the employee list.","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    public Predicate\u003cEmployee\u003e getPredicate() {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        return predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"hjungwoo01":46}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":" * Finds and lists all employees in address book whose name contains any of the argument keywords.","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all employees whose names contain any of \"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"                String.format(Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW, model.getFilteredEmployeeList().size()));","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hjungwoo01":5,"-":53}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":" * Lists all employees in the address book to the user.","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all employees\";","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hjungwoo01":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/MarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Marks a task as done for an employee.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class MarkTaskCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task marked as done: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private final UniqueId uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     * Constructor for MarkTaskCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * @param uid UniqueId of the employee","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * @param taskNumber Task number to be marked as done","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public MarkTaskCommand(UniqueId uid, int taskNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        this.taskNumber \u003d taskNumber - 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        for (Employee e : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"            if (e.getUid().equals(this.uid)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"                employee \u003d e;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        if (employee \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            employee.markTask(this.taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            model.updateFilteredEmployeeList(Model.PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, employee.getTask(this.taskNumber)));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     * Getter for UniqueId","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"     * @return UniqueId of the employee","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    public UniqueId getUid() {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        return this.uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     * Getter for task number","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * @return Task number to be marked as done","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        return this.taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":77}},{"path":"src/main/java/seedu/address/logic/commands/ShowAllCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":" * Shows all employees in the employee list to the user.","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"public class ShowAllCommand extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"    public static final String COMMAND_WORD \u003d \"showAll\";","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(employee -\u003e true);","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(\"Showing all employees.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"hjungwoo01":16}},{"path":"src/main/java/seedu/address/logic/commands/UnmarkTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Marks a task as not done for an employee.","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class UnmarkTaskCommand extends Command {","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task unmarked as not done: %1$s\";","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private final UniqueId uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    private final int taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     * Constructor for UnmarkTaskCommand","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"     * @param uid UniqueId of the employee","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * @param taskNumber Task number to be marked as done","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public UnmarkTaskCommand(UniqueId uid, int taskNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        this.taskNumber \u003d taskNumber - 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e lastShownList \u003d model.getFilteredEmployeeList();","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d null;","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        for (Employee e : lastShownList) {","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"            if (e.getUid().equals(this.uid)) {","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"                employee \u003d e;","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"                break;","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        if (employee \u003d\u003d null) {","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            employee.unmarkTask(this.taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            model.updateFilteredEmployeeList(Model.PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, employee.getTask(this.taskNumber)));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     * Getter for UniqueId","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"     * @return UniqueId of the employee","lastModifiedDate":"2024-04-03"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    public UniqueId getUid() {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        return this.uid;","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     * Getter for task number","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * @return Task number to be marked as not done","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    public int getTaskNumber() {","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        return this.taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":77}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"                PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"                PREFIX_TEAM, PREFIX_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"quelinxiao"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"quelinxiao"},"content":"                PREFIX_TEAM, PREFIX_ROLE)","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TEAM,","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"quelinxiao"},"content":"                PREFIX_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"        Team team \u003d ParserUtil.parseTeam(argMultimap.getValue(PREFIX_TEAM).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"quelinxiao"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"        UniqueId uid \u003d new UniqueId();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        uid.generateNewId();","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"        Employee employee \u003d new Employee(name, phone, email, address, team, role, tagList, uid, tasks);","lastModifiedDate":"2024-04-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        return new AddCommand(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"     * in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"PyromancerBoom":8,"quelinxiao":8,"hjungwoo01":9,"shayaansultan":5,"-":49}},{"path":"src/main/java/seedu/address/logic/parser/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" * Parses input arguments and creates a new AddTaskCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"     * Parses the given {@code String} of arguments in the context of the","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"     * AddTaskCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        String[] splitArgs \u003d args.trim().split(\" \", 2);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        if (splitArgs.length \u003c 2) {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"            throw new ParseException(\"Invalid command format!\");","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        String content \u003d splitArgs[1];","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        if (!Description.isValidDescription(content)) {","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        Description description \u003d new Description(content);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        String uidStr \u003d splitArgs[0].trim();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        System.out.println(\"uidStr\" + uidStr);","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        if (uidStr.isEmpty() || !uidStr.startsWith(\"uid/\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"            throw new ParseException(\"Invalid UID format!\");","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        UniqueId uid \u003d new UniqueId(uidStr.substring(4));","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        return new AddTaskCommand(uid, description);","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shayaansultan":44}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.ShowAllCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"        case ShowAllCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"            return new ShowAllCommand();","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        case MarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"            return new MarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"        case UnmarkTaskCommand.COMMAND_WORD:","lastModifiedDate":"2024-04-03"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"            return new UnmarkTaskCommandParser().parse(arguments);","lastModifiedDate":"2024-04-03"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"shayaansultan":4,"hjungwoo01":16,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"    public static final Prefix PREFIX_TEAM \u003d new Prefix(\"T/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"quelinxiao":2,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        // Check if \"uid\" is part of the arguments and parse accordingly","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        if (trimmedArgs.startsWith(\"uid/\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"            return parseDeleteByUniqueId(trimmedArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"            Index index \u003d ParserUtil.parseIndex(trimmedArgs);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"            // If parsing the index fails, try to parse as a name","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"            return parseDeleteByName(trimmedArgs);","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"     * @param args Arguments to be parsed","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"     * @return DeleteCommand object for execution","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    private DeleteCommand parseDeleteByUniqueId(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        String[] splitArgs \u003d args.split(\"/\", 2);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        if (splitArgs.length !\u003d 2 || splitArgs[1].isEmpty() || !splitArgs[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        UniqueId uid \u003d new UniqueId(splitArgs[1]);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        return new DeleteCommand(uid);","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     * @param name Name of the employee to be deleted","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     * @return DeleteCommand object for execution","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    private DeleteCommand parseDeleteByName(String name) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        if (name.isEmpty() || !name.matches(\"[a-zA-Z ]+\")) {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        return new DeleteCommand(name);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hjungwoo01":43,"shayaansultan":3,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TEAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"quelinxiao"},"content":"                        PREFIX_ROLE, PREFIX_TAG);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TEAM,","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"quelinxiao"},"content":"                PREFIX_ROLE);","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            editEmployeeDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"            editEmployeeDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"            editEmployeeDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"            editEmployeeDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"quelinxiao"},"content":"        if (argMultimap.getValue(PREFIX_TEAM).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"quelinxiao"},"content":"            editEmployeeDescriptor.setTeam(ParserUtil.parseTeam(argMultimap.getValue(PREFIX_TEAM).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"quelinxiao"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"quelinxiao"},"content":"            editEmployeeDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEmployeeDescriptor::setTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        if (!editEmployeeDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        return new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"quelinxiao":12,"hjungwoo01":9,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * Parses input arguments and creates a new FilterCommand object.","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, PREFIX_TAG,","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"                        PREFIX_TEAM, PREFIX_ROLE);","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        if (!argMultimap.getValue(PREFIX_NAME).isPresent()","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_TAG).isPresent()","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_TEAM).isPresent()","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 !argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(\"Invalid arguments for filter command: \" + args);","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        Predicate\u003cEmployee\u003e predicate \u003d employee -\u003e true;","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        StringJoiner filterDescription \u003d new StringJoiner(\", \");","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        if (argMultimap.getValue(PREFIX_TAG).isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"            Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"            predicate \u003d predicate.and(employee -\u003e employee.getTags().contains(tag));","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"            filterDescription.add(\"Tag: \" + tag);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        if (argMultimap.getValue(PREFIX_TEAM).isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"            String teamName \u003d argMultimap.getValue(PREFIX_TEAM).get().trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"            predicate \u003d predicate.and(employee -\u003e employee.getTeam().toString().equalsIgnoreCase(teamName));","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"            filterDescription.add(\"Team: \" + teamName);","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"            Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            predicate \u003d predicate.and(employee -\u003e employee.getRole().equals(role));","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            filterDescription.add(\"Role: \" + role);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        if (argMultimap.getValue(CliSyntax.PREFIX_NAME).isPresent()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"            String nameString \u003d argMultimap.getValue(CliSyntax.PREFIX_NAME).get().trim();","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"            predicate \u003d predicate.and(employee -\u003e employee.getName().fullName.equalsIgnoreCase(nameString));","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"            filterDescription.add(\"Name: \" + nameString);","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        return new FilterCommand(predicate, filterDescription.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    private void requireNonNull(String args) {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        if (args \u003d\u003d null) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"            throw new NullPointerException();","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"hjungwoo01":71}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"hjungwoo01":1,"-":32}},{"path":"src/main/java/seedu/address/logic/parser/MarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":" * Parses input arguments and creates a new MarkTaskCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"public class MarkTaskCommandParser implements Parser\u003cMarkTaskCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"    public MarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"        String[] splitArgs \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"        if (splitArgs.length !\u003d 2 || !splitArgs[0].startsWith(\"uid/\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(\"Invalid command format! Expected format: mark uid/[UID] [TASK_NUMBER]\");","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d new UniqueId(splitArgs[0].substring(4));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        int taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"            taskNumber \u003d Integer.parseInt(splitArgs[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(\"Invalid task number format! Task number should be an integer.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        return new MarkTaskCommand(uid, taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":" * Contains utility methods used for parsing strings in the various *Parser","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":" * classes.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"     * and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     *                        unsigned integer).","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"quelinxiao"},"content":"     * Parses a {@code String team} into a {@code Team}.","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"quelinxiao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"quelinxiao"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"quelinxiao"},"content":"     * @throws ParseException if the given {@code team} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"quelinxiao"},"content":"    public static Team parseTeam(String team) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"quelinxiao"},"content":"        requireNonNull(team);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"quelinxiao"},"content":"        String trimmedTeamName \u003d team.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"quelinxiao"},"content":"        if (!Team.isValidTeam(trimmedTeamName)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"quelinxiao"},"content":"            throw new ParseException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"quelinxiao"},"content":"        return new Team(trimmedTeamName);","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"quelinxiao"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"quelinxiao"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"quelinxiao"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"quelinxiao"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"quelinxiao"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"quelinxiao"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"quelinxiao"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"quelinxiao"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"quelinxiao"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"quelinxiao"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"PyromancerBoom":7,"quelinxiao":31,"hjungwoo01":5,"-":117}},{"path":"src/main/java/seedu/address/logic/parser/UnmarkTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":" * Parses input arguments and creates a new UnmarkTaskCommand object","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"public class UnmarkTaskCommandParser implements Parser\u003cUnmarkTaskCommand\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"    public UnmarkTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"        String[] splitArgs \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"        if (splitArgs.length !\u003d 2 || !splitArgs[0].startsWith(\"uid/\")) {","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(\"Invalid command format! Expected format: mark uid/[UID] [TASK_NUMBER]\");","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d new UniqueId(splitArgs[0].substring(4));","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        int taskNumber;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        try {","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"            taskNumber \u003d Integer.parseInt(splitArgs[1]);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"            throw new ParseException(\"Invalid task number format! Task number should be an integer.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        return new UnmarkTaskCommand(uid, taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueEmployeeList;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Duplicates are not allowed (by .isSameEmployee comparison)","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    private final UniqueEmployeeList employees;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        employees \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     * Creates an AddressBook using the Employees in the {@code toBeCopied}","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     * Replaces the contents of the employee list with {@code employees}.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"     * {@code employees} must not contain duplicate employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        this.employees.setEmployees(employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        setEmployees(newData.getEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    //// employee-level operations","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     * Returns true if a employee with the same identity as {@code employee} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        return employees.contains(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"quelinxiao"},"content":"     * Adds an employee to the address book.","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * The employee must not already exist in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    public void addEmployee(Employee p) {","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        employees.add(p);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"     * Replaces the given employee {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"     * existing employee in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"        employees.setEmployee(target, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"    public void removeEmployee(Employee key) {","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        employees.remove(key);","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"                .add(\"employees\", employees)","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        return employees.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"        return employees.equals(otherAddressBook.employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"        return employees.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"quelinxiao":1,"hjungwoo01":32,"-":98}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    Predicate\u003cEmployee\u003e PREDICATE_SHOW_ALL_EMPLOYEES \u003d unused -\u003e true;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"     * Returns true if a employee with the same identity as {@code employee} exists in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    boolean hasEmployee(Employee employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"     * Deletes the given employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"     * The employee must exist in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    void deleteEmployee(Employee target);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"     * Adds the given employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"     * {@code employee} must not already exist in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    void addEmployee(Employee employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     * Replaces the given employee {@code target} with {@code editedEmployee}.","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"     * another existing employee in the address book.","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"    void setEmployee(Employee target, Employee editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"    /** Returns an unmodifiable view of the filtered employee list */","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    ObservableList\u003cEmployee\u003e getFilteredEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"     * Updates the filter of the filtered employee list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"    void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"    void markTask(Employee employeeToMark, int taskIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hjungwoo01":20,"-":70}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    private final FilteredList\u003cEmployee\u003e filteredEmployees;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        filteredEmployees \u003d new FilteredList\u003c\u003e(this.addressBook.getEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        return addressBook.hasEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"    public void deleteEmployee(Employee target) {","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.removeEmployee(target);","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"    public void addEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.addEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.setEmployee(target, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Employee List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an unmodifiable view of the list of {@code Employee} backed by the internal list of","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"        return filteredEmployees;","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"        filteredEmployees.setPredicate(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"    public void markTask(Employee employeeToMark, int taskIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"        requireAllNonNull(employeeToMark, taskIndex - 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":134,"author":{"gitId":"hjungwoo01"},"content":"        employeeToMark.markTask(taskIndex - 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 filteredEmployees.equals(otherModelManager.filteredEmployees);","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":25,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an unmodifiable view of the employees list.","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"     * This list will not contain any duplicate employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    ObservableList\u003cEmployee\u003e getEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":4,"-":13}},{"path":"src/main/java/seedu/address/model/employee/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":" * Represents an Employee\u0027s address in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof Address)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Address otherAddress \u003d (Address) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.equals(otherAddress.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"quelinxiao":1,"hjungwoo01":1,"-":63}},{"path":"src/main/java/seedu/address/model/employee/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":" * Represents a Employee\u0027s email in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hjungwoo01":2,"-":77}},{"path":"src/main/java/seedu/address/model/employee/Employee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.tasklist.TaskList;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":" * Represents an Employee in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":" * immutable.","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"public class Employee {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"    private final Team team;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"quelinxiao"},"content":"    private final Role role;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"quelinxiao"},"content":"    private final Phone phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"    private final Email email;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"    private final UniqueId uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    private final TaskList taskList;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    public Employee(Name name, Phone phone, Email email, Address address, Team team, Role role, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"            UniqueId uid, List\u003cTask\u003e tasks) {","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"        requireAllNonNull(name, phone, email, address, team, role, tags, uid);","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        this.email \u003d email;","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        this.address \u003d address;","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        this.team \u003d team;","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"            this.taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"    public Employee(Name name, Phone phone, Email email, Address address, Team team, Role role, Set\u003cTag\u003e tags,","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"            UniqueId uid) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"        requireAllNonNull(name, phone, email, address, team, role, tags, uid);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"quelinxiao"},"content":"        this.team \u003d team;","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"quelinxiao"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"quelinxiao"},"content":"    public Team getTeam() {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"quelinxiao"},"content":"        return team;","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"quelinxiao"},"content":"    public Role getRole() {","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"quelinxiao"},"content":"        return role;","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"    public UniqueId getUid() {","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"        return uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns an immutable tag set, which throws","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-04-03"},{"lineNumber":113,"author":{"gitId":"shayaansultan"},"content":"        return taskList.getTasks();","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"     * Adds a task to the todo list.","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"shayaansultan"},"content":"    public void addTask(Description description) {","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(new Task(description));","lastModifiedDate":"2024-04-01"},{"lineNumber":121,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"     * Returns true if both employees have the same name and id","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"     * This defines a weaker notion of equality between two employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"    public boolean isSameEmployee(Employee otherEmployee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"        if (otherEmployee \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"        return otherEmployee !\u003d null \u0026\u0026 otherEmployee.getName().equals(getName())","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"                \u0026\u0026 this.uid.equals(otherEmployee.getUid());","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"     * Returns true if both employees have the same identity and data fields.","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"     * This defines a stronger notion of equality between two employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"        if (!(other instanceof Employee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"        Employee otherEmployee \u003d (Employee) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"hjungwoo01"},"content":"        return name.equals(otherEmployee.name)","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 phone.equals(otherEmployee.phone)","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 email.equals(otherEmployee.email)","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"hjungwoo01"},"content":"                \u0026\u0026 address.equals(otherEmployee.address)","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"quelinxiao"},"content":"                \u0026\u0026 team.equals(otherEmployee.team)","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"quelinxiao"},"content":"                \u0026\u0026 role.equals(otherEmployee.role)","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"                \u0026\u0026 tags.equals(otherEmployee.tags)","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"                \u0026\u0026 uid.equals(otherEmployee.uid);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"        return Objects.hash(name, phone, email, address, team, role, tags, uid);","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":174,"author":{"gitId":"quelinxiao"},"content":"                .add(\"team\", team)","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"quelinxiao"},"content":"                .add(\"role\", role)","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"PyromancerBoom"},"content":"                .add(\"uid\", uid)","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":181,"author":{"gitId":"hjungwoo01"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":182,"author":{"gitId":"hjungwoo01"},"content":"        taskList.unmarkTask(taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":183,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":185,"author":{"gitId":"hjungwoo01"},"content":"    public Task getTask(int taskNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":186,"author":{"gitId":"hjungwoo01"},"content":"        return taskList.getTasks().get(taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"    public void markTask(int taskNumber) {","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"        taskList.markTask(taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"hjungwoo01"},"content":"    public void clearTasks() {","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"hjungwoo01"},"content":"        taskList.getTasks().clear();","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"PyromancerBoom":19,"quelinxiao":19,"hjungwoo01":31,"shayaansultan":36,"-":91}},{"path":"src/main/java/seedu/address/model/employee/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":" * Represents an Employee\u0027s name in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"     * The name should start with an alphanumeric character,","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"     * followed by zero or more alphanumeric characters or spaces.","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof Name)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name otherName \u003d (Name) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return fullName.equals(otherName.fullName);","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"quelinxiao":3,"hjungwoo01":1,"-":63}},{"path":"src/main/java/seedu/address/model/employee/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":" * Tests that a {@code Employee}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEmployee\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    public boolean test(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(employee.getName().fullName, keyword));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hjungwoo01":5,"-":39}},{"path":"src/main/java/seedu/address/model/employee/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":" * Represents a Employee\u0027s phone number in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!(other instanceof Phone)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Phone otherPhone \u003d (Phone) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return value.equals(otherPhone.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hjungwoo01":2,"-":59}},{"path":"src/main/java/seedu/address/model/employee/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quelinxiao"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"quelinxiao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"quelinxiao"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":" * Represents an Employee\u0027s role in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":" * * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"public class Role {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Roles can take any values, and it should not be blank\";","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"    public final String value;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"quelinxiao"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"quelinxiao"},"content":"     * @param role A valid role.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"    public Role(String role) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"quelinxiao"},"content":"        requireNonNull(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"quelinxiao"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"        value \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"quelinxiao"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"quelinxiao"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"        return value;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"quelinxiao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"quelinxiao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"quelinxiao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"        if (!(other instanceof Role)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"quelinxiao"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"        Role otherRole \u003d (Role) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"        return value.equals(otherRole.value);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"quelinxiao"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"quelinxiao"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"quelinxiao"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"PyromancerBoom":1,"quelinxiao":64}},{"path":"src/main/java/seedu/address/model/employee/Team.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"quelinxiao"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"quelinxiao"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"quelinxiao"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":" * Represents an Employee\u0027s team in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":" *  * Guarantees: immutable; is valid as declared in {@link #isValidTeam(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"public class Team {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"            \"Teams can only be a single string of alphanumeric characters, and it should not be blank\";","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"    /*","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"quelinxiao"},"content":"     * The team should be a singular string of alphanumeric characters.","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"quelinxiao"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}]\";","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"    public final String teamName;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"     * Constructs a {@code Team}.","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"quelinxiao"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"quelinxiao"},"content":"     * @param team A valid team.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"    public Team(String team) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"quelinxiao"},"content":"        requireNonNull(team);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"quelinxiao"},"content":"        checkArgument(isValidTeam(team), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"        teamName \u003d team;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"quelinxiao"},"content":"     * Returns true if a given string is a valid team.","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"quelinxiao"},"content":"    public static boolean isValidTeam(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"        return \"Team \" + teamName;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"quelinxiao"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"quelinxiao"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"quelinxiao"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"        if (!(other instanceof Team)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"quelinxiao"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"        Team otherTeam \u003d (Team) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"        return teamName.equals(otherTeam.teamName);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"quelinxiao"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"quelinxiao"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"quelinxiao"},"content":"        return teamName.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"quelinxiao"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"quelinxiao":65}},{"path":"src/main/java/seedu/address/model/employee/UniqueEmployeeList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" * A list of employees that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":" * A employee is considered unique by comparing using {@code Employee#isSameEmployee(Employee)}.","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":" * As such, adding and updating of employees uses Employee#isSameEmployee(Employee) for equality","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * so as to ensure that the employee being added or updated is unique in terms of identity in the","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" * UniqueEmployeeList. However, the removal of a employee uses Employee#equals(Object) so as to","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":" * ensure that the employee with exactly the same fields will be removed.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":" *","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":" * @see Employee#isSameEmployee(Employee)","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"public class UniqueEmployeeList implements Iterable\u003cEmployee\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    private final ObservableList\u003cEmployee\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    private final ObservableList\u003cEmployee\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"     * Returns true if the list contains an equivalent employee as the given argument.","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    public boolean contains(Employee toCheck) {","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"     * Adds an employee to the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"     * The employee must not already exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    public void add(Employee toAdd) {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"     * Replaces the employee {@code target} in the list with {@code editedEmployee}.","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"     * The employee identity of {@code editedEmployee} must not be the same as another existing employee in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        requireAllNonNull(target, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        if (!target.isSameEmployee(editedEmployee) \u0026\u0026 contains(editedEmployee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        internalList.set(index, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"     * Removes the equivalent employee from the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"     * The employee must exist in the list.","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    public void remove(Employee toRemove) {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"            throw new EmployeeNotFoundException();","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployees(UniqueEmployeeList replacement) {","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     * Replaces the contents of this list with {@code employees}.","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"     * {@code employees} must not contain duplicate employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployees(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        requireAllNonNull(employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        if (!employeesAreUnique(employees)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"            throw new DuplicateEmployeeException();","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"        internalList.setAll(employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"    public Iterator\u003cEmployee\u003e iterator() {","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"        if (!(other instanceof UniqueEmployeeList)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList otherUniqueEmployeeList \u003d (UniqueEmployeeList) other;","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"        return internalList.equals(otherUniqueEmployeeList.internalList);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"hjungwoo01"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"     * Returns true if {@code employees} contains only unique employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"hjungwoo01"},"content":"    private boolean employeesAreUnique(List\u003cEmployee\u003e employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"hjungwoo01"},"content":"        for (int i \u003d 0; i \u003c employees.size() - 1; i++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"            for (int j \u003d i + 1; j \u003c employees.size(); j++) {","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"                if (employees.get(i).isSameEmployee(employees.get(j))) {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"                    return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"hjungwoo01"},"content":"                }","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"        return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"hjungwoo01":150}},{"path":"src/main/java/seedu/address/model/employee/UniqueId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"PyromancerBoom"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"PyromancerBoom"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"PyromancerBoom"},"content":" * This class represents a unique ID for an employee.","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"PyromancerBoom"},"content":" * Todo: Add validation for uid","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"PyromancerBoom"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"PyromancerBoom"},"content":"public class UniqueId {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"PyromancerBoom"},"content":"    private static Integer lastUsedIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"    private Integer uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for creating a new UniqueId","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"PyromancerBoom"},"content":"    public UniqueId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d 0;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for creating a new UniqueId with an integer number","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":"     * @param intUid The specific ID.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws IllegalStateException If the ID is null, empty or less than 0.","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"    public UniqueId(Integer intUid) throws IllegalStateException, IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d intUid;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"        UniqueId.lastUsedIndex \u003d intUid;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"PyromancerBoom"},"content":"     * Constructor for creating a new UniqueId with a string number","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"PyromancerBoom"},"content":"     * @param strUid The specific ID.","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws IllegalStateException If the ID is null, empty or less than 0.","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"    public UniqueId(String strUid) throws IllegalStateException {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d Integer.parseInt(strUid);","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"        UniqueId.lastUsedIndex \u003d Integer.parseInt(strUid);","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"PyromancerBoom"},"content":"     * Generates a new ID. If no ID has been set, it initializes the ID with the","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"PyromancerBoom"},"content":"     * last used index.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"PyromancerBoom"},"content":"     * Otherwise, it increments the ID by the step value.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"    public void generateNewId() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"            throw new NullPointerException(\"ID is null while generating\");","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d ++lastUsedIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The current ID.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"PyromancerBoom"},"content":"    public Integer getUidValue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"        return uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"     * Checks if the given unique ID is valid.","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"     * @param intUid The unique ID to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"     * @return true if the unique ID is valid, false otherwise.","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"PyromancerBoom"},"content":"    public static boolean isValidUid(Integer intUid) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"        if (intUid \u003d\u003d null || intUid \u003c 0) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"        return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"     * Checks if a given string is a valid unique identifier (UID).","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"PyromancerBoom"},"content":"     * @param strUid The string to be checked.","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"PyromancerBoom"},"content":"     * @return true if the string is a valid UID, false otherwise.","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"PyromancerBoom"},"content":"    public static boolean isValidUid(String strUid) {","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"        if (strUid \u003d\u003d null || strUid.isEmpty() || !strUid.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"PyromancerBoom"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"PyromancerBoom"},"content":"        return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * Sets the last used index.","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"     * @param lastUsedIndex The new last used index.","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws NumberFormatException If the last used index is not valid.","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws IllegalStateException If the last used index is greater than the","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"     *                               step.","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"    public static void setLastUsedIndex(Integer lastUsedIndex) {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"        if (lastUsedIndex \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"PyromancerBoom"},"content":"            throw new NumberFormatException(\"Null or Empty Last Used Index\");","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"PyromancerBoom"},"content":"            UniqueId.lastUsedIndex \u003d lastUsedIndex;","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"PyromancerBoom"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"PyromancerBoom"},"content":"            throw new NumberFormatException(\"Invalid Last Used Index\");","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"     * @return The ID as a string. If the ID is null","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws NullPointerException if uid is null","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"PyromancerBoom"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"PyromancerBoom"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"PyromancerBoom"},"content":"            throw new NullPointerException(\"ID is null while converting to string\");","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"PyromancerBoom"},"content":"        return uid.toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"     * Checks if this UniqueId is equal to another object.","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"     * @param other The object to compare with.","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"PyromancerBoom"},"content":"     * @return True if the other object is a UniqueId and its value is equal to","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"PyromancerBoom"},"content":"     *         this UniqueId\u0027s value.","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"PyromancerBoom"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"PyromancerBoom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"PyromancerBoom"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"PyromancerBoom"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"        if (!(other instanceof UniqueId)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"PyromancerBoom"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"        UniqueId otherId \u003d (UniqueId) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"        return otherId.getUidValue() !\u003d null","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"                \u0026\u0026 otherId.getUidValue().equals(getUidValue());","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"PyromancerBoom":141}},{"path":"src/main/java/seedu/address/model/employee/exceptions/DuplicateEmployeeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * Signals that the operation will result in duplicate Employees","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" * (Employees are considered duplicates if they have the same","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":" * identity).","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"public class DuplicateEmployeeException extends RuntimeException {","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"    public DuplicateEmployeeException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"        super(\"Operation would result in duplicate employees\");","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"hjungwoo01":12}},{"path":"src/main/java/seedu/address/model/employee/exceptions/EmployeeNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee.exceptions;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":" * Signals that the operation is unable to find the specified employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"hjungwoo01":6}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * Represents a Task\u0027s description in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class Description {","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions \"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"            + \"should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"            + \"and it should not be blank\";","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    /*","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"     * The description should not be blank.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    private String fullDescription;","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"     * @param description A valid description.","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    public Description(String description) {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        requireNonNull(description);","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        fullDescription \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"            return false;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        return test.trim().matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        return fullDescription;","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        if (!(other instanceof Description)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        Description otherDescription \u003d (Description) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        return fullDescription.equals(otherDescription.fullDescription);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"        return fullDescription.hashCode();","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shayaansultan":66}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * immutable.","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class Task {","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    // Identity fields","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    private final Description description;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    // Data fields","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"    private boolean isDone;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    public Task(Description description) {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"        requireAllNonNull(description);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        this.description \u003d description;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    public Description getDescription() {","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        return description;","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    public boolean isDone() {","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        return isDone;","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     * Marks the task as done.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public void mark() {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        isDone \u003d true;","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * Unmarks the task as done.","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    public void unmark() {","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        isDone \u003d false;","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"     * Returns true if both tasks have the same description.","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     * This defines a weaker notion of equality between two tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription());","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"     * Returns true if both tasks have the same identity and data fields.","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"     * This defines a stronger notion of equality between two tasks.","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"shayaansultan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"shayaansultan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"shayaansultan"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"shayaansultan"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"        return otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"shayaansultan"},"content":"                \u0026\u0026 otherTask.isDone() \u003d\u003d isDone();","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"        return description.hashCode() + (isDone ? 1 : 0);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"shayaansultan"},"content":"        return \"[\" + (isDone ? \"X\" : \"_\") + \"] \" + description;","lastModifiedDate":"2024-04-01"},{"lineNumber":89,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":92,"author":{"gitId":"shayaansultan"},"content":"     * Returns true if the given string is a valid task string.","lastModifiedDate":"2024-04-01"},{"lineNumber":93,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":94,"author":{"gitId":"shayaansultan"},"content":"    public static boolean isValidTaskString(String taskString) {","lastModifiedDate":"2024-04-01"},{"lineNumber":95,"author":{"gitId":"shayaansultan"},"content":"        String[] taskStringArray \u003d taskString.split(\" \", 2);","lastModifiedDate":"2024-04-01"},{"lineNumber":96,"author":{"gitId":"shayaansultan"},"content":"        if (taskStringArray.length !\u003d 2) {","lastModifiedDate":"2024-04-01"},{"lineNumber":97,"author":{"gitId":"shayaansultan"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"shayaansultan"},"content":"        String status \u003d taskStringArray[0];","lastModifiedDate":"2024-04-01"},{"lineNumber":100,"author":{"gitId":"shayaansultan"},"content":"        if (!status.equals(\"[X]\") \u0026\u0026 !status.equals(\"[_]\")) {","lastModifiedDate":"2024-04-01"},{"lineNumber":101,"author":{"gitId":"shayaansultan"},"content":"            return false;","lastModifiedDate":"2024-04-01"},{"lineNumber":102,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":103,"author":{"gitId":"shayaansultan"},"content":"        return Description.isValidDescription(taskStringArray[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":104,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":105,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":106,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"     * Parses a task string into a Task object.","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"shayaansultan"},"content":"    public static Task parseTaskString(String taskString) {","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"shayaansultan"},"content":"        String[] taskStringArray \u003d taskString.split(\" \", 2);","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"shayaansultan"},"content":"        boolean isDone \u003d taskStringArray[0].equals(\"[X]\");","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"shayaansultan"},"content":"        Description description \u003d new Description(taskStringArray[1]);","lastModifiedDate":"2024-04-01"},{"lineNumber":113,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(description);","lastModifiedDate":"2024-04-01"},{"lineNumber":114,"author":{"gitId":"shayaansultan"},"content":"        if (isDone) {","lastModifiedDate":"2024-04-01"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"            task.mark();","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":117,"author":{"gitId":"shayaansultan"},"content":"        return task;","lastModifiedDate":"2024-04-01"},{"lineNumber":118,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":119,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"shayaansultan":119}},{"path":"src/main/java/seedu/address/model/tasklist/TaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.tasklist;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":" * Represents a TodoList in the address book.","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":" * Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":" * immutable.","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"public class TaskList {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    // Data fields","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    private final ObservableList\u003cTask\u003e tasks;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    public TaskList() {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        this.tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cTask\u003e getTasks() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        return tasks;","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     * Adds a task to the todo list.","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        tasks.add(task);","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"     * Removes a task from the todo list.","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        tasks.remove(index);","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * Marks a task as done.","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    public void markTask(int index) {","lastModifiedDate":"2024-03-30"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        tasks.get(index).mark();","lastModifiedDate":"2024-03-30"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     * Marks a task as not done.","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2024-03-30"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        tasks.get(index).unmark();","lastModifiedDate":"2024-03-30"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-30"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"            sb.append(task.toString()).append(\"\\n\");","lastModifiedDate":"2024-03-30"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"shayaansultan":58,"hjungwoo01":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public static Employee[] getSampleEmployees() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        return new Employee[] {","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Team(\"A\"), new Role(\"Manager\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"friends\"), new UniqueId(\"101\"), new ArrayList\u003c\u003e()),","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Team(\"B\"), new Role(\"Engineer\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"colleagues\", \"friends\"), new UniqueId(\"102\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"                                        new ArrayList\u003c\u003e()),","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Team(\"C\"), new Role(\"IT\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"neighbours\"), new UniqueId(\"103\"), new ArrayList\u003c\u003e()),","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Team(\"1\"), new Role(\"CEO\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"family\"), new UniqueId(\"104\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"                                        new ArrayList\u003c\u003e()),","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Team(\"2\"), new Role(\"Cleaner\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"classmates\"), new UniqueId(\"105\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"                                        new ArrayList\u003c\u003e()),","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"            new Employee(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"quelinxiao"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Team(\"3\"), new Role(\"Cook\"),","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"                    getTagSet(\"colleagues\"), new UniqueId(\"106\"),","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"                                        new ArrayList\u003c\u003e())","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        for (Employee sampleEmployee : getSampleEmployees()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"            sampleAb.addEmployee(sampleEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"PyromancerBoom":1,"quelinxiao":6,"shayaansultan":11,"hjungwoo01":17,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEmployee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":" * Jackson-friendly version of {@link Employee}.","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"class JsonAdaptedEmployee {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Employee\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    public static final String INVALID_FIELD_MESSAGE_FORMAT \u003d \"Employee\u0027s UID is invalid\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"quelinxiao"},"content":"    private final String team;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"    private final String role;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"PyromancerBoom"},"content":"    private final Integer uid;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     * Constructs a {@code JsonAdaptedEmployee} with the given employee details.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public JsonAdaptedEmployee(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"            @JsonProperty(\"team\") String team, @JsonProperty(\"role\") String role,","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"            @JsonProperty(\"uid\") String uid, @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"quelinxiao"},"content":"        this.team \u003d team;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"        this.role \u003d role;","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d Integer.parseInt(uid);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        if (tasks !\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"            this.tasksList.addAll(tasks);","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"     * Converts a given {@code Employee} into this class for Jackson use.","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    public JsonAdaptedEmployee(Employee source) {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"quelinxiao"},"content":"        team \u003d source.getTeam().teamName;","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"quelinxiao"},"content":"        role \u003d source.getRole().value;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"PyromancerBoom"},"content":"        uid \u003d source.getUid().getUidValue();","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"        tasksList.addAll(source.getTasks().stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"shayaansultan"},"content":"                .map(JsonAdaptedTask::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":84,"author":{"gitId":"shayaansultan"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-04-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"     * Method to get the UID","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * @return the UID","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"PyromancerBoom"},"content":"    public Integer getUid() {","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"PyromancerBoom"},"content":"        return uid;","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"PyromancerBoom"},"content":"     * Converts this Jackson-friendly adapted employee object into the model\u0027s","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code Employee} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"     *                               the adapted employee.","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"    public Employee toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        final List\u003cTag\u003e employeeTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"            employeeTags.add(tag.toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"quelinxiao"},"content":"        if (team \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"quelinxiao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Team.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"quelinxiao"},"content":"        if (!Team.isValidTeam(team)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"quelinxiao"},"content":"            throw new IllegalValueException(Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"quelinxiao"},"content":"        final Team modelTeam \u003d new Team(team);","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"quelinxiao"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"quelinxiao"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"quelinxiao"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"quelinxiao"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"quelinxiao"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"quelinxiao"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"        if (uid \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, UniqueId.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"PyromancerBoom"},"content":"        if (!UniqueId.isValidUid(uid)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":163,"author":{"gitId":"PyromancerBoom"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"                    String.format(INVALID_FIELD_MESSAGE_FORMAT, UniqueId.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"        final UniqueId modelUid \u003d new UniqueId(uid);","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"hjungwoo01"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(employeeTags);","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":171,"author":{"gitId":"shayaansultan"},"content":"        final List\u003cTask\u003e employeeTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"shayaansultan"},"content":"        for (JsonAdaptedTask task : tasksList) {","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"shayaansultan"},"content":"            employeeTasks.add(task.toModelType());","lastModifiedDate":"2024-04-01"},{"lineNumber":174,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"shayaansultan"},"content":"        return new Employee(modelName, modelPhone, modelEmail, modelAddress, modelTeam, modelRole, modelTags, modelUid,","lastModifiedDate":"2024-04-01"},{"lineNumber":177,"author":{"gitId":"shayaansultan"},"content":"                employeeTasks);","lastModifiedDate":"2024-04-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PyromancerBoom":31,"quelinxiao":24,"hjungwoo01":18,"shayaansultan":18,"-":89}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"/**","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":" */","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"class JsonAdaptedTask {","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    private final String taskString;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"    @JsonCreator","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    public JsonAdaptedTask(String taskString) {","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        this.taskString \u003d taskString;","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        taskString \u003d source.toString();","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    @JsonValue","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    public String getTaskString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        return taskString;","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"    /**","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"     * {@code Task} object.","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"     *","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"     * @throws IllegalValueException if there were any data constraints violated in","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"     *                               the adapted task.","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"     */","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        if (taskString \u003d\u003d null) {","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"description\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        if (!Task.isValidTaskString(taskString)) {","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        return Task.parseTaskString(taskString);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shayaansultan":57}},{"path":"src/main/java/seedu/address/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2023-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"            JsonSerializableAddressBook addressBook \u003d jsonAddressBook.get();","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"PyromancerBoom"},"content":"            Integer maxUid \u003d addressBook.getMaxUid();","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"PyromancerBoom"},"content":"            UniqueId.setLastUsedIndex(maxUid);","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new DataLoadingException(ive);","lastModifiedDate":"2023-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PyromancerBoom":4,"-":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    public static final String MESSAGE_DUPLICATE_EMPLOYEE \u003d \"Employees list contains duplicate employee(s).\";","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    private final List\u003cJsonAdaptedEmployee\u003e employees \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"employees\") List\u003cJsonAdaptedEmployee\u003e employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        this.employees.addAll(employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"PyromancerBoom"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"     *               {@code JsonSerializableAddressBook}.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        employees.addAll(source.getEmployeeList().stream().map(JsonAdaptedEmployee::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        for (JsonAdaptedEmployee jsonAdaptedEmployee : employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"            Employee employee \u003d jsonAdaptedEmployee.toModelType();","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"            if (addressBook.hasEmployee(employee)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"            addressBook.addEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"PyromancerBoom"},"content":"    public int getMaxUid() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"PyromancerBoom"},"content":"        return employees.stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"PyromancerBoom"},"content":"                .mapToInt(JsonAdaptedEmployee::getUid)","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                .max()","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"PyromancerBoom"},"content":"                .orElse(0); // returns 0 if list is empty","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PyromancerBoom":8,"hjungwoo01":12,"-":47}},{"path":"src/main/java/seedu/address/ui/EmployeeCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":" * A UI component that displays information of a {@code Employee}.","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    private static final String FXML \u003d \"EmployeeListCard.fxml\";","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"PyromancerBoom"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"PyromancerBoom"},"content":"     * keywords in JavaFX.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"PyromancerBoom"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"PyromancerBoom"},"content":"     *      issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public final Employee employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"quelinxiao"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"quelinxiao"},"content":"    private Label teamRole;","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"PyromancerBoom"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"    private Label uid;","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"    @FXML","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    private VBox taskList;","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"     * Creates a {@code EmployeeCode} with the given {@code Employee} and index to","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"PyromancerBoom"},"content":"     * display.","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeCard(Employee employee, int displayedIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        this.employee \u003d employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"quelinxiao"},"content":"        teamRole.setText(employee.getTeam().toString() + \" | \" + employee.getRole().value);","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        name.setText(employee.getName().fullName);","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        phone.setText(employee.getPhone().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        address.setText(employee.getAddress().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        email.setText(employee.getEmail().value);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"PyromancerBoom"},"content":"        uid.setText(\"uid: \" + employee.getUid().toString());","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        employee.getTags().stream()","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        updateTaskList(employee);","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"     * Updates the task list in the UI.","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-04-03"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"    public void updateTaskList(Employee employee) {","lastModifiedDate":"2024-04-03"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        taskList.getChildren().clear(); // Clear existing task views","lastModifiedDate":"2024-04-03"},{"lineNumber":80,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        AtomicInteger taskIndex \u003d new AtomicInteger(1);","lastModifiedDate":"2024-04-03"},{"lineNumber":82,"author":{"gitId":"shayaansultan"},"content":"        employee.getTasks().stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"                .map(task -\u003e {","lastModifiedDate":"2024-04-03"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"                    String status \u003d task.isDone() ? \"[X] \" : \"[_] \";","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"                    return new Label(taskIndex.getAndIncrement() + \". \" + status + task.getDescription());","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"                })","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"                .forEach(taskLabel -\u003e taskList.getChildren().add(taskLabel));","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"PyromancerBoom":9,"quelinxiao":4,"hjungwoo01":28,"shayaansultan":4,"-":44}},{"path":"src/main/java/seedu/address/ui/EmployeeListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * Panel containing the list of employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    private static final String FXML \u003d \"EmployeeListPanel.fxml\";","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EmployeeListPanel.class);","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    @FXML","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private ListView\u003cEmployee\u003e employeeListView;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a {@code EmployeeListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeListPanel(ObservableList\u003cEmployee\u003e employeeList) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        super(FXML);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        employeeListView.setItems(employeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        employeeListView.setCellFactory(listView -\u003e new EmployeeListViewCell());","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Employee} using a {@code EmployeeCard}.","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    class EmployeeListViewCell extends ListCell\u003cEmployee\u003e {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        protected void updateItem(Employee employee, boolean empty) {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"            super.updateItem(employee, empty);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"            if (empty || employee \u003d\u003d null) {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"                setText(null);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"            } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"                setGraphic(new EmployeeCard(employee, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"hjungwoo01":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    private EmployeeListPanel employeeListPanel;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    private StackPane employeeListPanelPlaceholder;","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"        employeeListPanel \u003d new EmployeeListPanel(logic.getFilteredEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        employeeListPanelPlaceholder.getChildren().add(employeeListPanel.getRoot());","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeListPanel getEmployeeListPanel() {","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"hjungwoo01"},"content":"        return employeeListPanel;","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hjungwoo01":6,"-":190}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"quelinxiao"},"content":".list-cell:filled:even { /*employee card at even interval*/","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: linear-gradient(from 25% 25% to 100% 100%, #51154f, #074f78);","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: linear-gradient(from 25% 25% to 100% 100%, #7a1f77, #0a6ea9);","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"quelinxiao"},"content":"     -fx-background-color: #000000; /* border background color */","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: #1a1a1a; /* footer color */","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: derive(#1d1d1d, 50%); /* menu bar list color */","lastModifiedDate":"2024-03-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: #1a1a1a; /* menu bar color */","lastModifiedDate":"2024-03-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: transparent; /* do not change */","lastModifiedDate":"2024-03-31"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: #1a1a1a; /* command box color */","lastModifiedDate":"2024-03-31"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: #1a1a1a; /* output display box color */","lastModifiedDate":"2024-03-31"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color: #3e7b91; /* tag color */","lastModifiedDate":"2024-03-31"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"quelinxiao":11,"-":341}},{"path":"src/main/resources/view/EmployeeListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"         \u003cLabel fx:id\u003d\"teamRole\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$teamRole\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"        \u003cLabel fx:id\u003d\"uid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$uid\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"      \u003cVBox fx:id\u003d\"taskList\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"PyromancerBoom":1,"quelinxiao":9,"hjungwoo01":1,"-":32}},{"path":"src/main/resources/view/EmployeeListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"  \u003cListView fx:id\u003d\"employeeListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":1,"-":7}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"    -fx-background-color:linear-gradient(from 25% 25% to 100% 100%, #51154f, #074f78);","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"quelinxiao":1,"-":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"        \u003cVBox fx:id\u003d\"employeeList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"          \u003cStackPane fx:id\u003d\"employeeListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"           \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100.0\" minHeight\u003d\"100\" prefHeight\u003d\"100.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"quelinxiao"},"content":"                       \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"quelinxiao":11,"-":47}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"PyromancerBoom"},"content":"                temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"PyromancerBoom"},"content":"        assertCommandSuccessForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"PyromancerBoom"},"content":"        assertCommandSuccessForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"    public void getFilteredEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"    public void getAddressBook_validModel_returnsAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        ReadOnlyAddressBook addressBook \u003d logic.getAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(model.getAddressBook(), addressBook);","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"    public void getAddressBookFilePath_validModel_returnsFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        Path filePath \u003d logic.getAddressBookFilePath();","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(model.getAddressBookFilePath(), filePath);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"PyromancerBoom"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"     * result message is correct.","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"PyromancerBoom"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"PyromancerBoom"},"content":"     * result message is correct.","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"     * Executes the command, confirms that the exception is thrown and that the","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"     * result message is correct.","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"PyromancerBoom"},"content":"     * - the internal model manager state is the same as that in","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"PyromancerBoom"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"     * Storage component.","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"PyromancerBoom"},"content":"     * @param expectedMessage the message expected inside exception thrown by the","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"PyromancerBoom"},"content":"     *                        Logic component","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"PyromancerBoom"},"content":"        // TODO: Remove this method","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"PyromancerBoom"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"PyromancerBoom"},"content":"        // when saving","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":189,"author":{"gitId":"PyromancerBoom"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"PyromancerBoom"},"content":"                temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"quelinxiao"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + ROLE_DESC_AMY + TEAM_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"hjungwoo01"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.addEmployee(expectedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"PyromancerBoom"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"PyromancerBoom"},"content":"     * Storage component. This is invert of the","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"PyromancerBoom"},"content":"     * assertCommandFailureForExceptionFromStorage method.","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"PyromancerBoom"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"PyromancerBoom"},"content":"     * @param e               the exception to be thrown by the Storage component","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"PyromancerBoom"},"content":"     * @param expectedMessage the message expected inside exception thrown by the","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"PyromancerBoom"},"content":"     *                        Logic component","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"PyromancerBoom"},"content":"     * @throws CommandException if an error occurs during command execution","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"PyromancerBoom"},"content":"    private void assertCommandSuccessForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"PyromancerBoom"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"PyromancerBoom"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"PyromancerBoom"},"content":"        // when saving","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"PyromancerBoom"},"content":"            @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"PyromancerBoom"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"PyromancerBoom"},"content":"                    throws IOException {","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"PyromancerBoom"},"content":"                throw e;","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"PyromancerBoom"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"PyromancerBoom"},"content":"        };","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"PyromancerBoom"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"PyromancerBoom"},"content":"                temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"PyromancerBoom"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"PyromancerBoom"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"PyromancerBoom"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"PyromancerBoom"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"PyromancerBoom"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + ROLE_DESC_AMY + TEAM_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"PyromancerBoom"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"PyromancerBoom"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"PyromancerBoom"},"content":"        expectedModel.addEmployee(expectedEmployee);","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(CommandException.class, () -\u003e logic.execute(addCommand));","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"PyromancerBoom":67,"quelinxiao":3,"hjungwoo01":19,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_newEmployee_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.addEmployee(validEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandSuccess(new AddCommand(validEmployee), model,","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validEmployee)),","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeInList \u003d model.getAddressBook().getEmployeeList().get(0);","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(new AddCommand(employeeInList), model,","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"                AddCommand.MESSAGE_DUPLICATE_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"hjungwoo01":12,"-":36}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public void constructor_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_employeeAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        ModelStubAcceptingEmployeeAdded modelStub \u003d new ModelStubAcceptingEmployeeAdded();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        CommandResult commandResult \u003d new AddCommand(validEmployee).execute(modelStub);","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validEmployee)),","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(Arrays.asList(validEmployee), modelStub.employeesAdded);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_duplicateEmployee_throwsCommandException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        Employee validEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand addCommand \u003d new AddCommand(validEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        ModelStub modelStub \u003d new ModelStubWithEmployee(validEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EMPLOYEE, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        Employee alice \u003d new EmployeeBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        Employee bob \u003d new EmployeeBuilder().withName(\"Bob\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"        public void deleteEmployee(Employee target) {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"        public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"        public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"hjungwoo01"},"content":"        public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":162,"author":{"gitId":"hjungwoo01"},"content":"        @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":163,"author":{"gitId":"hjungwoo01"},"content":"        public void markTask(Employee employeeToMark, int taskIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-04-03"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"hjungwoo01"},"content":"     * A Model stub that contains a single employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"hjungwoo01"},"content":"    private class ModelStubWithEmployee extends ModelStub {","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"hjungwoo01"},"content":"        private final Employee employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":174,"author":{"gitId":"hjungwoo01"},"content":"        ModelStubWithEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"hjungwoo01"},"content":"            requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"hjungwoo01"},"content":"            this.employee \u003d employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"hjungwoo01"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":181,"author":{"gitId":"hjungwoo01"},"content":"            requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"hjungwoo01"},"content":"            return this.employee.isSameEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"     * A Model stub that always accept the employee being added.","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"    private class ModelStubAcceptingEmployeeAdded extends ModelStub {","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"        final ArrayList\u003cEmployee\u003e employeesAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"hjungwoo01"},"content":"        public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"hjungwoo01"},"content":"            requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"hjungwoo01"},"content":"            return employeesAdded.stream().anyMatch(employee::isSameEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"hjungwoo01"},"content":"        public void addEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"            requireNonNull(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"hjungwoo01"},"content":"            employeesAdded.add(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hjungwoo01":46,"-":164}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    public void execute_validArgs_addsTask() {","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().withUid(\"1000\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        model.addEmployee(employee);","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        Description taskDescription \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(employee.getUid(), taskDescription);","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        try {","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"            CommandResult result \u003d command.execute(model);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"            assertNotNull(result);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"            assertEquals(String.format(AddTaskCommand.MESSAGE_SUCCESS, taskDescription), result.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"            assertTrue(employee.getTasks().contains(new Task(taskDescription)));","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"            fail(\"Execution of command should not fail.\");","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidEmployeeUid_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId invalidUid \u003d new UniqueId(\"-1\");","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        AddTaskCommand command \u003d new AddTaskCommand(invalidUid, new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(model.getFilteredEmployeeList().stream()","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"                .anyMatch(employee -\u003e employee.getUid().equals(invalidUid)));","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model),","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"                Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    public void equals() {","lastModifiedDate":"2024-04-03"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        AddTaskCommand command1 \u003d new AddTaskCommand(new UniqueId(\"1\"), new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        AddTaskCommand command2 \u003d new AddTaskCommand(new UniqueId(\"1\"), new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        AddTaskCommand command3 \u003d new AddTaskCommand(new UniqueId(\"2\"), new Description(\"Buy bread\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":70,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(command1, command1); // same object -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(command1, command2); // same values -\u003e returns true","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        assertNotEquals(command1, command3); // different values -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        assertNotEquals(command1, 1); // different types -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        assertNotEquals(command1, null); // null -\u003e returns false","lastModifiedDate":"2024-04-03"},{"lineNumber":76,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":77,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shayaansultan":36,"hjungwoo01":41}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"hjungwoo01":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"    public static final String VALID_TEAM_AMY \u003d \"A\";","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"    public static final String VALID_TEAM_BOB \u003d \"B\";","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"quelinxiao"},"content":"    public static final String VALID_ROLE_AMY \u003d \"Manager\";","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"    public static final String VALID_ROLE_BOB \u003d \"Engineer\";","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public static final String VALID_UID_AMY \u003d \"1001\";","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public static final String VALID_UID_BOB \u003d \"1002\";","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"    public static final String ROLE_DESC_AMY \u003d \" \" + PREFIX_ROLE + VALID_ROLE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"    public static final String ROLE_DESC_BOB \u003d \" \" + PREFIX_ROLE + VALID_ROLE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"    public static final String TEAM_DESC_AMY \u003d \" \" + PREFIX_TEAM + VALID_TEAM_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"quelinxiao"},"content":"    public static final String TEAM_DESC_BOB \u003d \" \" + PREFIX_TEAM + VALID_TEAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"quelinxiao"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE; // empty string not allowed for roles","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"quelinxiao"},"content":"    public static final String INVALID_TEAM_DESC \u003d \" \" + PREFIX_TEAM + \"Save Water\"; // spaces not allowed in teams","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    public static final EditCommand.EditEmployeeDescriptor DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        DESC_AMY \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"quelinxiao"},"content":"                .withTeam(VALID_TEAM_AMY).withRole(VALID_ROLE_AMY)","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        DESC_BOB \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"quelinxiao"},"content":"                .withTeam(VALID_TEAM_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"PyromancerBoom"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult}","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"PyromancerBoom"},"content":"     * \u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"     * Convenience wrapper to","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"PyromancerBoom"},"content":"     * {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"PyromancerBoom"},"content":"     * - the address book, filtered employee list and selected employee in","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"     * Updates {@code model}\u0027s filtered list to show only the employee at the given","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code targetIndex} in the","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"    public static void showEmployeeAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d model.getFilteredEmployeeList().get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"        final String[] splitName \u003d employee.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(1, model.getFilteredEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"PyromancerBoom":9,"quelinxiao":14,"hjungwoo01":17,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"import java.util.List;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStubWithEmployee;","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(employeeToDelete));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.deleteEmployee(employeeToDelete);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_validNameUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        // Prepare the model with a specific employee name","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d model.getFilteredEmployeeList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        String targetName \u003d employee.getName().fullName;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetName);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(employee));","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.deleteEmployee(employee);","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        String invalidName \u003d \"Invalid Name\";","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidName);","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_EMPLOYEE_NOT_FOUND);","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_validUidUnfilteredList_success() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        // Prepare the model with a specific employee UID","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d model.getFilteredEmployeeList().get(0);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d employee.getUid();","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(uid);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(employee));","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.deleteEmployee(employee);","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToDelete \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(employeeToDelete));","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.deleteEmployee(employeeToDelete);","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"        showNoEmployee(expectedModel);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidUid_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId invalidUid \u003d new UniqueId(\"-1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(invalidUid);","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"hjungwoo01"},"content":"    void execute_noTargetIndexNameOrUid_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"        // Arrange","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"        ModelStubWithEmployee model \u003d new ModelStubWithEmployee(new ArrayList\u003c\u003e());","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"hjungwoo01"},"content":"    void deleteByName_multipleEmployeesWithSameName_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"hjungwoo01"},"content":"        // Arrange","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"hjungwoo01"},"content":"        Name name \u003d new Name(\"John Doe\");","lastModifiedDate":"2024-03-28"},{"lineNumber":163,"author":{"gitId":"hjungwoo01"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-28"},{"lineNumber":164,"author":{"gitId":"hjungwoo01"},"content":"        Email email \u003d new Email(\"johndoe@example.com\");","lastModifiedDate":"2024-03-28"},{"lineNumber":165,"author":{"gitId":"hjungwoo01"},"content":"        Address address \u003d new Address(\"123 Main Street\");","lastModifiedDate":"2024-03-28"},{"lineNumber":166,"author":{"gitId":"hjungwoo01"},"content":"        Team team \u003d new Team(\"A\");","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"hjungwoo01"},"content":"        Role role \u003d new Role(\"Developer\");","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"hjungwoo01"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid1 \u003d new UniqueId(\"1\");","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid2 \u003d new UniqueId(\"2\");","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks1 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":172,"author":{"gitId":"shayaansultan"},"content":"        List\u003cTask\u003e tasks2 \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-04-01"},{"lineNumber":173,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"shayaansultan"},"content":"        Employee employee1 \u003d new Employee(name, phone, email, address, team, role, tags, uid1, tasks1);","lastModifiedDate":"2024-04-01"},{"lineNumber":175,"author":{"gitId":"shayaansultan"},"content":"        Employee employee2 \u003d new Employee(name, phone, email, address, team, role, tags, uid2, tasks2);","lastModifiedDate":"2024-04-01"},{"lineNumber":176,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"hjungwoo01"},"content":"        ModelStubWithEmployee model \u003d new ModelStubWithEmployee(Arrays.asList(employee1, employee2));","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(name.fullName);","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"hjungwoo01"},"content":"        // Act and Assert","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommand.deleteByName(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"hjungwoo01"},"content":"    public void equals_differentTypesOfDeletionCommands() {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteByIndexCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteByNameCommand \u003d new DeleteCommand(\"John Doe\");","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteByUidCommand \u003d new DeleteCommand(new UniqueId(\"1\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"hjungwoo01"},"content":"        // Different types of DeleteCommand should not be equal","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(deleteByIndexCommand.equals(deleteByNameCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(deleteByIndexCommand.equals(deleteByUidCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(deleteByNameCommand.equals(deleteByUidCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_emptyName_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"hjungwoo01"},"content":"        String emptyName \u003d \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(emptyName);","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"hjungwoo01"},"content":"    public void equals_nullNameAndUid() {","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteByNameCommand \u003d new DeleteCommand((String) null);","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteByUidCommand \u003d new DeleteCommand((UniqueId) null);","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"hjungwoo01"},"content":"        // A DeleteCommand with null name or UID should not be equal to any other DeleteCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":211,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(deleteByNameCommand.equals(new DeleteCommand(\"John Doe\")));","lastModifiedDate":"2024-03-28"},{"lineNumber":212,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(deleteByUidCommand.equals(new DeleteCommand(new UniqueId(\"1\"))));","lastModifiedDate":"2024-03-28"},{"lineNumber":213,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":214,"author":{"gitId":"hjungwoo01"},"content":"        // A DeleteCommand with null name or UID should be equal to itself","lastModifiedDate":"2024-03-28"},{"lineNumber":215,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(deleteByNameCommand.equals(deleteByNameCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":216,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(deleteByUidCommand.equals(deleteByUidCommand));","lastModifiedDate":"2024-03-28"},{"lineNumber":217,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":218,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":219,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":220,"author":{"gitId":"hjungwoo01"},"content":"    public void equals_sameNameDifferentCase() {","lastModifiedDate":"2024-03-28"},{"lineNumber":221,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommandLowercase \u003d new DeleteCommand(\"john doe\");","lastModifiedDate":"2024-03-28"},{"lineNumber":222,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommandUppercase \u003d new DeleteCommand(\"JOHN DOE\");","lastModifiedDate":"2024-03-28"},{"lineNumber":223,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":224,"author":{"gitId":"hjungwoo01"},"content":"        // Commands with the same name in different cases should be considered equal","lastModifiedDate":"2024-03-28"},{"lineNumber":225,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(deleteCommandLowercase.equals(deleteCommandUppercase));","lastModifiedDate":"2024-03-28"},{"lineNumber":226,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":227,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":228,"author":{"gitId":"hjungwoo01"},"content":"    // Ensure that the DeleteCommand with a targetName correctly identifies an empty string as an invalid targetName","lastModifiedDate":"2024-03-28"},{"lineNumber":229,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":230,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_nullOrEmptyName_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":231,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommandWithNullName \u003d new DeleteCommand((String) null);","lastModifiedDate":"2024-03-28"},{"lineNumber":232,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteCommandWithEmptyName \u003d new DeleteCommand(\"\");","lastModifiedDate":"2024-03-28"},{"lineNumber":233,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":234,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommandWithNullName.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":235,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e deleteCommandWithEmptyName.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":236,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":237,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":238,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":241,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":242,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":248,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":257,"author":{"gitId":"hjungwoo01"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":261,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":262,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidUidUnfilteredList_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":263,"author":{"gitId":"hjungwoo01"},"content":"        String invalidUid \u003d \"uid/non_existent\";","lastModifiedDate":"2024-03-24"},{"lineNumber":264,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":265,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":266,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(invalidUid));","lastModifiedDate":"2024-03-24"},{"lineNumber":267,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":280,"author":{"gitId":"hjungwoo01"},"content":"    private void showNoEmployee(Model model) {","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"hjungwoo01"},"content":"        model.updateFilteredEmployeeList(p -\u003e false);","lastModifiedDate":"2024-03-14"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":283,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(model.getFilteredEmployeeList().isEmpty());","lastModifiedDate":"2024-03-14"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"hjungwoo01":184,"shayaansultan":6,"-":95}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(editedEmployee).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        Index indexLastEmployee \u003d Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        Employee lastEmployee \u003d model.getFilteredEmployeeList().get(indexLastEmployee.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        EmployeeBuilder employeeInList \u003d new EmployeeBuilder(lastEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedEmployee \u003d employeeInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastEmployee, descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.setEmployee(lastEmployee, editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, new EditCommand.EditEmployeeDescriptor());","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedEmployee \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeInFilteredList \u003d model.getFilteredEmployeeList().get(INDEX_FIRST_EMPLOYEE.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedEmployee \u003d new EmployeeBuilder(employeeInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE,","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EMPLOYEE_SUCCESS,","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"                Messages.format(editedEmployee));","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.setEmployee(model.getFilteredEmployeeList().get(0), editedEmployee);","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidEmployeeIndexUnfilteredList_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEmployeeList().size() + 1);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidEmployeeIndexFilteredList_failure() {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor copyDescriptor \u003d new EditCommand.EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_EMPLOYEE, copyDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EMPLOYEE, DESC_AMY)));","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EMPLOYEE, DESC_BOB)));","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":161,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditCommand.EditEmployeeDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editEmployeeDescriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"hjungwoo01"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editEmployeeDescriptor\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"hjungwoo01"},"content":"                + editEmployeeDescriptor + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"hjungwoo01":55,"-":113}},{"path":"src/test/java/seedu/address/logic/commands/EditEmployeeDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"public class EditEmployeeDescriptorTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor descriptorWithSameValues \u003d new EditEmployeeDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_ROLE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"quelinxiao"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"quelinxiao"},"content":"        // different team -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"quelinxiao"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withAddress(VALID_TEAM_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"quelinxiao"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        editedAmy \u003d new EditEmployeeDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor editEmployeeDescriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        String expected \u003d EditCommand.EditEmployeeDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"                + editEmployeeDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"                + editEmployeeDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"                + editEmployeeDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"quelinxiao"},"content":"                + editEmployeeDescriptor.getAddress().orElse(null) + \", team\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"quelinxiao"},"content":"                + editEmployeeDescriptor.getTeam().orElse(null) + \", role\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"quelinxiao"},"content":"                + editEmployeeDescriptor.getRole().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"                + editEmployeeDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected, editEmployeeDescriptor.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"quelinxiao":13,"hjungwoo01":16,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStubWithEmployee;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStubWithNoEmployee;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for FilterCommand.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"public class FilterCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_validFilter_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        Employee testEmployee \u003d new EmployeeBuilder().withName(\"Alice\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        ModelStub modelStub \u003d new ModelStubWithEmployee(Collections.singletonList(testEmployee));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        Predicate\u003cEmployee\u003e predicate \u003d employee -\u003e employee.getName().equals(testEmployee.getName());","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate, \"Name: Alice\");","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e filterCommand.execute(modelStub));","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(Arrays.asList(testEmployee), modelStub.getFilteredEmployeeList());","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidFilter_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        ModelStub modelStub \u003d new ModelStubWithNoEmployee();","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        Predicate\u003cEmployee\u003e predicate \u003d employee -\u003e false;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(predicate, \"Name: Nonexistent\");","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e filterCommand.execute(modelStub));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":47}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPLOYEES_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.CARL;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ELLE;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.FIONA;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_zeroKeywords_noEmployeeFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_multipleKeywords_multipleEmployeesFound() {","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EMPLOYEES_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.updateFilteredEmployeeList(predicate);","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hjungwoo01":15,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEmployeeAtIndex;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        showEmployeeAtIndex(model, INDEX_FIRST_EMPLOYEE);","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hjungwoo01":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/MarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"public class MarkTaskCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_validUidAndTaskNumber_success() {","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToMark \u003d model.getFilteredEmployeeList().get(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        employeeToMark.clearTasks();","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        employeeToMark.addTask(new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d employeeToMark.getUid();","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        int taskIndex \u003d 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(uid, taskIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        String expectedMessage \u003d String.format(MarkTaskCommand.MESSAGE_SUCCESS, \"[X] Buy milk\");","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        expectedModel.markTask(employeeToMark, taskIndex);","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandSuccess(markTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidUid_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId invalidUid \u003d new UniqueId(\"-1\");","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(invalidUid, 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        Employee employeeToMark \u003d model.getFilteredEmployeeList().get(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d employeeToMark.getUid();","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        int invalidTaskNumber \u003d 9999;","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        MarkTaskCommand markTaskCommand \u003d new MarkTaskCommand(uid, invalidTaskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        assertCommandFailure(markTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":56}},{"path":"src/test/java/seedu/address/logic/commands/ShowAllCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalEmployees;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStub;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelStubWithFilteredEmployeeList;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ShowAllCommand.","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"public class ShowAllCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_showAll_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        ModelStub modelStub \u003d new ModelStubWithFilteredEmployeeList();","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"        ShowAllCommand showAllCommand \u003d new ShowAllCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e showAllCommand.execute(modelStub));","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(getTypicalEmployees(), modelStub.getFilteredEmployeeList());","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    // Model stubs and other necessary test utilities","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":27}},{"path":"src/test/java/seedu/address/logic/commands/UnmarkTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"public class UnmarkTaskCommandTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private Model model;","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    @BeforeEach","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public void setUp() {","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_taskUnmarkedSuccessfully_success() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().withUid(\"1\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        employee.addTask(new Description(\"Complete assignment\"));","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        model.addEmployee(employee);","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        employee.markTask(0);","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(employee.getUid(), 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        CommandResult commandResult \u003d unmarkTaskCommand.execute(model);","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(String.format(UnmarkTaskCommand.MESSAGE_SUCCESS, employee.getTask(0)),","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(employee.getTask(0).isDone());","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidEmployeeUid_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId invalidUid \u003d new UniqueId(\"9999\");","lastModifiedDate":"2024-04-03"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(invalidUid, 1);","lastModifiedDate":"2024-04-03"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e unmarkTaskCommand.execute(model),","lastModifiedDate":"2024-04-03"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"                Messages.MESSAGE_INVALID_EMPLOYEE_DISPLAYED_UID);","lastModifiedDate":"2024-04-03"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    public void execute_invalidTaskNumber_throwsCommandException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().withUid(\"1\").build();","lastModifiedDate":"2024-04-03"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        model.addEmployee(employee);","lastModifiedDate":"2024-04-03"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"        UnmarkTaskCommand unmarkTaskCommand \u003d new UnmarkTaskCommand(employee.getUid(), -1);","lastModifiedDate":"2024-04-03"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(CommandException.class, () -\u003e unmarkTaskCommand.execute(model),","lastModifiedDate":"2024-04-03"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"                Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2024-04-03"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":64}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TEAM_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TEAM_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    private void assertEmployeeDetailsEqual(Employee expected, Employee actual) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getName(), actual.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getPhone(), actual.getPhone());","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getEmail(), actual.getEmail());","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getAddress(), actual.getAddress());","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getRole(), actual.getRole());","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getTeam(), actual.getTeam());","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getTags(), actual.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_allFieldsPresent_success() throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand resultCommand \u003d parser.parse(PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_FRIEND);","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        assertEmployeeDetailsEqual(expectedEmployee, resultCommand.getEmployee());","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"        Employee expectedEmployeeMultipleTags \u003d new EmployeeBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand resultCommandMultipleTags \u003d parser.parse(","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TEAM_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"                        + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND);","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"        assertEmployeeDetailsEqual(expectedEmployeeMultipleTags, resultCommandMultipleTags.getEmployee());","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"quelinxiao"},"content":"                + ADDRESS_DESC_BOB + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"quelinxiao"},"content":"        // multiple teams","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, TEAM_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TEAM));","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"quelinxiao"},"content":"        // multiple roles","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, ROLE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_AMY + ROLE_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE,","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"quelinxiao"},"content":"                        PREFIX_TEAM, PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"quelinxiao"},"content":"        // invalid team","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, INVALID_TEAM_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TEAM));","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"quelinxiao"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, INVALID_ROLE_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"quelinxiao"},"content":"        // invalid team","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_TEAM_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TEAM));","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"quelinxiao"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ROLE_DESC,","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"quelinxiao"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ROLE));","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_optionalFieldsMissing_success() throws ParseException {","lastModifiedDate":"2024-04-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"hjungwoo01"},"content":"        Employee expectedEmployee \u003d new EmployeeBuilder(AMY).withTags().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand expectedCommand \u003d new AddCommand(expectedEmployee);","lastModifiedDate":"2024-04-03"},{"lineNumber":187,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":188,"author":{"gitId":"hjungwoo01"},"content":"        // Parse the command","lastModifiedDate":"2024-04-03"},{"lineNumber":189,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand actualCommand \u003d parser.parse(NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-04-03"},{"lineNumber":190,"author":{"gitId":"hjungwoo01"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TEAM_DESC_AMY + ROLE_DESC_AMY);","lastModifiedDate":"2024-04-03"},{"lineNumber":191,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":192,"author":{"gitId":"hjungwoo01"},"content":"        Employee actualEmployee \u003d actualCommand.getEmployee();","lastModifiedDate":"2024-04-03"},{"lineNumber":193,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":194,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getName(), actualEmployee.getName());","lastModifiedDate":"2024-04-03"},{"lineNumber":195,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getPhone(), actualEmployee.getPhone());","lastModifiedDate":"2024-04-03"},{"lineNumber":196,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getEmail(), actualEmployee.getEmail());","lastModifiedDate":"2024-04-03"},{"lineNumber":197,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getAddress(), actualEmployee.getAddress());","lastModifiedDate":"2024-04-03"},{"lineNumber":198,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getTeam(), actualEmployee.getTeam());","lastModifiedDate":"2024-04-03"},{"lineNumber":199,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getRole(), actualEmployee.getRole());","lastModifiedDate":"2024-04-03"},{"lineNumber":200,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedEmployee.getTags(), actualEmployee.getTags());","lastModifiedDate":"2024-04-03"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":204,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"quelinxiao"},"content":"                VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":216,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":222,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":224,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":229,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":230,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"quelinxiao"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":233,"author":{"gitId":"quelinxiao"},"content":"        // missing team prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":234,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":235,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":236,"author":{"gitId":"quelinxiao"},"content":"                        + VALID_TEAM_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":237,"author":{"gitId":"quelinxiao"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":238,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":239,"author":{"gitId":"quelinxiao"},"content":"        // missing role prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":240,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":241,"author":{"gitId":"quelinxiao"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":242,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + VALID_ROLE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":246,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"quelinxiao"},"content":"                VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"quelinxiao"},"content":"                        + VALID_TEAM_BOB + VALID_ROLE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":256,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":260,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":264,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":268,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":269,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":270,"author":{"gitId":"quelinxiao"},"content":"        // invalid team","lastModifiedDate":"2024-03-16"},{"lineNumber":271,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":272,"author":{"gitId":"quelinxiao"},"content":"                + INVALID_TEAM_DESC + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Team.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":273,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":274,"author":{"gitId":"quelinxiao"},"content":"        // invalid role","lastModifiedDate":"2024-03-16"},{"lineNumber":275,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + INVALID_ROLE_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":280,"author":{"gitId":"quelinxiao"},"content":"                + TEAM_DESC_BOB + ROLE_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":283,"author":{"gitId":"quelinxiao"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":284,"author":{"gitId":"quelinxiao"},"content":"                INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":285,"author":{"gitId":"quelinxiao"},"content":"                        + TEAM_DESC_BOB + ROLE_DESC_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":286,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":290,"author":{"gitId":"quelinxiao"},"content":"                + ADDRESS_DESC_BOB + TEAM_DESC_BOB + ROLE_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"quelinxiao":89,"hjungwoo01":44,"-":160}},{"path":"src/test/java/seedu/address/logic/parser/AddTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"public class AddTaskCommandParserTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"    private AddTaskCommandParser parser \u003d new AddTaskCommandParser();","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public void parse_validArgs_returnsAddTaskCommand() throws IllegalStateException, IllegalValueException {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        AddTaskCommand command \u003d parser.parse(\"uid/1 Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new AddTaskCommand(new UniqueId(1), new Description(\"Buy milk\")), command);","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"1\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shayaansultan":29}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.logic.commands.AddTaskCommand;","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.ShowAllCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeUtil;","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    private void assertEmployeeEquals(Employee expected, Employee actual) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getName(), actual.getName());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getPhone(), actual.getPhone());","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getEmail(), actual.getEmail());","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getAddress(), actual.getAddress());","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getTeam(), actual.getTeam());","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getRole(), actual.getRole());","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expected.getTags(), actual.getTags());","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EmployeeUtil.getAddCommand(employee));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        assertEmployeeEquals(employee, command.getEmployee());","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EMPLOYEE.getOneBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EMPLOYEE), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder(employee).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"                + INDEX_FIRST_EMPLOYEE.getOneBased() + \" \" + EmployeeUtil.getEditEmployeeDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EMPLOYEE, descriptor), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywords));","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"    public void parseCommand_addTask() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(parser.parseCommand(AddTaskCommand.COMMAND_WORD","lastModifiedDate":"2024-04-01"},{"lineNumber":109,"author":{"gitId":"shayaansultan"},"content":"                + \" uid/1000 hello world\") instanceof AddTaskCommand);","lastModifiedDate":"2024-04-01"},{"lineNumber":110,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":111,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"    public void parseCommand_filter() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"        String keyword \u003d \"developer\";","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"        FilterCommand command \u003d (FilterCommand) parser.parseCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"                FilterCommand.COMMAND_WORD + \" t/\" + keyword);","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"        assertNotNull(command);","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"        Predicate\u003cEmployee\u003e expectedPredicate \u003d employee -\u003e employee.getName().fullName.contains(keyword)","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"                || employee.getRole().value.contains(keyword)","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"                || employee.getTeam().teamName.contains(keyword)","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"                || employee.getTags().stream().anyMatch(tag -\u003e tag.tagName.contains(keyword));","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"        Employee sampleEmployee \u003d new EmployeeBuilder()","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"                .withName(\"John\")","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"                .withRole(\"Developer\")","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"                .withTeam(\"A\")","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"                .withTags(\"developer\")","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"hjungwoo01"},"content":"                .build();","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"        Predicate\u003cEmployee\u003e actualPredicate \u003d command.getPredicate();","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(actualPredicate.test(sampleEmployee));","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"hjungwoo01"},"content":"    public void parseCommand_showAll() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(parser.parseCommand(ShowAllCommand.COMMAND_WORD) instanceof ShowAllCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(parser.parseCommand(ShowAllCommand.COMMAND_WORD + \"   \") instanceof ShowAllCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hjungwoo01":60,"shayaansultan":8,"-":83}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * outside the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_EMPLOYEE));","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_validName_returnsDeleteCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        String validName \u003d \"John Doe\";","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand expectedCommand \u003d new DeleteCommand(validName);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        assertParseSuccess(parser, validName, expectedCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_emptyArgs_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_specialCharacterArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"$\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidUidFormat_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"uid/\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_missingUid_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"uid/\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_validUid_returnsDeleteCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        String validUid \u003d \"12345\";","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d new UniqueId(validUid);","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommand expectedCommand \u003d new DeleteCommand(uid);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        assertNotNull(expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        assertParseSuccess(parser, \"uid/\" + validUid, expectedCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    public void parseDeleteByUniqueId_invalidUidFormat_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        // UID format without digits","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"uid/abc\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        // UID format with special characters","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"uid/123!@#\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"        // No UID after the prefix","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"uid/\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"    public void parseDeleteByName_invalidNameFormat_throwsParseException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        // Name with numbers","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"John Doe1\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        // Name with special characters","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"John@Doe\"));","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        // Empty string after trim","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"   \"));","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidUid_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"        String invalidUid \u003d \"invalid\";","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"uid/\" + invalidUid, String","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_missingUidPart_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"uid/\", String","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_uidWithExtraSlash_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"        String uidWithExtraSlash \u003d \"12345/\";","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"        assertParseFailure(parser, \"uid/\" + uidWithExtraSlash, String","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"                .format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"hjungwoo01":93,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EditEmployeeDescriptorBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Employee} being edited,","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"        Index targetIndex \u003d INDEX_SECOND_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"        EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"        Index targetIndex \u003d INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"        Index targetIndex \u003d INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"                new EditEmployeeDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"hjungwoo01"},"content":"        Index targetIndex \u003d INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2023-07-14"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":201,"author":{"gitId":"hjungwoo01"},"content":"        Index targetIndex \u003d INDEX_THIRD_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"hjungwoo01"},"content":"        EditCommand.EditEmployeeDescriptor descriptor \u003d new EditEmployeeDescriptorBuilder().withTags().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"hjungwoo01":24,"-":185}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_validArgs_returnsFilterCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"filter n/ Alice\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"filter t/ friend\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"filter T/ Team A\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"filter r/ Manager\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"filter\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"filter n/ Alice t/\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_nullArgs_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":34}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"hjungwoo01":1,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/MarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.MarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class MarkTaskCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    private final MarkTaskCommandParser parser \u003d new MarkTaskCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_validArgs_returnsMarkTaskCommand() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d new UniqueId(\"123\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"uid/123 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        MarkTaskCommand expectedCommand \u003d new MarkTaskCommand(uid, taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        MarkTaskCommand actualCommand \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedCommand.getUid(), actualCommand.getUid());","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedCommand.getTaskNumber(), actualCommand.getTaskNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"invalid arguments\";","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidTaskNumber_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"uid/123 notAnInteger\";","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":43}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EMPLOYEE;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(INDEX_FIRST_EMPLOYEE, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"hjungwoo01":7,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/UnmarkTaskCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-04-03"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-03"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-03"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-03"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.UnmarkTaskCommand;","lastModifiedDate":"2024-04-03"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-04-03"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-03"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"public class UnmarkTaskCommandParserTest {","lastModifiedDate":"2024-04-03"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"    private final UnmarkTaskCommandParser parser \u003d new UnmarkTaskCommandParser();","lastModifiedDate":"2024-04-03"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_validArgs_returnsUnmarkTaskCommand() throws Exception {","lastModifiedDate":"2024-04-03"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"        UniqueId uid \u003d new UniqueId(\"123\");","lastModifiedDate":"2024-04-03"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2024-04-03"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"uid/123 1\";","lastModifiedDate":"2024-04-03"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        UnmarkTaskCommand expectedCommand \u003d new UnmarkTaskCommand(uid, taskNumber);","lastModifiedDate":"2024-04-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        UnmarkTaskCommand actualCommand \u003d parser.parse(userInput);","lastModifiedDate":"2024-04-03"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedCommand.getUid(), actualCommand.getUid());","lastModifiedDate":"2024-04-03"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedCommand.getTaskNumber(), actualCommand.getTaskNumber());","lastModifiedDate":"2024-04-03"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"invalid arguments\";","lastModifiedDate":"2024-04-03"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-04-03"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    public void parse_invalidTaskNumber_throwsParseException() {","lastModifiedDate":"2024-04-03"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        String userInput \u003d \"uid/123 notAnInteger\";","lastModifiedDate":"2024-04-03"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-04-03"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-04-03"}],"authorContributionMap":{"hjungwoo01":43}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2024-04-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(Collections.emptyList(), addressBook.getEmployeeList());","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    public void resetData_withDuplicateEmployees_throwsDuplicateEmployeeException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        // Two employees with the same identity fields","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e newEmployees \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newEmployees);","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEmployee(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_employeeNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(addressBook.hasEmployee(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_employeeInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.addEmployee(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(addressBook.hasEmployee(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_employeeWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        assertNotNull(ALICE, \"ALICE should be initialized before use\");","lastModifiedDate":"2024-04-03"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.addEmployee(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(addressBook.hasEmployee(editedAlice));","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"    public void getEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEmployeeList().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{employees\u003d\" + addressBook.getEmployeeList() + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"     * A stub ReadOnlyAddressBook whose employees list can violate interface constraints.","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        private final ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        AddressBookStub(Collection\u003cEmployee\u003e employees) {","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"            this.employees.setAll(employees);","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"        public ObservableList\u003cEmployee\u003e getEmployeeList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"            return employees;","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"hjungwoo01":34,"-":76}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EMPLOYEES;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.BENSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_nullEmployee_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEmployee(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_employeeNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    public void hasEmployee_employeeInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"        modelManager.addEmployee(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(modelManager.hasEmployee(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"    public void getFilteredEmployeeList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEmployeeList().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withEmployee(ALICE).withEmployee(BENSON).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"        modelManager.updateFilteredEmployeeList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"        modelManager.updateFilteredEmployeeList(PREDICATE_SHOW_ALL_EMPLOYEES);","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"hjungwoo01":16,"-":116}},{"path":"src/test/java/seedu/address/model/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public void addEmployee(Employee employee) {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    public void deleteEmployee(Employee target) {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    public void setEmployee(Employee target, Employee editedEmployee) {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-04-03"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    public void markTask(Employee employeeToMark, int taskIndex) {","lastModifiedDate":"2024-04-03"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-04-03"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-04-03"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":89}},{"path":"src/test/java/seedu/address/model/ModelStubWithEmployee.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" * A Model stub that contains employees.","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"public class ModelStubWithEmployee extends ModelStub {","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    private final ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     * Initializes a ModelStubWithEmployee with the given employee.","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     * @param employee The employee to be added to the model.","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    public ModelStubWithEmployee(List\u003cEmployee\u003e employeesList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employeesList);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        employees.addAll(employeesList);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employee);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"        return employees.stream().anyMatch(employee::isSameEmployee);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        return employees;","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        ObservableList\u003cEmployee\u003e filteredList \u003d employees.stream().filter(predicate)","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"                .collect(Collectors.toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        employees.setAll(filteredList);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":48}},{"path":"src/test/java/seedu/address/model/ModelStubWithFilteredEmployeeList.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalEmployees;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" * A Model stub that contains a filtered list of employees.","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"public class ModelStubWithFilteredEmployeeList extends ModelStub {","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"    private ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    private ObservableList\u003cEmployee\u003e filteredEmployees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"     * Initializes a ModelStubWithFilteredEmployeeList with the given list of employees.","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    public ModelStubWithFilteredEmployeeList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"        employees.addAll(getTypicalEmployees());","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"        filteredEmployees.addAll(employees);","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        return filteredEmployees;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        filteredEmployees \u003d employees.stream().filter(predicate).collect(Collectors","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"                .toCollection(FXCollections::observableArrayList));","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    public void resetData() {","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        filteredEmployees \u003d FXCollections.observableArrayList(employees);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":40}},{"path":"src/test/java/seedu/address/model/ModelStubWithNoEmployee.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":" * A Model stub that contains no employees.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"public class ModelStubWithNoEmployee extends ModelStub {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"    private final ObservableList\u003cEmployee\u003e employees \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"    public boolean hasEmployee(Employee employee) {","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"        requireNonNull(employee);","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"        return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public ObservableList\u003cEmployee\u003e getFilteredEmployeeList() {","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        return employees;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    public void updateFilteredEmployeeList(Predicate\u003cEmployee\u003e predicate) {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"        // The list remains empty because there are no employees to filter.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"hjungwoo01":33}},{"path":"src/test/java/seedu/address/model/employee/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Address address \u003d new Address(\"Valid Address\");","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(new Address(\"Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(address.equals(address));","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(address.equals(new Address(\"Other Valid Address\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hjungwoo01":1,"-":55}},{"path":"src/test/java/seedu/address/model/employee/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Email email \u003d new Email(\"valid@email\");","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(new Email(\"valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(email.equals(email));","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(email.equals(new Email(\"other.valid@email\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hjungwoo01":1,"-":87}},{"path":"src/test/java/seedu/address/model/employee/EmployeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TEAM_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"        Employee employee \u003d new EmployeeBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e employee.getTags().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(ALICE.isSameEmployee(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(ALICE.isSameEmployee(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTeam(VALID_TEAM_BOB).withRole(VALID_ROLE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"PyromancerBoom"},"content":"                .withTags(VALID_TAG_HUSBAND).withUid(VALID_UID_AMY).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(ALICE.isSameEmployee(editedAlice));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedBob \u003d new EmployeeBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        editedBob \u003d new EmployeeBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(BOB.isSameEmployee(editedBob));","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        Employee aliceCopy \u003d new EmployeeBuilder(ALICE).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        editedAlice \u003d new EmployeeBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"        String expected \u003d Employee.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"quelinxiao"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", team\u003d\" + ALICE.getTeam()","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"PyromancerBoom"},"content":"                + \", role\u003d\" + ALICE.getRole() + \", tags\u003d\" + ALICE.getTags() + \", uid\u003d\" + ALICE.getUid() + \"}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"PyromancerBoom":3,"quelinxiao":4,"hjungwoo01":26,"-":71}},{"path":"src/test/java/seedu/address/model/employee/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        // different employee -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(predicate.test(new EmployeeBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"hjungwoo01":10,"-":75}},{"path":"src/test/java/seedu/address/model/employee/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d new Name(\"Valid Name\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(new Name(\"Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(name.equals(new Name(\"Other Valid Name\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hjungwoo01":1,"-":59}},{"path":"src/test/java/seedu/address/model/employee/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d new Phone(\"999\");","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(new Phone(\"999\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(5.0f));","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(phone.equals(new Phone(\"995\")));","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"hjungwoo01":1,"-":59}},{"path":"src/test/java/seedu/address/model/employee/UniqueEmployeeListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hjungwoo01"},"content":"package seedu.address.model.employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"hjungwoo01"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import java.util.List;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.exceptions.DuplicateEmployeeException;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.exceptions.EmployeeNotFoundException;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.EmployeeBuilder;","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"public class UniqueEmployeeListTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    private final UniqueEmployeeList uniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.contains(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"        assertFalse(uniqueEmployeeList.contains(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(uniqueEmployeeList.contains(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"                .build();","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"        assertTrue(uniqueEmployeeList.contains(editedAlice));","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.add(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniqueEmployeeList.add(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployee(null, ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, null));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.setEmployee(ALICE, ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        expectedUniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"        Employee editedAlice \u003d new EmployeeBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"                .build();","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.setEmployee(ALICE, editedAlice);","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        expectedUniqueEmployeeList.add(editedAlice);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":94,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.setEmployee(ALICE, BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"hjungwoo01"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":103,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e uniqueEmployeeList.setEmployee(ALICE, BOB));","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"hjungwoo01"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.remove(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"hjungwoo01"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(EmployeeNotFoundException.class, () -\u003e uniqueEmployeeList.remove(ALICE));","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"hjungwoo01"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.remove(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"hjungwoo01"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployees((UniqueEmployeeList) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"hjungwoo01"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"hjungwoo01"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":140,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.setEmployees(expectedUniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":142,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"hjungwoo01"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEmployeeList.setEmployees((List\u003cEmployee\u003e) null));","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":150,"author":{"gitId":"hjungwoo01"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.add(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e employeeList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"hjungwoo01"},"content":"        uniqueEmployeeList.setEmployees(employeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"hjungwoo01"},"content":"        UniqueEmployeeList expectedUniqueEmployeeList \u003d new UniqueEmployeeList();","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"hjungwoo01"},"content":"        expectedUniqueEmployeeList.add(BOB);","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(expectedUniqueEmployeeList, uniqueEmployeeList);","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":159,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"hjungwoo01"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":161,"author":{"gitId":"hjungwoo01"},"content":"        List\u003cEmployee\u003e listWithDuplicateEmployees \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DuplicateEmployeeException.class, () -\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"hjungwoo01"},"content":"                uniqueEmployeeList.setEmployees(listWithDuplicateEmployees));","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"hjungwoo01"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":168,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"hjungwoo01"},"content":"            -\u003e uniqueEmployeeList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"hjungwoo01"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":173,"author":{"gitId":"hjungwoo01"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(uniqueEmployeeList.asUnmodifiableObservableList().toString(), uniqueEmployeeList.toString());","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"hjungwoo01"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"hjungwoo01"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"hjungwoo01":176}},{"path":"src/test/java/seedu/address/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"public class DescriptionTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"    public void isValidDescription() {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"        // null description","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Description.isValidDescription(null));","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"        // blank description","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Description.isValidDescription(\"\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        // invalid descriptions","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Description.isValidDescription(\"-\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Description.isValidDescription(\" \"));","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        // valid descriptions","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(Description.isValidDescription(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(Description.isValidDescription(\"123\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(Description.isValidDescription(\"Buy 123 milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        Description description \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"Buy milk\", description.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    public void testEquals() {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        Description description1 \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        Description description2 \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        Description description3 \u003d new Description(\"Buy bread\");","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(description1, description1);","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(description1, description2);","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        assertNotEquals(description1, description3);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        assertNotEquals(description1, 1);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        assertNotEquals(description1, null);","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"    public void testHashCode() {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        Description description1 \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"        Description description2 \u003d new Description(\"Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(description1.hashCode(), description2.hashCode());","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shayaansultan":63}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.task;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"public class TaskTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"    public void isSameTask() {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"        Task task1 \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"        Task task2 \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"        Task task3 \u003d new Task(new Description(\"Buy bread\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(task1.isSameTask(task1));","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(task1.isSameTask(task2));","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(task1.isSameTask(task3));","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"[_] Buy milk\", task.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        task.mark();","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"[X] Buy milk\", task.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"    public void testIsValidTaskString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(Task.isValidTaskString(\"[_] Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(Task.isValidTaskString(\"[X] Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Task.isValidTaskString(\"[_]Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Task.isValidTaskString(\"[X]Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Task.isValidTaskString(\"[ ] Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(Task.isValidTaskString(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    public void testParseTaskString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d Task.parseTaskString(\"[_] Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new Task(new Description(\"Buy milk\")), task);","lastModifiedDate":"2024-04-01"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        task \u003d Task.parseTaskString(\"[X] Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        Task doneTask \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"        doneTask.mark();","lastModifiedDate":"2024-04-01"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(doneTask, task);","lastModifiedDate":"2024-04-01"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shayaansultan":55}},{"path":"src/test/java/seedu/address/model/tasklist/TaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.tasklist;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"public class TaskListTest {","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public void addTask() {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        // check if task is added","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(taskList.getTasks().get(0), task);","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"    public void removeTask() {","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        taskList.removeTask(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"        // check if task is removed","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(taskList.getTasks().isEmpty());","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"    public void markTask() {","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"        taskList.markTask(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":40,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"        // check if task is marked","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"shayaansultan"},"content":"    public void unmarkTask() {","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"shayaansultan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":48,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":50,"author":{"gitId":"shayaansultan"},"content":"        taskList.markTask(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":51,"author":{"gitId":"shayaansultan"},"content":"        taskList.unmarkTask(0);","lastModifiedDate":"2024-04-01"},{"lineNumber":52,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"shayaansultan"},"content":"        // check if task is unmarked","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"shayaansultan"},"content":"        assertFalse(taskList.getTasks().get(0).isDone());","lastModifiedDate":"2024-04-01"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":58,"author":{"gitId":"shayaansultan"},"content":"    public void testToString() {","lastModifiedDate":"2024-04-01"},{"lineNumber":59,"author":{"gitId":"shayaansultan"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":60,"author":{"gitId":"shayaansultan"},"content":"        Task task \u003d new Task(new Description(\"Buy milk\"));","lastModifiedDate":"2024-04-01"},{"lineNumber":61,"author":{"gitId":"shayaansultan"},"content":"        taskList.addTask(task);","lastModifiedDate":"2024-04-01"},{"lineNumber":62,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":63,"author":{"gitId":"shayaansultan"},"content":"        // check if toString is correct","lastModifiedDate":"2024-04-01"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(\"[_] Buy milk\\n\", taskList.toString());","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"shayaansultan":66}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.model.util;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import java.util.Set;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"    public void getSampleEmployees() {","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"        Employee[] sampleEmployees \u003d SampleDataUtil.getSampleEmployees();","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(6, sampleEmployees.length);","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new UniqueId(\"101\"), sampleEmployees[0].getUid());","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new UniqueId(\"106\"), sampleEmployees[5].getUid());","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    public void getSampleAddressBook() {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        ReadOnlyAddressBook sampleAb \u003d SampleDataUtil.getSampleAddressBook();","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(sampleAb instanceof AddressBook);","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(6, sampleAb.getEmployeeList().size());","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":31,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":32,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":33,"author":{"gitId":"shayaansultan"},"content":"    public void getTagSet() {","lastModifiedDate":"2024-04-01"},{"lineNumber":34,"author":{"gitId":"shayaansultan"},"content":"        Set\u003cTag\u003e tagSet \u003d SampleDataUtil.getTagSet(\"friends\", \"colleagues\");","lastModifiedDate":"2024-04-01"},{"lineNumber":35,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(2, tagSet.size());","lastModifiedDate":"2024-04-01"},{"lineNumber":36,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(tagSet.contains(new Tag(\"friends\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":37,"author":{"gitId":"shayaansultan"},"content":"        assertTrue(tagSet.contains(new Tag(\"colleagues\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":38,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":39,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shayaansultan":39}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEmployeeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.storage.JsonAdaptedEmployee.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.BENSON;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"public class JsonAdaptedEmployeeTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"quelinxiao"},"content":"    private static final String INVALID_TEAM \u003d \"Neon Cats\";","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"quelinxiao"},"content":"    private static final String INVALID_ROLE \u003d \" \";","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String INVALID_UID \u003d \"-42\";","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"quelinxiao"},"content":"    private static final String VALID_TEAM \u003d BENSON.getTeam().teamName;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"    private static final String VALID_ROLE \u003d BENSON.getRole().toString();","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"    private static final String VALID_UID \u003d BENSON.getUid().getUidValue().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"shayaansultan"},"content":"    private static final List\u003cJsonAdaptedTask\u003e VALID_TASKS \u003d BENSON.getTasks().stream()","lastModifiedDate":"2024-04-01"},{"lineNumber":43,"author":{"gitId":"shayaansultan"},"content":"            .map(JsonAdaptedTask::new)","lastModifiedDate":"2024-04-01"},{"lineNumber":44,"author":{"gitId":"shayaansultan"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"    public void toModelType_validEmployeeDetails_returnsEmployee() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(BENSON);","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(BENSON, employee.toModelType());","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"shayaansultan"},"content":"                VALID_TEAM, VALID_ROLE, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"shayaansultan"},"content":"                VALID_TEAM, VALID_ROLE, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"shayaansultan"},"content":"                VALID_TEAM, VALID_ROLE, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"shayaansultan"},"content":"                VALID_TEAM, VALID_ROLE, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"quelinxiao"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"quelinxiao"},"content":"    public void toModelType_invalidTeam_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"PyromancerBoom"},"content":"                INVALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":125,"author":{"gitId":"quelinxiao"},"content":"        String expectedMessage \u003d Team.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"quelinxiao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"quelinxiao"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"quelinxiao"},"content":"    public void toModelType_nullTeam_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"shayaansultan"},"content":"                null, VALID_ROLE, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":133,"author":{"gitId":"quelinxiao"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Team.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"quelinxiao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"quelinxiao"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"quelinxiao"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, INVALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":142,"author":{"gitId":"quelinxiao"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"quelinxiao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"quelinxiao"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"quelinxiao"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"quelinxiao"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"shayaansultan"},"content":"                VALID_TEAM, null, VALID_TAGS, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":150,"author":{"gitId":"quelinxiao"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"quelinxiao"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, employee::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"shayaansultan"},"content":"                invalidTags, VALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":161,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, employee::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"PyromancerBoom"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":165,"author":{"gitId":"PyromancerBoom"},"content":"    public void toModelType_invalidUid_throwsIllegalValueException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"PyromancerBoom"},"content":"        JsonAdaptedEmployee employee \u003d new JsonAdaptedEmployee(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":167,"author":{"gitId":"PyromancerBoom"},"content":"                VALID_TEAM, VALID_ROLE,","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"shayaansultan"},"content":"                VALID_TAGS, INVALID_UID, VALID_TASKS);","lastModifiedDate":"2024-04-01"},{"lineNumber":169,"author":{"gitId":"PyromancerBoom"},"content":"        assertThrows(IllegalValueException.class, employee::toModelType);","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"PyromancerBoom":22,"quelinxiao":36,"hjungwoo01":19,"shayaansultan":17,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"shayaansultan"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-04-01"},{"lineNumber":2,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":3,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-04-01"},{"lineNumber":4,"author":{"gitId":"shayaansultan"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-04-01"},{"lineNumber":5,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":6,"author":{"gitId":"shayaansultan"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-04-01"},{"lineNumber":7,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":8,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-04-01"},{"lineNumber":9,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-01"},{"lineNumber":10,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":11,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":12,"author":{"gitId":"shayaansultan"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2024-04-01"},{"lineNumber":13,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":14,"author":{"gitId":"shayaansultan"},"content":"    public void toModelType_validTaskString_returnsTask() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(\"[_] Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new Task(new Description(\"Buy milk\")), task.toModelType());","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":19,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":20,"author":{"gitId":"shayaansultan"},"content":"    public void toModelType_invalidTaskString_throwsIllegalValueException() {","lastModifiedDate":"2024-04-01"},{"lineNumber":21,"author":{"gitId":"shayaansultan"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(\"[_]Buy milk\");","lastModifiedDate":"2024-04-01"},{"lineNumber":22,"author":{"gitId":"shayaansultan"},"content":"        assertThrows(IllegalValueException.class, task::toModelType);","lastModifiedDate":"2024-04-01"},{"lineNumber":23,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":24,"author":{"gitId":"shayaansultan"},"content":"","lastModifiedDate":"2024-04-01"},{"lineNumber":25,"author":{"gitId":"shayaansultan"},"content":"    @Test","lastModifiedDate":"2024-04-01"},{"lineNumber":26,"author":{"gitId":"shayaansultan"},"content":"    public void toModelType_constructorTask_returnsTask() throws Exception {","lastModifiedDate":"2024-04-01"},{"lineNumber":27,"author":{"gitId":"shayaansultan"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(new Task(new Description(\"Buy milk\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":28,"author":{"gitId":"shayaansultan"},"content":"        assertEquals(new Task(new Description(\"Buy milk\")), task.toModelType());","lastModifiedDate":"2024-04-01"},{"lineNumber":29,"author":{"gitId":"shayaansultan"},"content":"    }","lastModifiedDate":"2024-04-01"},{"lineNumber":30,"author":{"gitId":"shayaansultan"},"content":"}","lastModifiedDate":"2024-04-01"}],"authorContributionMap":{"shayaansultan":30}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.ALICE;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.HOON;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.IDA;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"quelinxiao"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"quelinxiao"},"content":"            \"JsonAddressBookStorageTest\");","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"    public void readAddressBook_invalidEmployeeAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidEmployeeAddressBook.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"    public void readAddressBook_invalidAndValidEmployeeAddressBook_throwDataLoadingException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidEmployeeAddressBook.json\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"hjungwoo01"},"content":"        original.addEmployee(HOON);","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"        original.removeEmployee(ALICE);","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"hjungwoo01"},"content":"        original.addEmployee(IDA);","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"quelinxiao":2,"hjungwoo01":11,"-":98}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.testutil.TypicalEmployees;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":"    private static final Path TYPICAL_EMPLOYEES_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEmployeesAddressBook.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"    private static final Path INVALID_EMPLOYEE_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEmployeeAddressBook.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"    private static final Path DUPLICATE_EMPLOYEE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEmployeeAddressBook.json\");","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public void toModelType_typicalEmployeesFile_success() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EMPLOYEES_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"        AddressBook typicalEmployeesAddressBook \u003d TypicalEmployees.getTypicalAddressBook();","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        assertEquals(addressBookFromFile, typicalEmployeesAddressBook);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    public void toModelType_invalidEmployeeFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"hjungwoo01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EMPLOYEE_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    public void toModelType_duplicateEmployees_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EMPLOYEE_FILE,","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EMPLOYEE,","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hjungwoo01":13,"-":34}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"hjungwoo01"},"content":"import static seedu.address.testutil.TypicalEmployees.getTypicalAddressBook;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withEmployee(\"John\", \"Doe\").build();}","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * Adds a new {@code Employee} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public AddressBookBuilder withEmployee(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        addressBook.addEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditEmployeeDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand.EditEmployeeDescriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"quelinxiao"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"hjungwoo01"},"content":" * A utility class to help with building EditEmployeeDescriptor objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"hjungwoo01"},"content":"public class EditEmployeeDescriptorBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"hjungwoo01"},"content":"    private EditEmployeeDescriptor descriptor;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder(EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"hjungwoo01"},"content":"        this.descriptor \u003d new EditEmployeeDescriptor(descriptor);","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an {@code EditEmployeeDescriptor} with fields containing {@code employee}\u0027s details","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        descriptor \u003d new EditEmployeeDescriptor();","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        descriptor.setName(employee.getName());","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        descriptor.setPhone(employee.getPhone());","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        descriptor.setEmail(employee.getEmail());","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"        descriptor.setAddress(employee.getAddress());","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"        descriptor.setRole(employee.getRole());","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"quelinxiao"},"content":"        descriptor.setTeam(employee.getTeam());","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"        descriptor.setTags(employee.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Name} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder withName(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Phone} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Email} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Address} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"quelinxiao"},"content":"     * Sets the {@code Role} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"quelinxiao"},"content":"    public EditEmployeeDescriptorBuilder withRole(String role) {","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"quelinxiao"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"quelinxiao"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"quelinxiao"},"content":"     * Sets the {@code Team} of the {@code EditEmployeeDescriptor} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"quelinxiao"},"content":"    public EditEmployeeDescriptorBuilder withTeam(String team) {","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"quelinxiao"},"content":"        descriptor.setTeam(new Team(team));","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"quelinxiao"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"hjungwoo01"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEmployeeDescriptor}","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"    public EditEmployeeDescriptor build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"quelinxiao":24,"hjungwoo01":28,"-":55}},{"path":"src/test/java/seedu/address/testutil/EmployeeBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Address;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Email;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Name;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Phone;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Role;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Team;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"import seedu.address.model.employee.UniqueId;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2024-04-01"},{"lineNumber":16,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2024-04-01"},{"lineNumber":17,"author":{"gitId":"shayaansultan"},"content":"import seedu.address.model.tasklist.TaskList;","lastModifiedDate":"2024-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":" * A utility class to help with building Employee objects.","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeBuilder {","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"quelinxiao"},"content":"    public static final String DEFAULT_TEAM \u003d \"A\";","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"    public static final String DEFAULT_ROLE \u003d \"Manager\";","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"PyromancerBoom"},"content":"    public static final String DEFAULT_UID \u003d \"1000\";","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"quelinxiao"},"content":"    private Team team;","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"quelinxiao"},"content":"    private Role role;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"PyromancerBoom"},"content":"    private UniqueId uid;","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"shayaansultan"},"content":"    private TaskList tasks;","lastModifiedDate":"2024-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"hjungwoo01"},"content":"     * Creates a {@code EmployeeBuilder} with the default details.","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"quelinxiao"},"content":"        team \u003d new Team(DEFAULT_TEAM);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"quelinxiao"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"PyromancerBoom"},"content":"        uid \u003d new UniqueId(DEFAULT_UID);","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"shayaansultan"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-04-01"},{"lineNumber":56,"author":{"gitId":"shayaansultan"},"content":"        tasks.addTask(new Task(new Description(\"Buy milk\")));","lastModifiedDate":"2024-04-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"hjungwoo01"},"content":"     * Initializes the EmployeeBuilder with the data of {@code employeeToCopy}.","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder(Employee employeeToCopy) {","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"hjungwoo01"},"content":"        name \u003d employeeToCopy.getName();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"hjungwoo01"},"content":"        phone \u003d employeeToCopy.getPhone();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"        email \u003d employeeToCopy.getEmail();","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"hjungwoo01"},"content":"        address \u003d employeeToCopy.getAddress();","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"quelinxiao"},"content":"        team \u003d employeeToCopy.getTeam();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"quelinxiao"},"content":"        role \u003d employeeToCopy.getRole();","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"hjungwoo01"},"content":"        tags \u003d new HashSet\u003c\u003e(employeeToCopy.getTags());","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"PyromancerBoom"},"content":"        uid \u003d employeeToCopy.getUid();","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"hjungwoo01"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2024-04-03"},{"lineNumber":72,"author":{"gitId":"hjungwoo01"},"content":"","lastModifiedDate":"2024-04-03"},{"lineNumber":73,"author":{"gitId":"hjungwoo01"},"content":"        for (Task task : employeeToCopy.getTasks()) {","lastModifiedDate":"2024-04-03"},{"lineNumber":74,"author":{"gitId":"hjungwoo01"},"content":"            tasks.addTask(task);","lastModifiedDate":"2024-04-03"},{"lineNumber":75,"author":{"gitId":"shayaansultan"},"content":"        }","lastModifiedDate":"2024-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Name} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder withName(String name) {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"PyromancerBoom"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"PyromancerBoom"},"content":"     * {@code Employee} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder withTags(String... tags) {","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Address} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder withAddress(String address) {","lastModifiedDate":"2024-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Phone} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder withPhone(String phone) {","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"hjungwoo01"},"content":"     * Sets the {@code Email} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"hjungwoo01"},"content":"    public EmployeeBuilder withEmail(String email) {","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"quelinxiao"},"content":"     * Sets the {@code Team} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":122,"author":{"gitId":"quelinxiao"},"content":"    public EmployeeBuilder withTeam(String team) {","lastModifiedDate":"2024-03-14"},{"lineNumber":123,"author":{"gitId":"quelinxiao"},"content":"        this.team \u003d new Team(team);","lastModifiedDate":"2024-03-14"},{"lineNumber":124,"author":{"gitId":"quelinxiao"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"quelinxiao"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"quelinxiao"},"content":"     * Sets the {@code Role} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"quelinxiao"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"quelinxiao"},"content":"    public EmployeeBuilder withRole(String role) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"quelinxiao"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"quelinxiao"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"quelinxiao"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"quelinxiao"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"PyromancerBoom"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"PyromancerBoom"},"content":"     * Sets the {@code UniqueId} of the {@code Employee} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"PyromancerBoom"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"PyromancerBoom"},"content":"    public EmployeeBuilder withUid(String uid) {","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"PyromancerBoom"},"content":"        this.uid \u003d new UniqueId(uid);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"PyromancerBoom"},"content":"        return this;","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"PyromancerBoom"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"PyromancerBoom"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"hjungwoo01"},"content":"    public Employee build() {","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"PyromancerBoom"},"content":"        return new Employee(name, phone, email, address, team, role, tags, uid);","lastModifiedDate":"2024-03-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"PyromancerBoom":16,"quelinxiao":24,"hjungwoo01":32,"shayaansultan":7,"-":68}},{"path":"src/test/java/seedu/address/testutil/EmployeeUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"quelinxiao"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEAM;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"hjungwoo01"},"content":" * A utility class for Employee.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"public class EmployeeUtil {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an add command string for adding the {@code employee}.","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"hjungwoo01"},"content":"    public static String getAddCommand(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getEmployeeDetails(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the part of command string for the given {@code employee}\u0027s details.","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"hjungwoo01"},"content":"    public static String getEmployeeDetails(Employee employee) {","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"hjungwoo01"},"content":"        sb.append(PREFIX_NAME + employee.getName().fullName + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"        sb.append(PREFIX_PHONE + employee.getPhone().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"        sb.append(PREFIX_EMAIL + employee.getEmail().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"hjungwoo01"},"content":"        sb.append(PREFIX_ADDRESS + employee.getAddress().value + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"quelinxiao"},"content":"        sb.append(PREFIX_TEAM + employee.getTeam().teamName + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"quelinxiao"},"content":"        sb.append(PREFIX_ROLE + employee.getRole().value + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"hjungwoo01"},"content":"        employee.getTags().stream().forEach(","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the part of command string for the given {@code EditEmployeeDescriptor}\u0027s details.","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"    public static String getEditEmployeeDescriptorDetails(EditCommand.EditEmployeeDescriptor descriptor) {","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"quelinxiao"},"content":"        descriptor.getTeam().ifPresent(team -\u003e sb.append(PREFIX_TEAM).append(team.teamName).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"quelinxiao"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.value).append(\" \"));","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"quelinxiao":6,"hjungwoo01":16,"-":46}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the middle index of the employee in the {@code model}\u0027s employee list.","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size() / 2);","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the last index of the employee in the {@code model}\u0027s employee list.","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"        return Index.fromOneBased(model.getFilteredEmployeeList().size());","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"hjungwoo01"},"content":"     * Returns the employee in the {@code model}\u0027s employee list at {@code index}.","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"hjungwoo01"},"content":"    public static Employee getEmployee(Model model, Index index) {","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"hjungwoo01"},"content":"        return model.getFilteredEmployeeList().get(index.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hjungwoo01":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalEmployees.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"PyromancerBoom"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_AMY;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"PyromancerBoom"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_UID_BOB;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"hjungwoo01"},"content":"import seedu.address.model.employee.Employee;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"PyromancerBoom"},"content":" * A utility class containing a list of {@code Employee} objects to be used in","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"PyromancerBoom"},"content":" * tests.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"hjungwoo01"},"content":"public class TypicalEmployees {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee ALICE \u003d new EmployeeBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                        .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"quelinxiao"},"content":"                        .withPhone(\"94351253\").withTeam(\"A\").withRole(\"Manager\")","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"hjungwoo01"},"content":"                        .withTags(\"friends\").withUid(\"1000\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee BENSON \u003d new EmployeeBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                        .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                        .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"quelinxiao"},"content":"                        .withTeam(\"B\").withRole(\"Engineer\")","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"hjungwoo01"},"content":"                        .withTags(\"owesMoney\", \"friends\").withUid(\"1001\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee CARL \u003d new EmployeeBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"PyromancerBoom"},"content":"                        .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withTeam(\"C\").withRole(\"IT\")","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"hjungwoo01"},"content":"                        .withUid(\"1002\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee DANIEL \u003d new EmployeeBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"1\").withRole(\"CEO\").withUid(\"1003\").withTags(\"friends\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee ELLE \u003d new EmployeeBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"2\").withRole(\"Cleaner\").withUid(\"1004\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee FIONA \u003d new EmployeeBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"3\").withRole(\"Cook\").withUid(\"1005\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee GEORGE \u003d new EmployeeBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"4\").withRole(\"Planner\").withUid(\"1006\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee HOON \u003d new EmployeeBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"A\").withRole(\"Creator\").withUid(\"1007\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee IDA \u003d new EmployeeBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"hjungwoo01"},"content":"                        .withTeam(\"A\").withRole(\"Developer\").withUid(\"1008\").build();","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"hjungwoo01"},"content":"    // Manually added - Employee\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee AMY \u003d new EmployeeBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"PyromancerBoom"},"content":"                        .withTeam(\"A\").withRole(\"Manager\").withTags(VALID_TAG_FRIEND).withUid(VALID_UID_AMY).build();","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"hjungwoo01"},"content":"    public static final Employee BOB \u003d new EmployeeBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"quelinxiao"},"content":"                        .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"quelinxiao"},"content":"                        .withTeam(\"B\").withRole(\"Engineer\").withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"PyromancerBoom"},"content":"                        .withUid(VALID_UID_BOB)","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"PyromancerBoom"},"content":"    private TypicalEmployees() {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"PyromancerBoom"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an {@code AddressBook} with all the typical employees.","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"hjungwoo01"},"content":"        for (Employee employee : getTypicalEmployees()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"hjungwoo01"},"content":"            ab.addEmployee(employee);","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":87,"author":{"gitId":"hjungwoo01"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"hjungwoo01"},"content":"     * Returns an {@code AddressBook} with all the typical employees.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"hjungwoo01"},"content":"     * @return AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"hjungwoo01"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"hjungwoo01"},"content":"    public static List\u003cEmployee\u003e getTypicalEmployees() {","lastModifiedDate":"2024-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"PyromancerBoom":9,"quelinxiao":11,"hjungwoo01":31,"-":43}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"hjungwoo01"},"content":"    public static final Index INDEX_FIRST_EMPLOYEE \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"hjungwoo01"},"content":"    public static final Index INDEX_SECOND_EMPLOYEE \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"hjungwoo01"},"content":"    public static final Index INDEX_THIRD_EMPLOYEE \u003d Index.fromOneBased(3);","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"hjungwoo01":3,"-":9}}]
