[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T12-2/tp/actions)","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"# *LookMeUp*","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"### Having TOO MANY contacts to keep track of?","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"\u003e e.g. friends from different parts of your school life?","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"\u003e e.g. friends from different committees and interest groups?","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"### Fret not,","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"this is **a project aimed to *streamline* YOUR campus life**.\u003cbr\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"## Why would LookMeUp be useful?","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"As an address book for students living on NUS campus to manage contacts, LookMeUp is designed to enable TAGGING!","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"* **Tagging** allows you to add **multiple tags** to each contact, to keep track of the different groups they belong to.","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"* You may **filter** your contacts via the **tags**,","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"so you can *easily find* the contacts you need from a particular group","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"(e.g. when broadcasting announcements, scheduling meetings etc.)","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"### How is LookMeUp created?","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"* LookMeUp is **written in OOP fashion** - meaning, it is **easy to maintain AND _extend NEW features_!**.","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"* Our documentation would be uploaded soon, do keep an eye out for it!","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"### Acknowledgements","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"It  is a **part of the se-education.org** initiative. If you would like to contribute code to similar projects,","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"smolegz":1,"lynnetteeee":25,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"lynnetteeee"},"content":"run {","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"lynnetteeee"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lynnetteeee":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"We are a group of Computer Science students undertaking CS2103T.","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"LookMeUp is an address book application that allows students to seamlessly save contacts of their peers in school. The team hopes that","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"this product will serve student better convenience in connecting with their friends!","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"For more enquiries, you can reach us at the email:","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"1. Koo Zhuo Hui `e0959005@u.nus.edu`","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"2. Kervyn Tan `e0941855@u.nus.edu`","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"3. Lynnette Ong Xin Hui `e0968030@u.nus.edu`","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"4. Aiden Lee Yuan Ting `aidenlyt@u.nus.edu`","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"5. Chen Runjia `runjia@u.nus.edu`","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"## Project Team","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"### Zhuo Hui Koo (Ivan)","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"\u003cimg src\u003d\"images/smolegz.png\" width\u003d\"200px\" style\u003d\"border-radius:5%\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"[[Github](http://github.com/smolegz)]","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"Y2 CS student. My hobby is to drink w/ my besties; I am always the “take care of other ppl” 😊","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"* Role: Team Lead","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"* Responsibilities: Testing","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"### Kervyn Tan","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"\u003cimg src\u003d\"images/kervyntan.png\" width\u003d\"200px\" height\u003d\"240px\" style\u003d\"border-radius:5%\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"[[Github](http://github.com/kervyntan)]","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"Y2, CS Major.","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"Love cycling on the weekends and playing LoL when I have time (basically never)","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"* Role: Developer","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"* Responsibilities: Integration","lastModifiedDate":"2024-03-07"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"### Lynnette Ong","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"\u003cimg src\u003d\"images/lynnetteeee.png\" width\u003d\"200px\" style\u003d\"border-radius:5%\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"[[Github](http://github.com/lynnetteeee)]","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"Y2, CS, I love to travel (esp cold weather) and play squash!","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"I think coding without a deadline is \u003e\u003e\u003e\u003e\u003e\u003e\u003e\u003e ! Lowkey therapeutic... but once theres deadline... \u003e.\u003c","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"### Aiden Lee","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"\u003cimg src\u003d\"images/aidenlyt.png\" width\u003d\"200px\" height\u003d\"240px\" style\u003d\"border-radius:5%\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"[[Github](http://github.com/aidenlyt)]","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"Year 2 CS student. I eat ice cream with chopsticks.","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"* Responsibilities: Scheduling \u0026 Tracking","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"### RunJia Chen","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"\u003cimg src\u003d\"images/runjiachen.png\" width\u003d\"200px\" height\u003d\"240px\" style\u003d\"border-radius:5%\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"[[Github](http://github.com/RunjiaChen)]","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"Y1 CS, like to watch Marvel shows like Loki, What if","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"smolegz":42,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"lynnetteeee"},"content":"### Safe-Removal feature","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"lynnetteeee"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"lynnetteeee"},"content":"The feature to remove contacts from the address book is facilitated by `RemoveCommand` and `RemoveConfirmation`.","lastModifiedDate":"2024-03-29"},{"lineNumber":263,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"lynnetteeee"},"content":"The safe-removal mechanism consists of several components:","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"lynnetteeee"},"content":"1. `RemoveCommand`: The main command class that performs the preparation of removal in 2 main parts: shortlisting the ","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"lynnetteeee"},"content":"target person to be removed by matching contact name, and seeking confirmation of the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":267,"author":{"gitId":"lynnetteeee"},"content":"2. `RemoveCommandParser`: A class that parses the user input to determine the target person to be removed. The class","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"lynnetteeee"},"content":"   parses the `Predicate` input when users key in `remove NAME`, to aid in the shortlisting process. The class also parses","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"lynnetteeee"},"content":"   the `Index` input when users key in `remove INDEX`, to proceed with the confirmation process of the actual contact to","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"lynnetteeee"},"content":"   be removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"lynnetteeee"},"content":"3. `RemoveConfirmation`, `RemoveSuccess` and `RemoveAbortion`: Classes that prompt the user to confirm the removal of","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"lynnetteeee"},"content":"   the target person, performing the actual deletion of the contact (or abortion of process), then providing feedback on","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"lynnetteeee"},"content":"   the success or failure of the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"lynnetteeee"},"content":"Our implementation follows Liskov\u0027s Substitution Principle closely. `RemoveConfirmation` was designed to be an abstract","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"lynnetteeee"},"content":"class to allow for extension of the 2 confirmation methods via the `RemoveSuccess` and `RemoveAbortion` classes. This","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"lynnetteeee"},"content":"decision makes it easier to group similar methods and messages together for better code extendability and","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"lynnetteeee"},"content":"maintainability when it comes to enhancing the confirmation process.","lastModifiedDate":"2024-03-29"},{"lineNumber":279,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":280,"author":{"gitId":"lynnetteeee"},"content":"Given below is an example usage scenario and how the safe-removal mechanism behaves at each step.","lastModifiedDate":"2024-03-29"},{"lineNumber":281,"author":{"gitId":"lynnetteeee"},"content":"\u003e Assuming existing contacts in the address book (shown in a simplified list for ease of understanding):","lastModifiedDate":"2024-03-29"},{"lineNumber":282,"author":{"gitId":"lynnetteeee"},"content":"\u003e 1. Paul Walker","lastModifiedDate":"2024-03-29"},{"lineNumber":283,"author":{"gitId":"lynnetteeee"},"content":"\u003e 2. Alice Cooper","lastModifiedDate":"2024-03-29"},{"lineNumber":284,"author":{"gitId":"lynnetteeee"},"content":"\u003e 3. Dylan Walker","lastModifiedDate":"2024-03-29"},{"lineNumber":285,"author":{"gitId":"lynnetteeee"},"content":"\u003e 4. Paul Cooper","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"lynnetteeee"},"content":"* **Step 1**: The user executes `remove Paul` command. ","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"lynnetteeee"},"content":"    * The `remove` command calls `RemoveCommandParser#parseCommand()`, causing `RemoveCommand#execute()` to get called ","lastModifiedDate":"2024-03-29"},{"lineNumber":289,"author":{"gitId":"lynnetteeee"},"content":"  in response.","lastModifiedDate":"2024-03-29"},{"lineNumber":290,"author":{"gitId":"lynnetteeee"},"content":"    * `RemoveCommand` will shortlist the target person to be removed by matching the contact name with the input.","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"lynnetteeee"},"content":"        * The input will be parsed by `RemoveCommandParser` to obtain the intended `Predicate`, in this case, `Paul`.","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"lynnetteeee"},"content":"    \u003e Matching contacts:","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"lynnetteeee"},"content":"  \u003e 1. Paul Walker ","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"lynnetteeee"},"content":"  \u003e 2. Paul Cooper","lastModifiedDate":"2024-03-29"},{"lineNumber":295,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":296,"author":{"gitId":"lynnetteeee"},"content":"    * `RemoveCommand` will then prompt the user to key in the index of the contact to remove. e.g. `remove 1`","lastModifiedDate":"2024-03-29"},{"lineNumber":297,"author":{"gitId":"lynnetteeee"},"content":"  \u003e **_NOTE:_** This step can be foregone if the user is very sure of the INDEX of the contact to be removed from the ","lastModifiedDate":"2024-03-29"},{"lineNumber":298,"author":{"gitId":"lynnetteeee"},"content":"    \u003e original list in the address book. The user can key in `remove INDEX` and proceed with Step 2 directly. ","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"lynnetteeee"},"content":"* **Step 2**: The user executes `remove 1` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"lynnetteeee"},"content":"    * The `remove` command calls `RemoveCommandParser#parseCommand()`, causing `RemoveCommand#execute()` to get called","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"lynnetteeee"},"content":"    * `RemoveCommand` will proceed with the confirmation process of the actual contact to be removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"lynnetteeee"},"content":"        * The input will be parsed by `RemoveCommandParser` to obtain the intended `Index` to be removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"lynnetteeee"},"content":"        * User will then be prompted to confirm the removal of the contact with \"yes\"/\"no\"","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"lynnetteeee"},"content":"        * The user will then key in `yes` or `no` to confirm or abort the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"lynnetteeee"},"content":"  \u003e Are you sure you want to remove the following contact? (yes/no):","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"lynnetteeee"},"content":"    \u003e 1. Paul Walker","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"lynnetteeee"},"content":"* **Step 3a**: The user confirms the removal of the contact by executing `yes` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"lynnetteeee"},"content":"    * The `yes` command calls `RemoveSuccess#execute()` to confirm the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"lynnetteeee"},"content":"    * The confirmation process will be handled by `RemoveSuccess` and its parent class `RemoveConfirmation`.","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"lynnetteeee"},"content":"        * `RemoveSuccess#execute()` checks if the `yes` input is valid, calling `RemoveConfirmation#isValidInput()`","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"lynnetteeee"},"content":"        * `RemoveConfirmation#isValidInput()` will return `true` if the input is valid, and `false` otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"lynnetteeee"},"content":"            * Validity of input is determined by the previous command executed by the user - a valid `remove INDEX` ","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"lynnetteeee"},"content":"          command, that serves as a precursor to the removal  confirmation process.","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"lynnetteeee"},"content":"    * If the user confirms the removal with `yes`, `RemoveSuccess` will proceed with the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"lynnetteeee"},"content":"        * The contact will be removed from the address book and `RemoveSuccess` will provide feedback on the success of ","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"lynnetteeee"},"content":"      the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"lynnetteeee"},"content":"* **Step 3b**: The user aborts the removal of the contact by executing `no` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"lynnetteeee"},"content":"    * The `no` command calls `RemoveAbortion#execute()` to abort the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":326,"author":{"gitId":"lynnetteeee"},"content":"    * The abortion process will be handled by `RemoveAbortion` and its parent class `RemoveConfirmation`.","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"lynnetteeee"},"content":"        * `RemoveAbortion#execute()` checks if the `no` input is valid, calling `RemoveConfirmation#isValidInput()`","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"lynnetteeee"},"content":"        * `RemoveConfirmation#isValidInput()` will return `true` if the input is valid, and `false` otherwise.","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"lynnetteeee"},"content":"            * Validity of input is determined by the previous command executed by the user - a valid `remove INDEX` ","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"lynnetteeee"},"content":"          command, that serves as a precursor to the removal abortion process.","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"lynnetteeee"},"content":"  * If the user aborts the removal with `no`, `RemoveCommand` will abort the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"lynnetteeee"},"content":"      * The default list of contacts will be shown with the text input of the `CommandBox` cleared, and `RemoveAbortion` ","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"lynnetteeee"},"content":"    will provide feedback on the abortion of the removal process.","lastModifiedDate":"2024-03-29"},{"lineNumber":334,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":335,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"lynnetteeee"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"lynnetteeee"},"content":"Several design considerations were taken into account when implementing the safe-removal feature.","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"lynnetteeee"},"content":"_**FIRST CATEGORY**: For shortlisting the contact to be removed and seeking confirmation of the contact to be removed:_ ","lastModifiedDate":"2024-03-29"},{"lineNumber":341,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":342,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"lynnetteeee"},"content":"* **Alternative 1 (current choice)**: To use the same command word (i.e. `remove` - `remove NAME` and `remove INDEX`)","lastModifiedDate":"2024-03-29"},{"lineNumber":344,"author":{"gitId":"lynnetteeee"},"content":"to perform the shortlisting of contacts with matching names, as well as the confirmation of the contact to be removed.","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"lynnetteeee"},"content":"  * Pros: Simplifies the command structure, more intuitive for users to approach removal process","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"lynnetteeee"},"content":"    * Using the same command word `remove` for both shortlisting and confirmation processes reduces the cognitive load,","lastModifiedDate":"2024-03-29"},{"lineNumber":347,"author":{"gitId":"lynnetteeee"},"content":"    allowing the process to be more user-friendly","lastModifiedDate":"2024-03-29"},{"lineNumber":348,"author":{"gitId":"lynnetteeee"},"content":"  * Cons: May lead to ambiguity in the command execution process to new developers who are used to the conventions set","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"lynnetteeee"},"content":"  by other commands, as this command structure makes use of an overloaded `RemoveCommand` constructor","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":351,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":352,"author":{"gitId":"lynnetteeee"},"content":"* **Alternative 2**: To use the existing `find` command to shortlist the contact to be removed, then use the `delete`","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"lynnetteeee"},"content":"command to perform the deletion","lastModifiedDate":"2024-03-29"},{"lineNumber":354,"author":{"gitId":"lynnetteeee"},"content":"* Pros: Separates the shortlisting and confirmation processes","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"lynnetteeee"},"content":"  * This reduces ambiguity in the command execution process for future developers","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"lynnetteeee"},"content":"* Cons: Require 2 different commands for deletion ","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"lynnetteeee"},"content":"  * Increasing the number of commands required to perform the removal process, makes it less intuitive for users to","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"lynnetteeee"},"content":"      approach the removal process. Furthermore, when it comes to **removing contacts**, users might find it a lot more ","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"lynnetteeee"},"content":"        intuitive (as it is self-explanatory) to use a`delete`/`remove` command instead of having to use `find` first, ","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"lynnetteeee"},"content":"        where in a natural logical context, most users would only use `find` if they are simply looking for a contact.","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"lynnetteeee"},"content":"**Decision**: ","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"lynnetteeee"},"content":"Weighing the pros and cons of Alternatives 1 and 2, we have decided to go with **Alternative 1** due to the enhanced ","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"lynnetteeee"},"content":"user experience it provides, making the removal process more intuitive and user-friendly. ","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"lynnetteeee"},"content":"**Other considerations**:","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"lynnetteeee"},"content":"1. **Single Responsibility Principle**: The `RemoveCommand` class is designed to handle both the shortlisting and ","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"lynnetteeee"},"content":"confirmation processes. It is natural for concerns to arise regarding adhering to the Single Responsibility Principle. ","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"lynnetteeee"},"content":"However, this class is focused on the single task of preparation for deletion, without handling the actual deletion.","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"lynnetteeee"},"content":"There is still a clear separation of concerns, with `RemoveCommand` class handling the preparation (shortlisting and ","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"lynnetteeee"},"content":"prompting of confirmation), and `RemoveConfirmation`, `RemoveSuccess`, `RemoveAbortion` classes handling the actual","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"lynnetteeee"},"content":"deletion. Thus, the Single Responsibility Principle is still adhered to.","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"lynnetteeee"},"content":"2. **Re-branding of `delete` to `remove`**: Given most people will use the original `delete` directly in `delete INDEX`, ","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"lynnetteeee"},"content":"we have decided to re-brand the double-purpose command as `remove` to avoid confusion. Using a replacement word that ","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"lynnetteeee"},"content":"is explanatory and intuitive in the context of the contact deletion process, while subtle, adds to the overall user ","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"lynnetteeee"},"content":"experience.","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"lynnetteeee"},"content":"_**SECOND CATEGORY**: Mechanism to perform the actual deletion upon confirmation_","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"lynnetteeee"},"content":"Given the key purpose of this feature is for **SAFE** deletion, this step is crucial to ensure that there is a safety","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"lynnetteeee"},"content":"net for users before the actual removal of the contact.","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"lynnetteeee"},"content":"* **Alternative 1 (current choice)**: To prompt the users for confirmation via a `yes`/`no`, then proceed with ","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"lynnetteeee"},"content":"parsing the `yes`/`no` user input as independent commands in `AddressBookParser`","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"lynnetteeee"},"content":"  * Pros: Maintains a similar command structure/workflow as all other commands (to go through `AddressBookParser`)","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"lynnetteeee"},"content":"  * Cons: Requires backward reference of previous command to check if the input was a valid `remove INDEX` input, ","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"lynnetteeee"},"content":"  currently implemented in `RemoveConfirmation#isValidInput()`","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"lynnetteeee"},"content":"    * This leads to a more complex implementation, as details of the previous command might be accidentally exposed if ","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"lynnetteeee"},"content":"    not implemented carefully.","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"lynnetteeee"},"content":"* **Alternative 2**: To create functions that directly handle the confirmation process within `RemoveCommand`","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"lynnetteeee"},"content":"  * Pros: Removes the need to access the previous command and assess its validity ","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"lynnetteeee"},"content":"  * Cons: Changes the command structure/workflow, making it less intuitive for users to approach the removal process","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"lynnetteeee"},"content":"    * This alternative would require a more complex implementation, as the confirmation process would be directly ","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"lynnetteeee"},"content":"    handled within `RemoveCommand`, leading to a more monolithic class structure. This would make it harder to ","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"lynnetteeee"},"content":"    maintain and extend the code in the future, as the class would be responsible for the preparation (shortlisting and ","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"lynnetteeee"},"content":"    confirmation) processes **AND** the actual process of deleting the contact, violating the Single Responsibility ","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"lynnetteeee"},"content":"    Principle.","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"lynnetteeee"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"lynnetteeee"},"content":"**Decision**: ","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"lynnetteeee"},"content":"Weighing the pros and cons of Alternatives 1 and 2, we have decided to go with **Alternative 1**","lastModifiedDate":"2024-03-29"},{"lineNumber":407,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"lynnetteeee"},"content":"Addressing the cons of Alternative 1, our current implementation is such that details of previous command are retrieved ","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"lynnetteeee"},"content":"from `RemoveCommandParser` within the `RemoveConfirmation#isValidInput()` method. This avoids exposure of the ","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"lynnetteeee"},"content":"`remove INDEX` command details, ensuring Separation of Concerns and adhering to the Single Responsibility Principle as ","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"lynnetteeee"},"content":"the `RemoveConfirmation` class solely handles the confirmation process itself and checks directly related to it.","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"AidenLYT"},"content":"### Fuzzy Input","lastModifiedDate":"2024-03-26"},{"lineNumber":415,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":416,"author":{"gitId":"AidenLYT"},"content":"#### Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":417,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":418,"author":{"gitId":"AidenLYT"},"content":"The BK-Tree data structure was employed by the implementation of the fuzzy input to effectively find words that are","lastModifiedDate":"2024-03-26"},{"lineNumber":419,"author":{"gitId":"AidenLYT"},"content":"close to the target word in terms of their Levenshtein distance. Each node in the tree-like data structure represents a","lastModifiedDate":"2024-03-26"},{"lineNumber":420,"author":{"gitId":"AidenLYT"},"content":"word and its children represent words that are one edit distance away. ","lastModifiedDate":"2024-03-26"},{"lineNumber":421,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":422,"author":{"gitId":"AidenLYT"},"content":"The fuzzy input implementation consists of several components:","lastModifiedDate":"2024-03-26"},{"lineNumber":423,"author":{"gitId":"AidenLYT"},"content":"1. `BkTreeCommandMatcher`: The main BK-Tree data structure for sorting and efficiently search for similar elements","lastModifiedDate":"2024-03-26"},{"lineNumber":424,"author":{"gitId":"AidenLYT"},"content":"2. `BkTreeNode`: Internal node structure used by the Bk-Tree","lastModifiedDate":"2024-03-26"},{"lineNumber":425,"author":{"gitId":"AidenLYT"},"content":"3. `FuzzyCommandParser`: A class demonstrating the usage of BK-tree for command parsing","lastModifiedDate":"2024-03-26"},{"lineNumber":426,"author":{"gitId":"AidenLYT"},"content":"4. `LevenshteinDistance`: An implementation of the DistanceFunction interface using the Levenshtein distance algorithm","lastModifiedDate":"2024-03-26"},{"lineNumber":427,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":428,"author":{"gitId":"AidenLYT"},"content":"Our implementation follows the SOLID principle closely. We have designed interfaces to promote flexibility, especially","lastModifiedDate":"2024-03-26"},{"lineNumber":429,"author":{"gitId":"AidenLYT"},"content":"complying with the Open-Close Principle. This design decision makes it easy to extend various `CommandMatchers` or","lastModifiedDate":"2024-03-26"},{"lineNumber":430,"author":{"gitId":"AidenLYT"},"content":"`DistanceFunctions` in the future, making it easier to incorporate alternative algorithms if need be.","lastModifiedDate":"2024-03-26"},{"lineNumber":431,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":432,"author":{"gitId":"AidenLYT"},"content":"Given below is an example usage scenario and how the fuzzy input mechanism behaves:","lastModifiedDate":"2024-03-26"},{"lineNumber":433,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":434,"author":{"gitId":"AidenLYT"},"content":"* Step 1 : User misspelled listing command `lust` instead of `list`. ","lastModifiedDate":"2024-03-26"},{"lineNumber":435,"author":{"gitId":"AidenLYT"},"content":"  * The `lust` command calls `FuzzyCommandParser#parseCommand())`, causing `BkTreeCommandMatcher#findClosestMatch()` to","lastModifiedDate":"2024-03-26"},{"lineNumber":436,"author":{"gitId":"AidenLYT"},"content":"  get called in response.","lastModifiedDate":"2024-03-26"},{"lineNumber":437,"author":{"gitId":"AidenLYT"},"content":"  * The `BkTree` would be already initialised with the list of commands before the call.","lastModifiedDate":"2024-03-26"},{"lineNumber":438,"author":{"gitId":"AidenLYT"},"content":"    * During the initialisation, `BkTree` calculates the distances between items and constructs the tree accordingly.","lastModifiedDate":"2024-03-26"},{"lineNumber":439,"author":{"gitId":"AidenLYT"},"content":"  * When `findCLosestMatch()` is called, it initiates a search within the `BkTree` constructed.","lastModifiedDate":"2024-03-26"},{"lineNumber":440,"author":{"gitId":"AidenLYT"},"content":"    * Starting from root node, Bk-Tree traverses through nodes based on the distance between the target item `lust` ","lastModifiedDate":"2024-03-26"},{"lineNumber":441,"author":{"gitId":"AidenLYT"},"content":"    and items stored in each `BkTreeNode`.","lastModifiedDate":"2024-03-26"},{"lineNumber":442,"author":{"gitId":"AidenLYT"},"content":"    * The closest match found based on the specified distance metric (1 misspell) will be returned, in this case `list`","lastModifiedDate":"2024-03-26"},{"lineNumber":443,"author":{"gitId":"AidenLYT"},"content":"    and `AddressBookParser#parseCommand()` will proceed on to the `list command`.","lastModifiedDate":"2024-03-26"},{"lineNumber":444,"author":{"gitId":"AidenLYT"},"content":"  * When calculating the distance between 2 items, `BkTree` calls `DistanceFunction#calculateDistance()` method.","lastModifiedDate":"2024-03-26"},{"lineNumber":445,"author":{"gitId":"AidenLYT"},"content":"    * In this case, LevenshteinDistance class will calculate the distance.","lastModifiedDate":"2024-03-26"},{"lineNumber":446,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":447,"author":{"gitId":"AidenLYT"},"content":"\u003cpuml src\u003d\"diagrams/FuzzyInputClassDiagram.puml\" alt\u003d\"FuzzyInputClassDiagram\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":448,"author":{"gitId":"AidenLYT"},"content":"\u003cpuml src\u003d\"diagrams/FuzzyInputObjectDiagram.puml\" alt\u003d\"FuzzyInputObjectDiagram\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":449,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":450,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":451,"author":{"gitId":"AidenLYT"},"content":"* Step 2 : User entered unsupported command `peek`","lastModifiedDate":"2024-03-26"},{"lineNumber":452,"author":{"gitId":"AidenLYT"},"content":"    * The `peek` command calls `FuzzyCommandParser#parseCommand())`, causing `BkTreeCommandMatcher#findClosestMatch()` to","lastModifiedDate":"2024-03-26"},{"lineNumber":453,"author":{"gitId":"AidenLYT"},"content":"      get called in response.","lastModifiedDate":"2024-03-26"},{"lineNumber":454,"author":{"gitId":"AidenLYT"},"content":"    * Initialisation works the same as Step 1","lastModifiedDate":"2024-03-26"},{"lineNumber":455,"author":{"gitId":"AidenLYT"},"content":"    * `findClosestMatch()` does the same operation as Step 1","lastModifiedDate":"2024-03-26"},{"lineNumber":456,"author":{"gitId":"AidenLYT"},"content":"      * However, based on the LevenshteinDistance algorithm, the distance between `peek` and any items stored in","lastModifiedDate":"2024-03-26"},{"lineNumber":457,"author":{"gitId":"AidenLYT"},"content":"      `BkTreeNode` will be greater than 1 which is greater than the specified distance metric","lastModifiedDate":"2024-03-26"},{"lineNumber":458,"author":{"gitId":"AidenLYT"},"content":"      * `FuzzyCommandParser#parseCommand())` will return `null` string to `AddressBookParser#parseCommand()`","lastModifiedDate":"2024-03-26"},{"lineNumber":459,"author":{"gitId":"AidenLYT"},"content":"      * Since `null` is not a recognised command, `ParseException` will be thrown.","lastModifiedDate":"2024-03-26"},{"lineNumber":460,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":461,"author":{"gitId":"AidenLYT"},"content":"* \u003cinsert UML diagrams\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":462,"author":{"gitId":"AidenLYT"},"content":"    ","lastModifiedDate":"2024-03-26"},{"lineNumber":463,"author":{"gitId":"AidenLYT"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-26"},{"lineNumber":464,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":465,"author":{"gitId":"AidenLYT"},"content":"[Common fuzzy search algorithm for approximate string matching](https://www.baeldung.com/cs/fuzzy-search-algorithm) ","lastModifiedDate":"2024-03-26"},{"lineNumber":466,"author":{"gitId":"AidenLYT"},"content":"were compared to determine the optimal algorithm for our AddressBook. ","lastModifiedDate":"2024-03-26"},{"lineNumber":467,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":468,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 1 (current choice)** Bk-Tree with Levenshtein Distance Algorithm ","lastModifiedDate":"2024-03-26"},{"lineNumber":469,"author":{"gitId":"AidenLYT"},"content":"* Pros: Tree-like data structure","lastModifiedDate":"2024-03-26"},{"lineNumber":470,"author":{"gitId":"AidenLYT"},"content":"  * The hierarchical structure of BK-Tree allows search operations to run in logarithmic time,","lastModifiedDate":"2024-03-26"},{"lineNumber":471,"author":{"gitId":"AidenLYT"},"content":"  making them scalable for large datasets","lastModifiedDate":"2024-03-26"},{"lineNumber":472,"author":{"gitId":"AidenLYT"},"content":"  * BK-Tree can work with different types of data, not limited to strings","lastModifiedDate":"2024-03-26"},{"lineNumber":473,"author":{"gitId":"AidenLYT"},"content":"* Cons: Require more memory, a concern for memory-constrained environment","lastModifiedDate":"2024-03-26"},{"lineNumber":474,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":475,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 2** Hamming Distance","lastModifiedDate":"2024-03-26"},{"lineNumber":476,"author":{"gitId":"AidenLYT"},"content":"  * Pros: Straightforward to calculate and understand","lastModifiedDate":"2024-03-26"},{"lineNumber":477,"author":{"gitId":"AidenLYT"},"content":"  * Cons: Only designed for comparing strings of equal length","lastModifiedDate":"2024-03-26"},{"lineNumber":478,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":479,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 3** Bitap Algorithm","lastModifiedDate":"2024-03-26"},{"lineNumber":480,"author":{"gitId":"AidenLYT"},"content":"  * Pros: Efficient for finding approximate matches of given pattern within a text","lastModifiedDate":"2024-03-26"},{"lineNumber":481,"author":{"gitId":"AidenLYT"},"content":"  * Cons: Primarily designed for substring matching within texts","lastModifiedDate":"2024-03-26"},{"lineNumber":482,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":483,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 4** Brute Force Method","lastModifiedDate":"2024-03-26"},{"lineNumber":484,"author":{"gitId":"AidenLYT"},"content":"  * Pros: Easily to implement, no pre-processing required, takes no extra space","lastModifiedDate":"2024-03-26"},{"lineNumber":485,"author":{"gitId":"AidenLYT"},"content":"  * Cons: Horrible run-time","lastModifiedDate":"2024-03-26"},{"lineNumber":486,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":487,"author":{"gitId":"AidenLYT"},"content":"For our AddressBook implementation, the `BK-Tree with Levenshtein Distance Algorithm` proved to be the optimal choice.","lastModifiedDate":"2024-03-26"},{"lineNumber":488,"author":{"gitId":"AidenLYT"},"content":"Its memory usage and complexity of implementation outweighs its potential to extend code and efficiently handle","lastModifiedDate":"2024-03-26"},{"lineNumber":489,"author":{"gitId":"AidenLYT"},"content":"misspelled or similar commands. This algorithm guarantees fast runtime performance and robustness in command parsing.","lastModifiedDate":"2024-03-26"},{"lineNumber":490,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":491,"author":{"gitId":"AidenLYT"},"content":"### \\[Future Development\\] Fuzzy Input with varying distance metric","lastModifiedDate":"2024-03-26"},{"lineNumber":492,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":493,"author":{"gitId":"AidenLYT"},"content":"Currently, the MAX_DISTANCE for the distance metric is set to 1. To enhance user-experience and accommodate longer","lastModifiedDate":"2024-03-26"},{"lineNumber":494,"author":{"gitId":"AidenLYT"},"content":"commands with potentially more misspellings, it would be advantageous to dynamically adjust the MAX_DISTANCE according","lastModifiedDate":"2024-03-26"},{"lineNumber":495,"author":{"gitId":"AidenLYT"},"content":"to the length of the correct command string. This approach allows a more flexible and adaptable matching process,","lastModifiedDate":"2024-03-26"},{"lineNumber":496,"author":{"gitId":"AidenLYT"},"content":"guaranteeing that the misspelling tolerance varies proportionately with command length. By dynamically adjusting the","lastModifiedDate":"2024-03-26"},{"lineNumber":497,"author":{"gitId":"AidenLYT"},"content":"MAX_DISTANCE, longer and more complex input command like `addbystep` can be accurately identified. ","lastModifiedDate":"2024-03-26"},{"lineNumber":498,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"AidenLYT"},"content":"### Sort feature","lastModifiedDate":"2024-03-26"},{"lineNumber":500,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":501,"author":{"gitId":"AidenLYT"},"content":"#### Implementation","lastModifiedDate":"2024-03-26"},{"lineNumber":502,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":503,"author":{"gitId":"AidenLYT"},"content":"The sorting mechanism is facilitated by `SortCommand`. It implements the following operations:","lastModifiedDate":"2024-03-26"},{"lineNumber":504,"author":{"gitId":"AidenLYT"},"content":"* `SortCommand#`: Constructor class which is instantiated and stores the necessary `SortStrategy` based on user input.","lastModifiedDate":"2024-03-26"},{"lineNumber":505,"author":{"gitId":"AidenLYT"},"content":"* `SortCommand#Executes`: Executes the necessary `SortStrategy` and update the model. ","lastModifiedDate":"2024-03-26"},{"lineNumber":506,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":507,"author":{"gitId":"AidenLYT"},"content":"The sorting mechanism consists of several components:","lastModifiedDate":"2024-03-26"},{"lineNumber":508,"author":{"gitId":"AidenLYT"},"content":"1. `SortStrategy`: An interface that requires implementations to define methods for sorting the address book and getting","lastModifiedDate":"2024-03-26"},{"lineNumber":509,"author":{"gitId":"AidenLYT"},"content":"the category associated with the sorting strategy.","lastModifiedDate":"2024-03-26"},{"lineNumber":510,"author":{"gitId":"AidenLYT"},"content":"2. `SortByTag` and `SortByName`: These classes implement `SortStrategy` interface to provide the specific strategies","lastModifiedDate":"2024-03-26"},{"lineNumber":511,"author":{"gitId":"AidenLYT"},"content":"of the AddressBook based on tags and names respectively. ","lastModifiedDate":"2024-03-26"},{"lineNumber":512,"author":{"gitId":"AidenLYT"},"content":"3. `SortCommand`: Initiates the sorting by parsing user input to determine the sorting criteria and calls the appropriate","lastModifiedDate":"2024-03-26"},{"lineNumber":513,"author":{"gitId":"AidenLYT"},"content":"sorting class based on the input. After sorting, it then updates the list of persons in the model. ","lastModifiedDate":"2024-03-26"},{"lineNumber":514,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":515,"author":{"gitId":"AidenLYT"},"content":"Given below is an example usage scenario and how the sorting mechanism behaves at each step.","lastModifiedDate":"2024-03-26"},{"lineNumber":516,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":517,"author":{"gitId":"AidenLYT"},"content":"* Step 1: The user launches the application for the first time, no contacts will be present in the `AddressBook`.","lastModifiedDate":"2024-03-26"},{"lineNumber":518,"author":{"gitId":"AidenLYT"},"content":"When user `add` contacts in the `AddressBook`, contacts will be sorted based on their timestamp.","lastModifiedDate":"2024-03-26"},{"lineNumber":519,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":520,"author":{"gitId":"AidenLYT"},"content":"* Step 2: The user executes `sort name` command.","lastModifiedDate":"2024-03-26"},{"lineNumber":521,"author":{"gitId":"AidenLYT"},"content":"  * The `sortCommand#` constructor will initialise with the `sortByName` strategy stored as `SortStrategy`.","lastModifiedDate":"2024-03-26"},{"lineNumber":522,"author":{"gitId":"AidenLYT"},"content":"  * `sortCommand#execute` will pass the current model\u0027s `AddressBook` to `sortStrategy#sort`, where `UniquePersonsList` ","lastModifiedDate":"2024-03-26"},{"lineNumber":523,"author":{"gitId":"AidenLYT"},"content":"  will be obtained and sorted lexicographically by name ","lastModifiedDate":"2024-03-26"},{"lineNumber":524,"author":{"gitId":"AidenLYT"},"content":"  * After sorting, the model will be updated to reflect the newly sorted contacts list, alongside a return statement","lastModifiedDate":"2024-03-26"},{"lineNumber":525,"author":{"gitId":"AidenLYT"},"content":"  to provide confirmation to the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":526,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":527,"author":{"gitId":"AidenLYT"},"content":"    \u003cpuml src\u003d\"diagrams/SortCommandSequenceDiagram.puml\" alt\u003d\"SortCommandSequenceDiagram\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":528,"author":{"gitId":"AidenLYT"},"content":"    ","lastModifiedDate":"2024-03-27"},{"lineNumber":529,"author":{"gitId":"AidenLYT"},"content":"* Step 3: The user executes `sort tag` command.","lastModifiedDate":"2024-03-26"},{"lineNumber":530,"author":{"gitId":"AidenLYT"},"content":"    * The `sortCommand#` constructor will initialise with the `sortByTag` strategy stored as `SortStrategy`.","lastModifiedDate":"2024-03-26"},{"lineNumber":531,"author":{"gitId":"AidenLYT"},"content":"    * `sortCommand#execute` will pass the current model\u0027s `AddressBook` to `sortStrategy#sort`, where `UniquePersonsList`","lastModifiedDate":"2024-03-26"},{"lineNumber":532,"author":{"gitId":"AidenLYT"},"content":"      will be obtained and sorted lexicographically by tags","lastModifiedDate":"2024-03-26"},{"lineNumber":533,"author":{"gitId":"AidenLYT"},"content":"    * After sorting, the model will be updated to reflect the newly sorted contacts list, alongside a return statement","lastModifiedDate":"2024-03-26"},{"lineNumber":534,"author":{"gitId":"AidenLYT"},"content":"      to provide confirmation to the user.","lastModifiedDate":"2024-03-26"},{"lineNumber":535,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":536,"author":{"gitId":"AidenLYT"},"content":"* Step 4: The user executes `sort` command.","lastModifiedDate":"2024-03-26"},{"lineNumber":537,"author":{"gitId":"AidenLYT"},"content":"  * The `sortCommand#` constructor will first verify the presence of `condition input` before proceeding with ","lastModifiedDate":"2024-03-26"},{"lineNumber":538,"author":{"gitId":"AidenLYT"},"content":"  initialisation.","lastModifiedDate":"2024-03-26"},{"lineNumber":539,"author":{"gitId":"AidenLYT"},"content":"  * Since there is no condition stated, a `ParseException` will be thrown and a statement will be displayed to provide ","lastModifiedDate":"2024-03-26"},{"lineNumber":540,"author":{"gitId":"AidenLYT"},"content":"  the correct input and conditions to be stated.","lastModifiedDate":"2024-03-26"},{"lineNumber":541,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":542,"author":{"gitId":"AidenLYT"},"content":"    \u003cpuml src\u003d\"diagrams/SortCommandActivityDiagram.puml\" alt\u003d\"SortCommandActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":543,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":544,"author":{"gitId":"AidenLYT"},"content":"### Design consideration:","lastModifiedDate":"2024-03-26"},{"lineNumber":545,"author":{"gitId":"AidenLYT"},"content":"`SolidStrategy` interface was implemented for sorting functionality to adhere to SOLID principles, particularly the","lastModifiedDate":"2024-03-26"},{"lineNumber":546,"author":{"gitId":"AidenLYT"},"content":"Single Responsibility Principle, Interface Segregation Principle and Open/Close Principle.","lastModifiedDate":"2024-03-26"},{"lineNumber":547,"author":{"gitId":"AidenLYT"},"content":"* Single Responsibility Principle","lastModifiedDate":"2024-03-26"},{"lineNumber":548,"author":{"gitId":"AidenLYT"},"content":"  * The interface maintains single responsibility by defining methods for sorting strategies without burdening","lastModifiedDate":"2024-03-26"},{"lineNumber":549,"author":{"gitId":"AidenLYT"},"content":"  implementations with unrelated methods","lastModifiedDate":"2024-03-26"},{"lineNumber":550,"author":{"gitId":"AidenLYT"},"content":"* Open/Closed Principle","lastModifiedDate":"2024-03-26"},{"lineNumber":551,"author":{"gitId":"AidenLYT"},"content":"  * The interface provides an abstraction that allows for extension. New sorting strategies can be introduced by","lastModifiedDate":"2024-03-26"},{"lineNumber":552,"author":{"gitId":"AidenLYT"},"content":"  implementing `SortStrategy` interface without altering existing code.","lastModifiedDate":"2024-03-26"},{"lineNumber":553,"author":{"gitId":"AidenLYT"},"content":"* Interface Segregation Principle","lastModifiedDate":"2024-03-26"},{"lineNumber":554,"author":{"gitId":"AidenLYT"},"content":"  * Segregates behavior for sorting into distinct methods `sort` and `getCategory`, thus, allowing different sorting","lastModifiedDate":"2024-03-26"},{"lineNumber":555,"author":{"gitId":"AidenLYT"},"content":"  strategies to implement only the methods they need, rather than being forced to implement monolithic interface with","lastModifiedDate":"2024-03-26"},{"lineNumber":556,"author":{"gitId":"AidenLYT"},"content":"  unnecessary methods.","lastModifiedDate":"2024-03-26"},{"lineNumber":557,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":558,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 1 (current choice)** `sort` method of the `SortStrategy` to take in `AddressBook` as its parameter.","lastModifiedDate":"2024-03-26"},{"lineNumber":559,"author":{"gitId":"AidenLYT"},"content":"  * Pros: Straightforward design and easy to implement.","lastModifiedDate":"2024-03-26"},{"lineNumber":560,"author":{"gitId":"AidenLYT"},"content":"    * Sorting logic interacts directly with data structure being sorted.","lastModifiedDate":"2024-03-26"},{"lineNumber":561,"author":{"gitId":"AidenLYT"},"content":"  * Cons: May be challenging to apply sorting strategies to different data structures without modification.","lastModifiedDate":"2024-03-26"},{"lineNumber":562,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":563,"author":{"gitId":"AidenLYT"},"content":"* **Alternative 2** `sort` method of the `SortStrategy` to take in `model` as its parameter.","lastModifiedDate":"2024-03-26"},{"lineNumber":564,"author":{"gitId":"AidenLYT"},"content":"  * Pros: Sorting strategies can be applied to different data structures without modification","lastModifiedDate":"2024-03-26"},{"lineNumber":565,"author":{"gitId":"AidenLYT"},"content":"    * Promoting code reuse and scalability.","lastModifiedDate":"2024-03-26"},{"lineNumber":566,"author":{"gitId":"AidenLYT"},"content":"  * Cons: Requires access to `AddressBook` eventually, introducing unnecessary complexity.","lastModifiedDate":"2024-03-26"},{"lineNumber":567,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":568,"author":{"gitId":"AidenLYT"},"content":"Alternative 1 is chosen for the following reasons:","lastModifiedDate":"2024-03-26"},{"lineNumber":569,"author":{"gitId":"AidenLYT"},"content":"* Simplicity: keeps sorting logic simple and focused by directly interacting with the data structure being sorted.","lastModifiedDate":"2024-03-26"},{"lineNumber":570,"author":{"gitId":"AidenLYT"},"content":"* Clear Responsibility: Sorting logic is closely tied to the data structure it operates on, adhering to the Single","lastModifiedDate":"2024-03-26"},{"lineNumber":571,"author":{"gitId":"AidenLYT"},"content":"Responsibility Principle.","lastModifiedDate":"2024-03-26"},{"lineNumber":572,"author":{"gitId":"AidenLYT"},"content":"* Ease of implementation: No need to pass unnecessary parameters to the sorting method.","lastModifiedDate":"2024-03-26"},{"lineNumber":573,"author":{"gitId":"AidenLYT"},"content":"  * Reduce complexity and potential dependencies.","lastModifiedDate":"2024-03-26"},{"lineNumber":574,"author":{"gitId":"AidenLYT"},"content":"  * Clear outline has been established that the only data structure present is the `AddressBook` containing","lastModifiedDate":"2024-03-26"},{"lineNumber":575,"author":{"gitId":"AidenLYT"},"content":"  `UniquePersonList`.","lastModifiedDate":"2024-03-26"},{"lineNumber":576,"author":{"gitId":"AidenLYT"},"content":"    * There is not a need to apply sorting strategies to another different data structure.","lastModifiedDate":"2024-03-27"},{"lineNumber":577,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":578,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":579,"author":{"gitId":"RunjiaChen"},"content":"### Add By Step","lastModifiedDate":"2024-03-27"},{"lineNumber":580,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":581,"author":{"gitId":"RunjiaChen"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":582,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":583,"author":{"gitId":"RunjiaChen"},"content":"We design a new helper class known as AddCommandHelper. The helper class will have its own GUI that starts up when the ","lastModifiedDate":"2024-03-27"},{"lineNumber":584,"author":{"gitId":"RunjiaChen"},"content":"user types the `addbystep` command. At each stage, CommandHelperWindow will display a message, prompting the user","lastModifiedDate":"2024-03-27"},{"lineNumber":585,"author":{"gitId":"RunjiaChen"},"content":"to enter their detail, e.g. name, phone number, email address, etc. When the user enters a detail, the helper class","lastModifiedDate":"2024-03-27"},{"lineNumber":586,"author":{"gitId":"RunjiaChen"},"content":"will call the respective `parse` method in `ParserUtil` class (e.g. `parseEmail` will be called to check if the user","lastModifiedDate":"2024-03-27"},{"lineNumber":587,"author":{"gitId":"RunjiaChen"},"content":"has entered a valid email). In order to keep track of what details that have been entered into the AddCommandHelper, ","lastModifiedDate":"2024-03-27"},{"lineNumber":588,"author":{"gitId":"RunjiaChen"},"content":"we design a Enum `Status` that is updated in AddCommandHelper whenever a valid detail has been entered by the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":589,"author":{"gitId":"RunjiaChen"},"content":"Once all the valid details have been entered, a new instance of `FormattedCommandPerson`will be created. When the user ","lastModifiedDate":"2024-03-27"},{"lineNumber":590,"author":{"gitId":"RunjiaChen"},"content":"enters the `cp`, the correctly formatted command will be added to their clipboard.","lastModifiedDate":"2024-03-27"},{"lineNumber":591,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":592,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":593,"author":{"gitId":"RunjiaChen"},"content":"`FormattedCommandPerson` inherits directly from the `Person` class. In accordance to the Open-Close ","lastModifiedDate":"2024-03-27"},{"lineNumber":594,"author":{"gitId":"RunjiaChen"},"content":"principle, the inherited class `FormattedCommandPerson` has the method `getFormattedCommand()` which will ","lastModifiedDate":"2024-03-27"},{"lineNumber":595,"author":{"gitId":"RunjiaChen"},"content":"return the correctly formatted command to add a person of those specific details into LookMeUp. ","lastModifiedDate":"2024-03-27"},{"lineNumber":596,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":597,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":598,"author":{"gitId":"RunjiaChen"},"content":"Given below is an example of how the user can interact with the AddCommandHelper: ","lastModifiedDate":"2024-03-27"},{"lineNumber":599,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":600,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":601,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":602,"author":{"gitId":"RunjiaChen"},"content":"* Step 1 : The user enters the `addbystep` command, displaying the GUI for the AddCommandHelper. The GUI will display ","lastModifiedDate":"2024-03-27"},{"lineNumber":603,"author":{"gitId":"RunjiaChen"},"content":"a message to prompt the user to enter the name of the person they wish to add. ","lastModifiedDate":"2024-03-27"},{"lineNumber":604,"author":{"gitId":"RunjiaChen"},"content":"* Step 2 : The user may accidentally press ENTER, causing the name to be blank. ","lastModifiedDate":"2024-03-27"},{"lineNumber":605,"author":{"gitId":"RunjiaChen"},"content":"   * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":606,"author":{"gitId":"RunjiaChen"},"content":"   * Since the `status` attribute is still at `Status.GET_NAME`, AddCommandHelper will invoke the `ParserUtil.ParseName`","lastModifiedDate":"2024-03-27"},{"lineNumber":607,"author":{"gitId":"RunjiaChen"},"content":"  method to check the validity of the name","lastModifiedDate":"2024-03-27"},{"lineNumber":608,"author":{"gitId":"RunjiaChen"},"content":"   * The name is found to be invalid, and a ParseException is thrown, with the error message displayed to the user, ","lastModifiedDate":"2024-03-27"},{"lineNumber":609,"author":{"gitId":"RunjiaChen"},"content":"  stating the constraints of the detail entered (i.e. the name cannot be blank)","lastModifiedDate":"2024-03-27"},{"lineNumber":610,"author":{"gitId":"RunjiaChen"},"content":"   * The `status` attribute of the AddCommandHelper will not be updated, since it did not receive a valid name","lastModifiedDate":"2024-03-27"},{"lineNumber":611,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":612,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the flow of a user when trying to enter a name into the CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":613,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":614,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/processName.puml\" alt\u003d\"processName\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":615,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":616,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":617,"author":{"gitId":"RunjiaChen"},"content":"* Step 3 : The user enters a valid name.","lastModifiedDate":"2024-03-27"},{"lineNumber":618,"author":{"gitId":"RunjiaChen"},"content":"   * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":619,"author":{"gitId":"RunjiaChen"},"content":"   * Since the `status` attribute is still at `Status.GET_NAME`, AddCommandHelper will call on the ","lastModifiedDate":"2024-03-27"},{"lineNumber":620,"author":{"gitId":"RunjiaChen"},"content":"  `ParserUtil.ParseName()` method to check the validity of the name.","lastModifiedDate":"2024-03-27"},{"lineNumber":621,"author":{"gitId":"RunjiaChen"},"content":"   * The name is found to be valid, and the`status` attribute is updated. The `status` attribute is now set to ","lastModifiedDate":"2024-03-27"},{"lineNumber":622,"author":{"gitId":"RunjiaChen"},"content":"  `status.GET_NUMBER`. ","lastModifiedDate":"2024-03-27"},{"lineNumber":623,"author":{"gitId":"RunjiaChen"},"content":"   * The CommandHelperWindow will now display a message for the user to enter the number next","lastModifiedDate":"2024-03-27"},{"lineNumber":624,"author":{"gitId":"RunjiaChen"},"content":"* Step 4 : The user enters only 2 digits into the field before accidentally pressing enter.","lastModifiedDate":"2024-03-27"},{"lineNumber":625,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":626,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_NUMBER`, AddCommandHelper will call on the ","lastModifiedDate":"2024-03-27"},{"lineNumber":627,"author":{"gitId":"RunjiaChen"},"content":"  `ParserUtil.ParseNumber()` method to check the validity of the number","lastModifiedDate":"2024-03-27"},{"lineNumber":628,"author":{"gitId":"RunjiaChen"},"content":"    * The number is found to be invalid, and a ParseException is thrown, with the error message displayed to the user,","lastModifiedDate":"2024-03-27"},{"lineNumber":629,"author":{"gitId":"RunjiaChen"},"content":"      stating the constraints of the detail entered (i.e. the number should be at least 3 digits long)","lastModifiedDate":"2024-03-27"},{"lineNumber":630,"author":{"gitId":"RunjiaChen"},"content":"    * The `status` attribute of the AddCommandHelper will not be updated, since it did not receive a valid number","lastModifiedDate":"2024-03-27"},{"lineNumber":631,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":632,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the flow of a user when trying to enter a number into the CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":633,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":634,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/processNumber.puml\" alt\u003d\"processNumber\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":635,"author":{"gitId":"RunjiaChen"},"content":"* Step 5 : The user enters a \"83452897\".","lastModifiedDate":"2024-03-27"},{"lineNumber":636,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":637,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_NUMBER`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":638,"author":{"gitId":"RunjiaChen"},"content":"  `ParserUtil.ParseName()` method to check the validity of the number.","lastModifiedDate":"2024-03-27"},{"lineNumber":639,"author":{"gitId":"RunjiaChen"},"content":"    * The name is found to be valid, and the`status` attribute is updated. The `status` attribute is now set to","lastModifiedDate":"2024-03-27"},{"lineNumber":640,"author":{"gitId":"RunjiaChen"},"content":"      `status.GET_EMAIL`. ","lastModifiedDate":"2024-03-27"},{"lineNumber":641,"author":{"gitId":"RunjiaChen"},"content":"    * The CommandHelperWindow will now display a message for the user to enter the email next","lastModifiedDate":"2024-03-27"},{"lineNumber":642,"author":{"gitId":"RunjiaChen"},"content":"*  Step 6 : The user enters \"jack.com.sg\" before accidentally pressing enter.","lastModifiedDate":"2024-03-27"},{"lineNumber":643,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":644,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_EMAIL`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":645,"author":{"gitId":"RunjiaChen"},"content":"      `ParserUtil.ParseEmail()` method to check the validity of the number","lastModifiedDate":"2024-03-27"},{"lineNumber":646,"author":{"gitId":"RunjiaChen"},"content":"    * The email is found to be invalid, and a ParseException is thrown, with the error message displayed to the user,","lastModifiedDate":"2024-03-27"},{"lineNumber":647,"author":{"gitId":"RunjiaChen"},"content":"      stating the constraints of the detail entered (i.e. the email should have a \"@\" followed by a domain name)","lastModifiedDate":"2024-03-27"},{"lineNumber":648,"author":{"gitId":"RunjiaChen"},"content":"    * The `status` attribute of the AddCommandHelper will not be updated, since it did not receive a valid email","lastModifiedDate":"2024-03-27"},{"lineNumber":649,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":650,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the flow of a user when trying to enter a email into the CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":651,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":652,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/processEmail.puml\" alt\u003d\"processEmail\" /\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":653,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":654,"author":{"gitId":"RunjiaChen"},"content":"* Step 7 : The user enters \"jack@gmail.com\".","lastModifiedDate":"2024-03-27"},{"lineNumber":655,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":656,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_EMAIL`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":657,"author":{"gitId":"RunjiaChen"},"content":"      `ParserUtil.ParseEmail()` method to check the validity of the number","lastModifiedDate":"2024-03-27"},{"lineNumber":658,"author":{"gitId":"RunjiaChen"},"content":"    * The name is found to be valid, and the`status` attribute is updated. The `status` attribute is now set to","lastModifiedDate":"2024-03-27"},{"lineNumber":659,"author":{"gitId":"RunjiaChen"},"content":"      `status.GET_ADDRESS`","lastModifiedDate":"2024-03-27"},{"lineNumber":660,"author":{"gitId":"RunjiaChen"},"content":"    * The CommandHelperWindow will now display a message for the user to enter the address next","lastModifiedDate":"2024-03-27"},{"lineNumber":661,"author":{"gitId":"RunjiaChen"},"content":"* Step 8 : The user enters \"Bishan St 24\" before pressing enter.","lastModifiedDate":"2024-03-27"},{"lineNumber":662,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":663,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_ADDRESS`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":664,"author":{"gitId":"RunjiaChen"},"content":"      `ParserUtil.ParseAddress()` method to check the validity of the number","lastModifiedDate":"2024-03-27"},{"lineNumber":665,"author":{"gitId":"RunjiaChen"},"content":"    * The name is found to be valid, and the`status` attribute is updated. The `status` attribute is now set to","lastModifiedDate":"2024-03-27"},{"lineNumber":666,"author":{"gitId":"RunjiaChen"},"content":"      `status.GET_TAG`","lastModifiedDate":"2024-03-27"},{"lineNumber":667,"author":{"gitId":"RunjiaChen"},"content":"    * The CommandHelperWindow will now display a message for the user to enter the tag next","lastModifiedDate":"2024-03-27"},{"lineNumber":668,"author":{"gitId":"RunjiaChen"},"content":"      ","lastModifiedDate":"2024-03-27"},{"lineNumber":669,"author":{"gitId":"RunjiaChen"},"content":"    * | Note that a person can have 0 or 1 tag, so leaving the field blank is still considered a valid  input |","lastModifiedDate":"2024-03-27"},{"lineNumber":670,"author":{"gitId":"RunjiaChen"},"content":"      |-------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-27"},{"lineNumber":671,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the flow of a user when trying to enter an email into the CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":672,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":673,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/processAddress.puml\" alt\u003d\"processAddress\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":674,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":675,"author":{"gitId":"RunjiaChen"},"content":"* Step 9 : The user enters \"@#\" before pressing enter. ","lastModifiedDate":"2024-03-27"},{"lineNumber":676,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":677,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_TAG`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":678,"author":{"gitId":"RunjiaChen"},"content":"      `ParserUtil.ParseTag()` method to check the validity of the tag","lastModifiedDate":"2024-03-27"},{"lineNumber":679,"author":{"gitId":"RunjiaChen"},"content":"    * The tag is found to be invalid, and a ParseException is thrown, with the error message displayed to the user,","lastModifiedDate":"2024-03-27"},{"lineNumber":680,"author":{"gitId":"RunjiaChen"},"content":"      stating the constraints of the detail entered (i.e. tags should only be alphanumeric)","lastModifiedDate":"2024-03-27"},{"lineNumber":681,"author":{"gitId":"RunjiaChen"},"content":"    * The `status` attribute of the AddCommandHelper will not be updated, since it did not receive a valid tag","lastModifiedDate":"2024-03-27"},{"lineNumber":682,"author":{"gitId":"RunjiaChen"},"content":"* Step 10 : The user enters \"friend\".","lastModifiedDate":"2024-03-27"},{"lineNumber":683,"author":{"gitId":"RunjiaChen"},"content":"    * AddCommandHelper will check its `status` attribute","lastModifiedDate":"2024-03-27"},{"lineNumber":684,"author":{"gitId":"RunjiaChen"},"content":"    * Since the `status` attribute is still at `Status.GET_TAG`, AddCommandHelper will call on the","lastModifiedDate":"2024-03-27"},{"lineNumber":685,"author":{"gitId":"RunjiaChen"},"content":"      `ParserUtil.parseTag()` method to check the validity of the number","lastModifiedDate":"2024-03-27"},{"lineNumber":686,"author":{"gitId":"RunjiaChen"},"content":"    * The name is found to be valid, and the`status` attribute is updated. The `status` attribute is now set to","lastModifiedDate":"2024-03-27"},{"lineNumber":687,"author":{"gitId":"RunjiaChen"},"content":"      `status.COMPLETE`.","lastModifiedDate":"2024-03-27"},{"lineNumber":688,"author":{"gitId":"RunjiaChen"},"content":"    * The CommandHelperWindow will now display a message for the user to type \u0027cp\u0027 to copy the command to the clipboard","lastModifiedDate":"2024-03-27"},{"lineNumber":689,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":690,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the flow of a user when trying to enter a tag into the CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":691,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":692,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/processTag.puml\" alt\u003d\"processTag\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":693,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":694,"author":{"gitId":"RunjiaChen"},"content":"* Step 11 : User makes another input into the CommandHelperWindow.","lastModifiedDate":"2024-03-27"},{"lineNumber":695,"author":{"gitId":"RunjiaChen"},"content":"    * Any subsequent input entered by the user will result in the same message being displayed to the user, informing ","lastModifiedDate":"2024-03-27"},{"lineNumber":696,"author":{"gitId":"RunjiaChen"},"content":"  the user to type \"cp\" so as to copy the command to the user\u0027s clipboard","lastModifiedDate":"2024-03-27"},{"lineNumber":697,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":698,"author":{"gitId":"RunjiaChen"},"content":"The following activity diagram summarizes the entire flow of a user when trying to use CommandHelper:","lastModifiedDate":"2024-03-27"},{"lineNumber":699,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":700,"author":{"gitId":"RunjiaChen"},"content":"\u003cpuml src\u003d\"diagrams/AddByStepActivityDiagram.puml\" alt\u003d\"AddByStepActivityDiagram\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":701,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":702,"author":{"gitId":"RunjiaChen"},"content":"    ","lastModifiedDate":"2024-03-27"},{"lineNumber":703,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":704,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":705,"author":{"gitId":"RunjiaChen"},"content":"#### Design considerations:","lastModifiedDate":"2024-03-27"},{"lineNumber":706,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":707,"author":{"gitId":"RunjiaChen"},"content":"Aspect: How to implement assistance functions to aid users in typing their commands.","lastModifiedDate":"2024-03-27"},{"lineNumber":708,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":709,"author":{"gitId":"RunjiaChen"},"content":"* **Alternative 1 (current choice)** Create a new helper class and GUI to prompt users for the necessary details.","lastModifiedDate":"2024-03-27"},{"lineNumber":710,"author":{"gitId":"RunjiaChen"},"content":"* Pros:","lastModifiedDate":"2024-03-27"},{"lineNumber":711,"author":{"gitId":"RunjiaChen"},"content":"  * It is easy to implement a new class, and due to the high cohesion of the previous code, we are able to reuse","lastModifiedDate":"2024-03-27"},{"lineNumber":712,"author":{"gitId":"RunjiaChen"},"content":"    methods defined previously in `ParserUtil` to check the validity of the fields entered by the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":713,"author":{"gitId":"RunjiaChen"},"content":"  * The CommandHelper class can be implemented separately from the rest of the classes. This results in lower coupling","lastModifiedDate":"2024-03-27"},{"lineNumber":714,"author":{"gitId":"RunjiaChen"},"content":"    between the newly implemented CommandHelper class and the remaining classes, resulting in easier maintenance and","lastModifiedDate":"2024-03-27"},{"lineNumber":715,"author":{"gitId":"RunjiaChen"},"content":"    integration","lastModifiedDate":"2024-03-27"},{"lineNumber":716,"author":{"gitId":"RunjiaChen"},"content":"* Cons:","lastModifiedDate":"2024-03-27"},{"lineNumber":717,"author":{"gitId":"RunjiaChen"},"content":"    * The startup of another GUI for the helper class may introduce lag, especially on the older computers.","lastModifiedDate":"2024-03-27"},{"lineNumber":718,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":719,"author":{"gitId":"RunjiaChen"},"content":"* **Alternative 2** Implement a command to display the format for users to follow.","lastModifiedDate":"2024-03-27"},{"lineNumber":720,"author":{"gitId":"RunjiaChen"},"content":"* Pros:","lastModifiedDate":"2024-03-27"},{"lineNumber":721,"author":{"gitId":"RunjiaChen"},"content":"    * It easier to implement as compared to the CommandHelper class, prompts do not actually have any form of user","lastModifiedDate":"2024-03-27"},{"lineNumber":722,"author":{"gitId":"RunjiaChen"},"content":"    interactions.","lastModifiedDate":"2024-03-27"},{"lineNumber":723,"author":{"gitId":"RunjiaChen"},"content":"* Cons:","lastModifiedDate":"2024-03-27"},{"lineNumber":724,"author":{"gitId":"RunjiaChen"},"content":"    * It does not benefit users as much, as they can still make mistakes when it comes to following the exact format","lastModifiedDate":"2024-03-27"},{"lineNumber":725,"author":{"gitId":"RunjiaChen"},"content":"  of the command.","lastModifiedDate":"2024-03-27"},{"lineNumber":726,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":727,"author":{"gitId":"RunjiaChen"},"content":"* **Alternative 3** Implement a command autocomplete some commands for users.","lastModifiedDate":"2024-03-27"},{"lineNumber":728,"author":{"gitId":"RunjiaChen"},"content":"* Pros:","lastModifiedDate":"2024-03-27"},{"lineNumber":729,"author":{"gitId":"RunjiaChen"},"content":"    * It can be built directly into the original GUI for AddressBook, there is no need for separate GUI for the","lastModifiedDate":"2024-03-27"},{"lineNumber":730,"author":{"gitId":"RunjiaChen"},"content":"    CommandHelper class","lastModifiedDate":"2024-03-27"},{"lineNumber":731,"author":{"gitId":"RunjiaChen"},"content":"* Cons:","lastModifiedDate":"2024-03-27"},{"lineNumber":732,"author":{"gitId":"RunjiaChen"},"content":"    * Autocomplete is only able to fill in certain parts of the command for the user (i.e. the prefixes for names, ","lastModifiedDate":"2024-03-27"},{"lineNumber":733,"author":{"gitId":"RunjiaChen"},"content":"    tags). It cannot fill in the exact details ","lastModifiedDate":"2024-03-27"},{"lineNumber":734,"author":{"gitId":"RunjiaChen"},"content":"    * It is more difficult to implement as the users may try to autocomplete an invalid command, so there may be a need ","lastModifiedDate":"2024-03-27"},{"lineNumber":735,"author":{"gitId":"RunjiaChen"},"content":"    perform checking of the command first, before letting the user know that the entered command is invalid. ","lastModifiedDate":"2024-03-27"},{"lineNumber":736,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":737,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":738,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":739,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":740,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":741,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":742,"author":{"gitId":"RunjiaChen"},"content":"### \\[Future Development\\] Extension of Helper class to general commands","lastModifiedDate":"2024-03-27"},{"lineNumber":743,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":744,"author":{"gitId":"RunjiaChen"},"content":"Currently, the helper class only aids users by prompting them with the necessary fields for the `add` command. This ","lastModifiedDate":"2024-03-27"},{"lineNumber":745,"author":{"gitId":"RunjiaChen"},"content":"makes sense as the `add` command is the most complicated, involving the most number of fields and the most complex ","lastModifiedDate":"2024-03-27"},{"lineNumber":746,"author":{"gitId":"RunjiaChen"},"content":"format. To a new user who is unfamiliar with the other commands, we can add more types of assistance to the helper ","lastModifiedDate":"2024-03-27"},{"lineNumber":747,"author":{"gitId":"RunjiaChen"},"content":"class. The general helper class can prompt the user for the command they need help with. The user may enter \"delete\"","lastModifiedDate":"2024-03-27"},{"lineNumber":748,"author":{"gitId":"RunjiaChen"},"content":"when they need help with the correct formatting of the `delete` command. The helper class can then prompt users for the ","lastModifiedDate":"2024-03-27"},{"lineNumber":749,"author":{"gitId":"RunjiaChen"},"content":"necessary details needed for that command. ","lastModifiedDate":"2024-03-27"},{"lineNumber":750,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":751,"author":{"gitId":"RunjiaChen"},"content":"Aside from adding more functionalities to the helper class, we can also implement command checking once the all the ","lastModifiedDate":"2024-03-27"},{"lineNumber":752,"author":{"gitId":"RunjiaChen"},"content":"fields have been entered. As of now the AddCommandHelper does not check whether the details that are keyed in ","lastModifiedDate":"2024-03-27"},{"lineNumber":753,"author":{"gitId":"RunjiaChen"},"content":"by the user are duplicate details. In the future iterations, we can implement a check that directly checks the details ","lastModifiedDate":"2024-03-27"},{"lineNumber":754,"author":{"gitId":"RunjiaChen"},"content":"of the user once all of them have been entered.","lastModifiedDate":"2024-03-27"},{"lineNumber":755,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":756,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":757,"author":{"gitId":"kervyntan"},"content":"### Duplicate feature","lastModifiedDate":"2024-03-27"},{"lineNumber":758,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":759,"author":{"gitId":"kervyntan"},"content":"#### Implementation","lastModifiedDate":"2024-03-27"},{"lineNumber":760,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":761,"author":{"gitId":"kervyntan"},"content":"The feature to be able to add persons with duplicate names in the address book are facilitated by the use of the","lastModifiedDate":"2024-03-27"},{"lineNumber":762,"author":{"gitId":"kervyntan"},"content":"`DuplicateCommand`. It implements the following operations:","lastModifiedDate":"2024-03-27"},{"lineNumber":763,"author":{"gitId":"kervyntan"},"content":"* `DuplicateCommand#`: Constructor class which is instantiated and stores the necessary `toAdd` person object","lastModifiedDate":"2024-03-27"},{"lineNumber":764,"author":{"gitId":"kervyntan"},"content":"    based on user input.","lastModifiedDate":"2024-03-27"},{"lineNumber":765,"author":{"gitId":"kervyntan"},"content":"* `DuplicateCommand#Executes`: Executes the necessary `addDuplicatePerson` method and updates the model.","lastModifiedDate":"2024-03-27"},{"lineNumber":766,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":767,"author":{"gitId":"kervyntan"},"content":"The sorting mechanism consists of several components:","lastModifiedDate":"2024-03-27"},{"lineNumber":768,"author":{"gitId":"kervyntan"},"content":"1. `addDuplicatePerson`: A method bound by the `Person`, `ModelManager`, `AddressBook` classes that each contain","lastModifiedDate":"2024-03-27"},{"lineNumber":769,"author":{"gitId":"kervyntan"},"content":"    similar logic to support a SLAP form of implementation for the end execution point i.e. `execute` in ","lastModifiedDate":"2024-03-27"},{"lineNumber":770,"author":{"gitId":"kervyntan"},"content":"    `DuplicateCommand`.","lastModifiedDate":"2024-03-27"},{"lineNumber":771,"author":{"gitId":"kervyntan"},"content":"2. `DuplicateCommand`: Initiates the duplication by parsing user input to determine the identity of the person to add. ","lastModifiedDate":"2024-03-27"},{"lineNumber":772,"author":{"gitId":"kervyntan"},"content":"    After duplicating, it then updates the list of persons in the model.","lastModifiedDate":"2024-03-27"},{"lineNumber":773,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":774,"author":{"gitId":"kervyntan"},"content":"Given below is an example usage scenario and how the feature mechanism behaves at each step.","lastModifiedDate":"2024-03-27"},{"lineNumber":775,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":776,"author":{"gitId":"kervyntan"},"content":"* Step 1: The user launches the application for the first time, no contacts will be present in the `AddressBook`.","lastModifiedDate":"2024-03-27"},{"lineNumber":777,"author":{"gitId":"kervyntan"},"content":"  When user `add` contacts in the `AddressBook`, contacts will be sorted based on their timestamp.","lastModifiedDate":"2024-03-27"},{"lineNumber":778,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":779,"author":{"gitId":"kervyntan"},"content":"* Step 2: The user reaches a point where they encounter the need to have to add a separate contact, that has the exact","lastModifiedDate":"2024-03-27"},{"lineNumber":780,"author":{"gitId":"kervyntan"},"content":"  same name as another person in their `AddressBook`.","lastModifiedDate":"2024-03-27"},{"lineNumber":781,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":782,"author":{"gitId":"kervyntan"},"content":"* Step 3: To continue, the user executes `add /n... /e ...` to attempt to add this new person.","lastModifiedDate":"2024-03-27"},{"lineNumber":783,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":784,"author":{"gitId":"kervyntan"},"content":"* Step 4: The user then receives an error in their `AddressBook` which alerts them that they already have such a person","lastModifiedDate":"2024-03-27"},{"lineNumber":785,"author":{"gitId":"kervyntan"},"content":"  in their `AddressBook`, and they have the option of overwriting the existing contact, or duplicating it.","lastModifiedDate":"2024-03-27"},{"lineNumber":786,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":787,"author":{"gitId":"kervyntan"},"content":"* Step 5: The user picks their choice and edits the command in their current `CommandBox`, replacing `add` with either","lastModifiedDate":"2024-03-27"},{"lineNumber":788,"author":{"gitId":"kervyntan"},"content":"  `duplicate` or `overwrite INDEX`, leaving the rest of the arguments untouched.","lastModifiedDate":"2024-03-27"},{"lineNumber":789,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":790,"author":{"gitId":"kervyntan"},"content":"* Step 6: (1st case) The user executes `duplicate /n... /e...` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":791,"author":{"gitId":"kervyntan"},"content":"    * The `duplicateCommand#` constructor will initialize with the `toAdd` variable based on the created `Person` ","lastModifiedDate":"2024-03-27"},{"lineNumber":792,"author":{"gitId":"kervyntan"},"content":"        object in `DuplicateCommandParser`.","lastModifiedDate":"2024-03-27"},{"lineNumber":793,"author":{"gitId":"kervyntan"},"content":"    * `duplicateCommand#execute` will pass the `toAdd` to the `model#addDuplicatePerson`, where `UniquePersonsList`","lastModifiedDate":"2024-03-27"},{"lineNumber":794,"author":{"gitId":"kervyntan"},"content":"        is updated with the duplicated person.","lastModifiedDate":"2024-03-27"},{"lineNumber":795,"author":{"gitId":"kervyntan"},"content":"    * After duplicating, the model will be updated to reflect the newly sorted contacts list, ","lastModifiedDate":"2024-03-27"},{"lineNumber":796,"author":{"gitId":"kervyntan"},"content":"        alongside a return statement to provide confirmation to the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":797,"author":{"gitId":"kervyntan"},"content":"  ","lastModifiedDate":"2024-03-27"},{"lineNumber":798,"author":{"gitId":"kervyntan"},"content":"* Step 6.1: (2nd case) The user executes `overwrite INDEX /n... /e...` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":799,"author":{"gitId":"kervyntan"},"content":"    * The `overwriteCommand#` constructor will initialize with the `toAdd` variable based on the created `Person`","lastModifiedDate":"2024-03-27"},{"lineNumber":800,"author":{"gitId":"kervyntan"},"content":"      object in `OverwriteCommandParser`, as well as the user\u0027s inputted index of person to be edited in the ","lastModifiedDate":"2024-03-27"},{"lineNumber":801,"author":{"gitId":"kervyntan"},"content":"      `AddressBook`.","lastModifiedDate":"2024-03-27"},{"lineNumber":802,"author":{"gitId":"kervyntan"},"content":"    * `overwriteCommand#execute` will pass the `indexOfTarget` to the `model#getPerson`, and will also pass the `toAdd`","lastModifiedDate":"2024-03-27"},{"lineNumber":803,"author":{"gitId":"kervyntan"},"content":"       to the `model#setDuplicatePerson`, where `UniquePersonsList` is updated with the duplicated person.","lastModifiedDate":"2024-03-27"},{"lineNumber":804,"author":{"gitId":"kervyntan"},"content":"  ","lastModifiedDate":"2024-03-27"},{"lineNumber":805,"author":{"gitId":"kervyntan"},"content":"### Design consideration:","lastModifiedDate":"2024-03-27"},{"lineNumber":806,"author":{"gitId":"lynnetteeee"},"content":"`SolidStrategy` interface was implemented to adhere to SOLID principles, particularly the Single Responsibility ","lastModifiedDate":"2024-03-29"},{"lineNumber":807,"author":{"gitId":"lynnetteeee"},"content":"Principle and Interface Segregation Principle.","lastModifiedDate":"2024-03-29"},{"lineNumber":808,"author":{"gitId":"kervyntan"},"content":"* Single Responsibility Principle","lastModifiedDate":"2024-03-27"},{"lineNumber":809,"author":{"gitId":"kervyntan"},"content":"    * The class maintains single responsibility by defining methods for duplicating person strategies without burdening","lastModifiedDate":"2024-03-27"},{"lineNumber":810,"author":{"gitId":"kervyntan"},"content":"      implementations with unrelated methods","lastModifiedDate":"2024-03-27"},{"lineNumber":811,"author":{"gitId":"kervyntan"},"content":"* Interface Segregation Principle","lastModifiedDate":"2024-03-27"},{"lineNumber":812,"author":{"gitId":"kervyntan"},"content":"    * Segregates behavior for sorting into distinct methods `addDuplicatePerson`, `setDuplicatePerson`, `getPerson`, ","lastModifiedDate":"2024-03-27"},{"lineNumber":813,"author":{"gitId":"kervyntan"},"content":"      thus, allowing different sorting strategies to implement only the methods they need, rather than being forced to ","lastModifiedDate":"2024-03-27"},{"lineNumber":814,"author":{"gitId":"kervyntan"},"content":"      implement monolithic interface with unnecessary methods.","lastModifiedDate":"2024-03-27"},{"lineNumber":815,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":816,"author":{"gitId":"kervyntan"},"content":"* **Alternative 1** `DuplicateCommand` constructor of the `DuplicateCommand` to take in `toAdd` as its parameter.","lastModifiedDate":"2024-03-27"},{"lineNumber":817,"author":{"gitId":"kervyntan"},"content":"    * Pros: Straightforward design and easy to implement.","lastModifiedDate":"2024-03-27"},{"lineNumber":818,"author":{"gitId":"kervyntan"},"content":"        * Duplication logic interacts directly with data structure being sorted.","lastModifiedDate":"2024-03-27"},{"lineNumber":819,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":820,"author":{"gitId":"kervyntan"},"content":"Alternative 1 is chosen for the following reasons:","lastModifiedDate":"2024-03-27"},{"lineNumber":821,"author":{"gitId":"kervyntan"},"content":"* Simplicity: keeps duplicating logic simple and focused by directly interacting with the data structure being sorted.","lastModifiedDate":"2024-03-27"},{"lineNumber":822,"author":{"gitId":"kervyntan"},"content":"* Clear Responsibility: Duplication logic is closely tied to the data structure it operates on, adhering to the Single","lastModifiedDate":"2024-03-27"},{"lineNumber":823,"author":{"gitId":"kervyntan"},"content":"  Responsibility Principle.","lastModifiedDate":"2024-03-27"},{"lineNumber":824,"author":{"gitId":"kervyntan"},"content":"* Ease of implementation: No need to pass unnecessary parameters to the DuplicateCommandParser method.","lastModifiedDate":"2024-03-27"},{"lineNumber":825,"author":{"gitId":"kervyntan"},"content":"    * Reduce complexity and potential dependencies.","lastModifiedDate":"2024-03-27"},{"lineNumber":826,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":827,"author":{"gitId":"smolegz"},"content":"### Exit Window","lastModifiedDate":"2024-03-29"},{"lineNumber":828,"author":{"gitId":"smolegz"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":829,"author":{"gitId":"smolegz"},"content":"For this feature, an exit window [`ExitWindow`](https://github.com/AY2324S2-CS2103T-T12-2/tp/blob/master/src/main/java/seedu/address/ui/ExitWindow.java) is created to seeks confirmation from user to terminate LookMeUp. `ExitWindow` is packaged under `UI` , along with other various parts of Ui components e.g. `CommandBox`, `ResultDisplay`, and `PersonList` etc. Similar to other Ui components, `ExitWindow` inherits from `UiPart` which captures the commonalities between classes that represent the different part of the entire GUI.","lastModifiedDate":"2024-03-29"},{"lineNumber":830,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":831,"author":{"gitId":"smolegz"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":832,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":833,"author":{"gitId":"smolegz"},"content":"The Ui layout of `ExitWindow` is defined under [`ExitWindow.fxml`](https://github.com/AY2324S2-CS2103T-T12-2/tp/blob/master/src/main/resources/view/ExitWindow.fxml). Below elucidates how `ExitWindow` is used:","lastModifiedDate":"2024-03-29"},{"lineNumber":834,"author":{"gitId":"smolegz"},"content":"1. User executes the command `exit`, or other similar commands that resolves to `exit` deemed by the [fuzzy input algorithm](#fuzzy-input).","lastModifiedDate":"2024-03-29"},{"lineNumber":835,"author":{"gitId":"smolegz"},"content":"2. An exit window will appear prompting for user confirmation to exit - Yes/No button.","lastModifiedDate":"2024-03-29"},{"lineNumber":836,"author":{"gitId":"smolegz"},"content":"3. User would select either one of the 2 options.","lastModifiedDate":"2024-03-29"},{"lineNumber":837,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":838,"author":{"gitId":"smolegz"},"content":"\u003cpump src\u003d\"diagrams/ExitCommandActivityDiagram.pump\" alt\u003d\"Flow of Exit command\"/\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":839,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":840,"author":{"gitId":"smolegz"},"content":"In `ExitWindow.fxml`, the `Yes` button is set as the default button such that the button receives a VK_ENTER press; the `Yes` button will always be in focus whenever `ExitWindow` is displayed. When a positive confirmation is received, `ExitWindow#yesButton()` would be called to terminate LookMeUp.","lastModifiedDate":"2024-03-29"},{"lineNumber":841,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":842,"author":{"gitId":"smolegz"},"content":"Consequently, the `No` button is set as the cancel button where it would receive a VK_ESC press that hides `ExitWindow`. `ExitWindow#NoButton()` would be called when a negative confirmation is received.","lastModifiedDate":"2024-03-29"},{"lineNumber":843,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":844,"author":{"gitId":"smolegz"},"content":"The behaviour of these implementations follow the behaviours as specified by [JavaFx](https://openjfx.io/javadoc/11/javafx.controls/javafx/scene/control/Button.html).","lastModifiedDate":"2024-03-29"},{"lineNumber":845,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":846,"author":{"gitId":"smolegz"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":847,"author":{"gitId":"smolegz"},"content":"- Single Responsibility Principle","lastModifiedDate":"2024-03-29"},{"lineNumber":848,"author":{"gitId":"smolegz"},"content":"  - The `ExitWindow` maintains the responsibility of displaying exit confirmation and handling a user choice, which reduces coupling between itself and other Ui components.","lastModifiedDate":"2024-03-29"},{"lineNumber":849,"author":{"gitId":"smolegz"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":850,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":851,"author":{"gitId":"smolegz"},"content":"- Alternate implementation: A text field input that requires user to enter yes/no for confirmation. This design was not conceived as it requires the handling of invalid input, as is not as simple to implement as compared to the current implementation. Moreover, confirmation utilizing buttons is more intuitive for majority of users.","lastModifiedDate":"2024-03-29"},{"lineNumber":852,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":853,"author":{"gitId":"smolegz"},"content":"### Input History Navigation","lastModifiedDate":"2024-03-29"},{"lineNumber":854,"author":{"gitId":"smolegz"},"content":"#### Implementation","lastModifiedDate":"2024-03-29"},{"lineNumber":855,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":856,"author":{"gitId":"smolegz"},"content":"This Ui feature allow users to restore previously entered commands typed in the [`CommandBox`](https://github.com/AY2324S2-CS2103T-T12-2/tp/blob/master/src/main/java/seedu/address/ui/CommandBox.java), regardless of the validity of the command. Similar to the CLI, users would use the Up/Down arrow keys to navigate previously typed commands in the input history.","lastModifiedDate":"2024-03-29"},{"lineNumber":857,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":858,"author":{"gitId":"smolegz"},"content":"The class that encapsulates all the history of the commands is `InputHistory` which is declared as a nested class inside `CommandBox`; this is because the history of commands should be the responsibility of `CommandBox` class and should not be openly accessible to other classes.","lastModifiedDate":"2024-03-29"},{"lineNumber":859,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":860,"author":{"gitId":"smolegz"},"content":"`InputHistory` is instantiated whenever the constructor of `CommandBox` is called. As such, there is an association between `InputHistory` and `CommandBox`. The implementation of `InputHistory` encapsulates an `ArrayList\u003cString\u003e` and an index-pointer. Whenever a command is received by `CommandBox`, the command typed will be stored inside `InputHistory` (regardless of validity), as shown by the code snippet below:","lastModifiedDate":"2024-03-29"},{"lineNumber":861,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":862,"author":{"gitId":"smolegz"},"content":"```Java","lastModifiedDate":"2024-03-29"},{"lineNumber":863,"author":{"gitId":"smolegz"},"content":"@FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":864,"author":{"gitId":"smolegz"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":865,"author":{"gitId":"smolegz"},"content":"    ","lastModifiedDate":"2024-03-29"},{"lineNumber":866,"author":{"gitId":"smolegz"},"content":"    ///Handles the event whenever a command is entered.","lastModifiedDate":"2024-03-29"},{"lineNumber":867,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-29"},{"lineNumber":868,"author":{"gitId":"smolegz"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2024-03-29"},{"lineNumber":869,"author":{"gitId":"smolegz"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2024-03-29"},{"lineNumber":870,"author":{"gitId":"smolegz"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":871,"author":{"gitId":"smolegz"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":872,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":873,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":874,"author":{"gitId":"smolegz"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":875,"author":{"gitId":"smolegz"},"content":"            commandExecutor.execute(commandText); //execute command in Logic","lastModifiedDate":"2024-03-29"},{"lineNumber":876,"author":{"gitId":"smolegz"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":877,"author":{"gitId":"smolegz"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2024-03-29"},{"lineNumber":878,"author":{"gitId":"smolegz"},"content":"        } finally {","lastModifiedDate":"2024-03-29"},{"lineNumber":879,"author":{"gitId":"smolegz"},"content":"            inputHistory.addToInputHistory(commandText); ","lastModifiedDate":"2024-03-29"},{"lineNumber":880,"author":{"gitId":"smolegz"},"content":"            commandTextField.setText(\"\"); // clears the textfield","lastModifiedDate":"2024-03-29"},{"lineNumber":881,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":882,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":883,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":884,"author":{"gitId":"smolegz"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":885,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":886,"author":{"gitId":"smolegz"},"content":"`CommandBox#handleArrowKey()` is called when a `KeyEvent` is detected by JavaFX event listener. With reference to the code snippet below, the function checks if `InputHistory` is empty. If the history is empty, it performs nothing. Else, it checks if whether the key pressed is an Up key, or a Down key. The code snippet below shows the implementation of `CommandBox#handleArrowKey()`:","lastModifiedDate":"2024-03-29"},{"lineNumber":887,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":888,"author":{"gitId":"smolegz"},"content":"```Java","lastModifiedDate":"2024-03-29"},{"lineNumber":889,"author":{"gitId":"smolegz"},"content":"private void handleArrowKey(KeyEvent event) {","lastModifiedDate":"2024-03-29"},{"lineNumber":890,"author":{"gitId":"smolegz"},"content":"        String keyName \u003d event.getCode().getName();","lastModifiedDate":"2024-03-29"},{"lineNumber":891,"author":{"gitId":"smolegz"},"content":"        ","lastModifiedDate":"2024-03-29"},{"lineNumber":892,"author":{"gitId":"smolegz"},"content":"        //Performs nothing if there is no history.","lastModifiedDate":"2024-03-29"},{"lineNumber":893,"author":{"gitId":"smolegz"},"content":"        if (inputHistory.inputList.isEmpty()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":894,"author":{"gitId":"smolegz"},"content":"            return;","lastModifiedDate":"2024-03-29"},{"lineNumber":895,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":896,"author":{"gitId":"smolegz"},"content":"        if (keyName.equals(\"Up\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":897,"author":{"gitId":"smolegz"},"content":"            inputHistory.decrementIndex(); //Reduces pointer by 1","lastModifiedDate":"2024-03-29"},{"lineNumber":898,"author":{"gitId":"smolegz"},"content":"            setTextField(); // Sets textfield according to pointer","lastModifiedDate":"2024-03-29"},{"lineNumber":899,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":900,"author":{"gitId":"smolegz"},"content":"        if (keyName.equals(\"Down\")) {","lastModifiedDate":"2024-03-29"},{"lineNumber":901,"author":{"gitId":"smolegz"},"content":"            inputHistory.incrementIndex(); //Increment pointer by 1","lastModifiedDate":"2024-03-29"},{"lineNumber":902,"author":{"gitId":"smolegz"},"content":"            setTextField(); //Sets textfield according to pointer","lastModifiedDate":"2024-03-29"},{"lineNumber":903,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":904,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-29"},{"lineNumber":905,"author":{"gitId":"smolegz"},"content":"```","lastModifiedDate":"2024-03-29"},{"lineNumber":906,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":907,"author":{"gitId":"smolegz"},"content":"When `CommandBox#setTextField()` is called, it requests for the command from `InputHistory#getCommand()` that is pointed by the pointer, and sets the text field of `CommandBox` that is returned by the method.","lastModifiedDate":"2024-03-29"},{"lineNumber":908,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":909,"author":{"gitId":"smolegz"},"content":"How the `InputHistory` index-pointer works:","lastModifiedDate":"2024-03-29"},{"lineNumber":910,"author":{"gitId":"smolegz"},"content":"- Whenever a new command has been entered, the command is added into the list. The index-pointer is set to the **size** of the `ArrayList` (i.e. it is pointing towards an empty slot in the `ArrayList`).","lastModifiedDate":"2024-03-29"},{"lineNumber":911,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":912,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":913,"author":{"gitId":"smolegz"},"content":"- During an Up key press, the index-pointer is decremented by one (i.e. it is pointing towards an earlier command in the history).","lastModifiedDate":"2024-03-29"},{"lineNumber":914,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":915,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":916,"author":{"gitId":"smolegz"},"content":"- During a Down key press, the index-pointer is incremented by one (i.e. it is point towards a later command in the history).","lastModifiedDate":"2024-03-29"},{"lineNumber":917,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":918,"author":{"gitId":"smolegz"},"content":"#### Design Considerations","lastModifiedDate":"2024-03-29"},{"lineNumber":919,"author":{"gitId":"smolegz"},"content":"- Single Responsibility Principle ","lastModifiedDate":"2024-03-29"},{"lineNumber":920,"author":{"gitId":"smolegz"},"content":"  - `CommandBox` and `InputHistory` are gathered together as the two classes share the responsibilities of receiving and retrieving user inputs within the text field, hence increasing the overall cohesion of Ui components.","lastModifiedDate":"2024-03-29"},{"lineNumber":921,"author":{"gitId":"smolegz"},"content":"  ","lastModifiedDate":"2024-03-29"},{"lineNumber":922,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":923,"author":{"gitId":"smolegz"},"content":"- `inputHistory` is set as a private variable as no other class should have access to the internal of the class, except `CommandBox` itself. This allows encapsulation and information-hiding from other classes. Setter and Getter methods of `InputHistory` such as `decrementIndex()`, `incrementIndex()` and `addToInputHistory()` etc. serve as functions to retrieve and modify the value of the class.","lastModifiedDate":"2024-03-29"},{"lineNumber":924,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":925,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":926,"author":{"gitId":"smolegz"},"content":"- Both `InputHistory#decrementIndex()` and `inputHistory#incrementIndex()` are designed with guard clauses to prevent the index pointer from reducing below zero or exceeding beyond the bounds of the `ArrayList\u003cString\u003e`.","lastModifiedDate":"2024-03-29"},{"lineNumber":927,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":928,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":929,"author":{"gitId":"smolegz"},"content":"- Alternative Design","lastModifiedDate":"2024-03-29"},{"lineNumber":930,"author":{"gitId":"smolegz"},"content":"  - Currently, the implementation of `InputHistory` consists of an `ArrayList\u003cString\u003e` that stores all previously typed commands. An alternative solution to using an ArrayList would be LinkedList. However, LinkedList is not adopted as Java\u0027s LinkedList is implemented as Doubly-linked list which causes more memory overhead than ArrayList. Moreover, due to regular access of elements in the collection, ArrayList is a better design decision as its `get` operation runs in constant time O(1), as compared to LinkedList `get` O(n). Other methods such as `remove` and `search` etc. were not considered in the design decision as these operations are not needed for implementing `InputHistory`, but may be relevant for future extensions to the class.","lastModifiedDate":"2024-03-29"},{"lineNumber":931,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":933,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":938,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":939,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":940,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":941,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"kervyntan"},"content":"NUS students who stay on campus","lastModifiedDate":"2024-03-06"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"kervyntan"},"content":"## User Stories","lastModifiedDate":"2024-03-06"},{"lineNumber":953,"author":{"gitId":"kervyntan"},"content":"**Value proposition**:","lastModifiedDate":"2024-03-06"},{"lineNumber":954,"author":{"gitId":"kervyntan"},"content":"1. Keeps track of the location and details of upcoming meetings specific to each contact, knowing when and who to make calls with","lastModifiedDate":"2024-03-06"},{"lineNumber":955,"author":{"gitId":"kervyntan"},"content":"2. Given how students who stay on campus find themselves in many different committees and interest groups, our Address Book seeks to provide features that allows them to compartmentalise their contacts and access various groups easily","lastModifiedDate":"2024-03-06"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":964,"author":{"gitId":"kervyntan"},"content":"| `* * *`  | Student in a lot of committees | Access my contacts by groups | Easily identify the people in their different committees and CCAs                 |","lastModifiedDate":"2024-03-06"},{"lineNumber":965,"author":{"gitId":"kervyntan"},"content":"| `* * *`  | Student                                       | Sort the contacts alphabetically | Easily navigate the address book                                                        |","lastModifiedDate":"2024-03-06"},{"lineNumber":966,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":971,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"AidenLYT"},"content":"**Use case:** UC1 - Add a contact\\","lastModifiedDate":"2024-03-01"},{"lineNumber":975,"author":{"gitId":"AidenLYT"},"content":"**Actor:** User\\","lastModifiedDate":"2024-03-01"},{"lineNumber":976,"author":{"gitId":"AidenLYT"},"content":"**Person that can play this role:** Student in a lot of committees","lastModifiedDate":"2024-03-01"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":980,"author":{"gitId":"AidenLYT"},"content":"1. User type add contact command.","lastModifiedDate":"2024-03-01"},{"lineNumber":981,"author":{"gitId":"AidenLYT"},"content":"2. LookMeUp prompts for details.","lastModifiedDate":"2024-03-01"},{"lineNumber":982,"author":{"gitId":"AidenLYT"},"content":"3. User enters the requested details.","lastModifiedDate":"2024-03-01"},{"lineNumber":983,"author":{"gitId":"AidenLYT"},"content":"4. LookMeUp add the contact and displays the new contact in the database.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":984,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":985,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":986,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":987,"author":{"gitId":"AidenLYT"},"content":"* 1a. User typed an invalid command","lastModifiedDate":"2024-03-01"},{"lineNumber":988,"author":{"gitId":"AidenLYT"},"content":"    * 1a1. LookMeUp displays the error and shows a list of commands it supports.","lastModifiedDate":"2024-03-01"},{"lineNumber":989,"author":{"gitId":"AidenLYT"},"content":"    * 1a2. User enters the correct command.","lastModifiedDate":"2024-03-01"},{"lineNumber":990,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":991,"author":{"gitId":"AidenLYT"},"content":"  Steps 1a1-1a2 are repeated until the command entered is correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":992,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":994,"author":{"gitId":"AidenLYT"},"content":"* 3a. LookMeUp detects an error in the entered data.","lastModifiedDate":"2024-03-01"},{"lineNumber":995,"author":{"gitId":"AidenLYT"},"content":"  * 3a1. LookMeUp displays the error and requests for the correct data.","lastModifiedDate":"2024-03-01"},{"lineNumber":996,"author":{"gitId":"AidenLYT"},"content":"  * 3a2. User enters the new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":997,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":998,"author":{"gitId":"AidenLYT"},"content":"  Steps 3a1-3a2 are repeated until the data entered are correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":999,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2024-03-01"},{"lineNumber":1000,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1001,"author":{"gitId":"AidenLYT"},"content":"**Use case:** UC2 - Remove a contact\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1002,"author":{"gitId":"AidenLYT"},"content":"**Actor:** User\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1003,"author":{"gitId":"AidenLYT"},"content":"**Person that can play this role:** Student in a lot of committees","lastModifiedDate":"2024-03-01"},{"lineNumber":1004,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1005,"author":{"gitId":"AidenLYT"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":1006,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1007,"author":{"gitId":"AidenLYT"},"content":"1. User type remove contact command","lastModifiedDate":"2024-03-01"},{"lineNumber":1008,"author":{"gitId":"AidenLYT"},"content":"2. LookMeUp prompts for details","lastModifiedDate":"2024-03-01"},{"lineNumber":1009,"author":{"gitId":"AidenLYT"},"content":"3. User enters the requested details","lastModifiedDate":"2024-03-01"},{"lineNumber":1010,"author":{"gitId":"AidenLYT"},"content":"4. LookMeUp requests for confirmation.","lastModifiedDate":"2024-03-01"},{"lineNumber":1011,"author":{"gitId":"AidenLYT"},"content":"5. LookMeUp removes the contact and displays an execution success message.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1012,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":1013,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1014,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1015,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":1016,"author":{"gitId":"AidenLYT"},"content":"* 1a. User typed an invalid command","lastModifiedDate":"2024-03-01"},{"lineNumber":1017,"author":{"gitId":"AidenLYT"},"content":"    * 1a1. LookMeUp displays the error and shows a list of commands it supports.","lastModifiedDate":"2024-03-01"},{"lineNumber":1018,"author":{"gitId":"AidenLYT"},"content":"    * 1a2. User enters the correct command.","lastModifiedDate":"2024-03-01"},{"lineNumber":1019,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1020,"author":{"gitId":"AidenLYT"},"content":"  Steps 1a1-1a2 are repeated until the command entered is correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1021,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":1022,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1023,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1024,"author":{"gitId":"AidenLYT"},"content":"* 3a. LookMeUp detects an error in the entered data.","lastModifiedDate":"2024-03-01"},{"lineNumber":1025,"author":{"gitId":"AidenLYT"},"content":"    * 3a1. LookMeUp displays the error and requests for the correct data.","lastModifiedDate":"2024-03-01"},{"lineNumber":1026,"author":{"gitId":"AidenLYT"},"content":"    * 3a2. User enters the new data.","lastModifiedDate":"2024-03-01"},{"lineNumber":1027,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1028,"author":{"gitId":"AidenLYT"},"content":"  Steps 3a1-3a2 are repeated until the data entered are correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1029,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2024-03-01"},{"lineNumber":1030,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1032,"author":{"gitId":"AidenLYT"},"content":"* 4a. User declines the removal of contact.","lastModifiedDate":"2024-03-01"},{"lineNumber":1033,"author":{"gitId":"AidenLYT"},"content":"    * 4a1, LookMeUp confirms user\u0027s selection.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"      Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1036,"author":{"gitId":"AidenLYT"},"content":"**Use case:** UC3 - Filter contacts by tags\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1037,"author":{"gitId":"AidenLYT"},"content":"**Actor:** User\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1038,"author":{"gitId":"AidenLYT"},"content":"**Person that can play this role:** Student in a lot of committees","lastModifiedDate":"2024-03-01"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"AidenLYT"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"AidenLYT"},"content":"1. User type filter contacts command","lastModifiedDate":"2024-03-01"},{"lineNumber":1043,"author":{"gitId":"AidenLYT"},"content":"2. LookMeUp displays the contact in the database\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1044,"author":{"gitId":"AidenLYT"},"content":"Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"AidenLYT"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":1047,"author":{"gitId":"AidenLYT"},"content":"* 1a. User typed an invalid command","lastModifiedDate":"2024-03-01"},{"lineNumber":1048,"author":{"gitId":"AidenLYT"},"content":"    * 1a1. LookMeUp displays the error and shows a list of commands it supports.","lastModifiedDate":"2024-03-01"},{"lineNumber":1049,"author":{"gitId":"AidenLYT"},"content":"    * 1a2. User enters the correct command.","lastModifiedDate":"2024-03-01"},{"lineNumber":1050,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1051,"author":{"gitId":"AidenLYT"},"content":"  Steps 1a1-1a2 are repeated until the command entered is correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1052,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":1053,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1054,"author":{"gitId":"AidenLYT"},"content":"**Use case:** UC4 - Sort contacts by tags\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1055,"author":{"gitId":"AidenLYT"},"content":"**Actor:** User\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1056,"author":{"gitId":"AidenLYT"},"content":"**Person that can play this role:** Student in a lot of committees","lastModifiedDate":"2024-03-01"},{"lineNumber":1057,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1058,"author":{"gitId":"AidenLYT"},"content":"**MSS**","lastModifiedDate":"2024-03-01"},{"lineNumber":1059,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1060,"author":{"gitId":"AidenLYT"},"content":"1. User type sort contacts command","lastModifiedDate":"2024-03-01"},{"lineNumber":1061,"author":{"gitId":"AidenLYT"},"content":"2. LookMeUp displays the contact in the database\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1062,"author":{"gitId":"AidenLYT"},"content":"Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":1063,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1064,"author":{"gitId":"AidenLYT"},"content":"**Extensions**","lastModifiedDate":"2024-03-01"},{"lineNumber":1065,"author":{"gitId":"AidenLYT"},"content":"* 1a. User typed an invalid command","lastModifiedDate":"2024-03-01"},{"lineNumber":1066,"author":{"gitId":"AidenLYT"},"content":"    * 1a1. LookMeUp displays the error and shows a list of commands it supports.","lastModifiedDate":"2024-03-01"},{"lineNumber":1067,"author":{"gitId":"AidenLYT"},"content":"    * 1a2. User enters the correct command.","lastModifiedDate":"2024-03-01"},{"lineNumber":1068,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":1069,"author":{"gitId":"AidenLYT"},"content":"  Steps 1a1-1a2 are repeated until the command entered is correct.\\","lastModifiedDate":"2024-03-01"},{"lineNumber":1070,"author":{"gitId":"AidenLYT"},"content":"  Use case resumes from step 2.","lastModifiedDate":"2024-03-01"},{"lineNumber":1071,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1072,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1073,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1074,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1075,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":1076,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1077,"author":{"gitId":"RunjiaChen"},"content":"4.  A user should be able to add contacts even if they are not IT-savvy.","lastModifiedDate":"2024-03-07"},{"lineNumber":1078,"author":{"gitId":"RunjiaChen"},"content":"5.  Any operation executed on the app (list, delete, add, etc) should not take more than 10 minutes to process.","lastModifiedDate":"2024-03-07"},{"lineNumber":1079,"author":{"gitId":"RunjiaChen"},"content":"6.  The startup time for the application should not take more than 10 minutes.","lastModifiedDate":"2024-03-07"},{"lineNumber":1080,"author":{"gitId":"RunjiaChen"},"content":"7.  Side pop-up windows should not interfere with the execution of commands in the main window.","lastModifiedDate":"2024-03-07"},{"lineNumber":1081,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1082,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1083,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1084,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1085,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":1087,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":1088,"author":{"gitId":"RunjiaChen"},"content":"* **IT-savvy**: The user is not familiar with the exact format of the add command.","lastModifiedDate":"2024-03-07"},{"lineNumber":1089,"author":{"gitId":"RunjiaChen"},"content":"* **Side pop-up window**: Additional windows that can be opened by the user during usage of the software(e.g. the help window).","lastModifiedDate":"2024-03-07"},{"lineNumber":1090,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":1091,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1092,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1093,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1094,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1095,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1096,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1097,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1098,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1099,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":1100,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":1101,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1103,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":1104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1105,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1107,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1109,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1111,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1113,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1115,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1117,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1118,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1120,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1122,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1124,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":1125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1126,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":1127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1129,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1131,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1132,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":1133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1134,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1135,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1137,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1139,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1141,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1143,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1145,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AidenLYT":238,"RunjiaChen":185,"smolegz":106,"lynnetteeee":158,"-":382,"kervyntan":76}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eMyProduct\u003c/a\u003e","lastModifiedDate":"2024-02-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AidenLYT":1,"-":66}},{"path":"docs/diagrams/AddByStepActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"start","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":":User enters \"addbystep\";","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters name;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"  :process name;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Name is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters number;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"  :process number;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Number is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters email;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"  :process email;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Email is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters address;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"  :process address;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"repeat while (address are valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters tag(s);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"  :process tags(s);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Tag(s) are valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":":User enters a command;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"if(\"Is it the copy command?) then (yes)","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":":copy command to clipboard;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"else (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":":display the end message;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"endif","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"stop","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":32}},{"path":"docs/diagrams/AddByStepSequenceDiagram-AddCommandHelper.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"skinparam SequenceGroupBodyBackgroundColor #FFFFFF90","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"skinparam maxMessageSize 20","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"box AddCommandHelper ADDCOMMANDHELPER_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"participant \":AddCommandHelper\" as AddCommandHelper ADDCOMMANDHELPER_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"[-\u003e AddCommandHelper : getResponse(text)","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"activate AddCommandHelper","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"alt status \u003d complete","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"    AddCommandHelper --\u003e AddCommandHelper:formattedCommand()","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"else","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"    AddCommandHelper --\u003e AddCommandHelper:processInput(text)","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"end","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"[\u003c-- AddCommandHelper : response","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"deactivate AddCommandHelper","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"RunjiaChen":28}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":" \\@startuml","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"smolegz":1,"-":20}},{"path":"docs/diagrams/ExitCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"@startuml","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"start","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":":User enters exit command;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":":       Exit window shows.\\nUser choose whether to exit.;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"if () then(\u003ccolor:red\u003e[yes])","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":":Closes MainWindow \\n    and Exit Window;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"else ([no])","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":":Hides exit window;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"endif","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"stop","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"@enduml","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"smolegz":11}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"participant \"rc:FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"participant \"rs:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"[-\u003e LogicManager : execute(\"filter friends\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filter friends\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"create FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"AddressBookParser -\u003e FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"FilterCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"AddressBookParser -\u003e FilterCommandParser : parse(\"friends\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"activate FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"create FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"FilterCommandParser -\u003e FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"FilterCommand --\u003e FilterCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"FilterCommandParser --\u003e AddressBookParser : rc","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"FilterCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"destroy FilterCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"AddressBookParser --\u003e LogicManager : rc","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"LogicManager -\u003e FilterCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"activate FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"FilterCommand -\u003e Model : updateFilteredPersonList(Person)","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"Model --\u003e FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"kervyntan"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"kervyntan"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"kervyntan"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"kervyntan"},"content":"FilterCommand --\u003e LogicManager : rs","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"kervyntan"},"content":"deactivate FilterCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"kervyntan"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"kervyntan"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"kervyntan"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"kervyntan":69}},{"path":"docs/diagrams/FuzzyInputClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"interface DistanceFunction {","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"  calculateDistance(T, T)","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"interface CommandMatcher {","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"  findClosestMatch(T)","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"class FuzzyCommandParser {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"  +parseCommand()","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"class BkTreeCommandMatcher {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"  -closestDistance:int","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"  +BkTreeCommandMatcher(List\u003cT\u003e)","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"  +getClosestDistance()","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"  -insert(BkTreeNode\u003cT\u003e, T)","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"  -findMatch(BkTreeNode\u003cT\u003e, T)","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"class LevenshteinDistance {","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"class BkTreeNode {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"  -item","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"  -children: Map\u003cInteger, BkTreeNode\u003cT\u003e\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"  +BkTreeNode(T)","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"  +getItem()","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"  +getChildren()","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"CommandMatcher \u003c|--- BkTreeCommandMatcher","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"BkTreeNode \"*\" \u003c--- BkTreeCommandMatcher","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"BkTreeCommandMatcher \u003c--- FuzzyCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"DistanceFunction \u003c|--- LevenshteinDistance","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"LevenshteinDistance \u003c|--- BkTreeCommandMatcher","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"AidenLYT":44}},{"path":"docs/diagrams/FuzzyInputObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"object FuzzyCommandParser","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"object BkTreeCommandMatcher","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"FuzzyCommandParser --\u003e BkTreeCommandMatcher","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"object BkTreeNode","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"object DistanceFunction","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"BkTreeCommandMatcher --\u003e BkTreeNode","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"BkTreeCommandMatcher --\u003e DistanceFunction","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"AidenLYT":12}},{"path":"docs/diagrams/RemoveSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"participant \":RemoveCommandParser\" as RemoveCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"participant \"rc:RemoveCommand\" as RemoveCommand LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"participant \"rs:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"[-\u003e LogicManager : execute(\"remove 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"activate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"remove 1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"create RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"AddressBookParser -\u003e RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"activate RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"AddressBookParser -\u003e RemoveCommandParser : parse(\"1\")","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"activate RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"create RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommandParser -\u003e RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"activate RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommand --\u003e RemoveCommandParser :","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"deactivate RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommandParser --\u003e AddressBookParser : rc","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"lynnetteeee"},"content":"deactivate RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"lynnetteeee"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"lynnetteeee"},"content":"destroy RemoveCommandParser","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":46,"author":{"gitId":"lynnetteeee"},"content":"AddressBookParser --\u003e LogicManager : rc","lastModifiedDate":"2024-03-22"},{"lineNumber":47,"author":{"gitId":"lynnetteeee"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-22"},{"lineNumber":48,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":49,"author":{"gitId":"lynnetteeee"},"content":"LogicManager -\u003e RemoveCommand : execute(m)","lastModifiedDate":"2024-03-22"},{"lineNumber":50,"author":{"gitId":"lynnetteeee"},"content":"activate RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2024-03-22"},{"lineNumber":53,"author":{"gitId":"lynnetteeee"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":55,"author":{"gitId":"lynnetteeee"},"content":"Model --\u003e RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":56,"author":{"gitId":"lynnetteeee"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":58,"author":{"gitId":"lynnetteeee"},"content":"create CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":59,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommand -\u003e CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"activate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":61,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"CommandResult --\u003e RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":63,"author":{"gitId":"lynnetteeee"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":64,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"RemoveCommand --\u003e LogicManager : rs","lastModifiedDate":"2024-03-22"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"deactivate RemoveCommand","lastModifiedDate":"2024-03-22"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":68,"author":{"gitId":"lynnetteeee"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":69,"author":{"gitId":"lynnetteeee"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-22"},{"lineNumber":70,"author":{"gitId":"lynnetteeee"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"lynnetteeee":70}},{"path":"docs/diagrams/SortCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"start","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"if (read user input) then (empty)","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"    #pink:throw ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"    kill","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"else","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"    switch ( condition )","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"    case ( name )","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"        :sortByName;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"    case ( tag )","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"        :sortByTag;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"    case ( unrecognised input )","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"        #pink:throw ParseException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"        kill","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"    endswitch","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":":return sorted contacts in AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"stop","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"AidenLYT":18}},{"path":"docs/diagrams/SortCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"!include style.puml","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"skinparam SequenceGroupBodyBackgroundColor #FFFFFF90","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"box Logic SORTCOMMAND_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"participant \":LogicManager\" as LogicManager SORTCOMMAND_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"participant \":AddressBookParser\" as AddressBookParser SORTCOMMAND_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"participant \"s:SortCommand\" as SortCommand SORTCOMMAND_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"end box","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"end box","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"[-\u003e LogicManager : execute(sort name)","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"activate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(sort name)","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"create SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"AddressBookParser -\u003e SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"activate SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"SortCommand --\u003e AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"deactivate SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"LogicManager -\u003e SortCommand : execute(model)","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"activate SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"SortCommand -\u003e Model","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"Model -\u003e AddressBook : getAddressBook()","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"activate AddressBook","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"AddressBook -\u003e UniquePersonList : getPersons()","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"AidenLYT"},"content":"activate UniquePersonList","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"AidenLYT"},"content":"UniquePersonList -\u003e UniquePersonList : sortListByName()","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"AidenLYT"},"content":"UniquePersonList --\u003e AddressBook","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"AidenLYT"},"content":"deactivate UniquePersonList","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"AidenLYT"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"AidenLYT"},"content":"deactivate AddressBook","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":54,"author":{"gitId":"AidenLYT"},"content":"Model --\u003e SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"AidenLYT"},"content":"deactivate Model","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":57,"author":{"gitId":"AidenLYT"},"content":"SortCommand --\u003e LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"AidenLYT"},"content":"deactivate SortCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":60,"author":{"gitId":"AidenLYT"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"AidenLYT"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"AidenLYT"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"AidenLYT":62}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"Class ExitWindow","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"MainWindow --\u003e \"0..1\" ExitWindow","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"MainWindow -up-|\u003e UiPart","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"ExitWindow -left-|\u003e UiPart","lastModifiedDate":"2024-03-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"smolegz":5,"-":59}},{"path":"docs/diagrams/processAddress.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters address;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"  :process address;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"repeat while (address are valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":8}},{"path":"docs/diagrams/processEmail.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters email;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"  :process email;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Email is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":10}},{"path":"docs/diagrams/processName.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters name;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"  :process name;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Name is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":9}},{"path":"docs/diagrams/processNumber.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters number;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"  :process number;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Number is valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":8}},{"path":"docs/diagrams/processTag.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"repeat :User enters tag(s);","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"  :process tags(s);","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"repeat while (Tag(s) are valid?) is (no)","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"RunjiaChen":8}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"!define ADDCOMMANDHELPER_COLOR #00FFFF","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"!define ADDCOMMANDHELPER_COLOR_T1 #00BFBF","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"!define SORTCOMMAND_COLOR #0048ba","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"!define SORTCOMMAND_COLOR_T1 #71a6d2","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"AidenLYT":3,"RunjiaChen":3,"-":79}},{"path":"docs/team/AidenLYT.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"  layout: default.md","lastModifiedDate":"2024-02-29"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"  title: \"Aiden Lee Ygit uan Ting\u0027s Project Portfolio Page\"","lastModifiedDate":"2024-02-29"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"---","lastModifiedDate":"2024-02-29"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"### Project: LookMeUp","lastModifiedDate":"2024-02-29"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"LookMeUp is a desktop address book application targeted for NUS students who stay on campus.","lastModifiedDate":"2024-02-29"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"Given how students who stay on campus find themselves in many different committees and interest groups, LookMeUp seeks to provide features that allows them to compartmentalise their contacts and access various groups easily.","lastModifiedDate":"2024-02-29"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"LookMeUp also keeps track of the location and details of upcoming meetings specific to each contact, knowing when and who to make calls with.","lastModifiedDate":"2024-02-29"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2024-02-29"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"* **New Feature**:","lastModifiedDate":"2024-02-29"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"  * What it does:","lastModifiedDate":"2024-02-29"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"  * Justification:","lastModifiedDate":"2024-02-29"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"  * Highlights:","lastModifiedDate":"2024-02-29"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2024-02-29"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"* **New Feature**:","lastModifiedDate":"2024-02-29"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2024-02-29"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"* **Project management**:","lastModifiedDate":"2024-02-29"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"  * Set up the project repo","lastModifiedDate":"2024-02-29"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"    * Set up team organisation","lastModifiedDate":"2024-02-29"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"    * Set up the team repository","lastModifiedDate":"2024-02-29"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"  * Created issues [\\#1, #7,8,9,11-17](https://github.com/AY2324S2-CS2103T-T12-2/tp/issues)","lastModifiedDate":"2024-02-29"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"    * Created milestones [\\v1.1 and v1.2](https://github.com/AY2324S2-CS2103T-T12-2/tp/milestones)","lastModifiedDate":"2024-02-29"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"    and allocate issues to the respective milestone","lastModifiedDate":"2024-02-29"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"    * Assigned members to work on the respective issues","lastModifiedDate":"2024-02-29"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2024-02-29"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"* **Documentation**:","lastModifiedDate":"2024-02-29"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"  * User Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"  * Developer Guide:","lastModifiedDate":"2024-02-29"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"* **Community**:","lastModifiedDate":"2024-02-29"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2024-02-29"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2024-02-29"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2024-02-29"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2024-02-29"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":45,"author":{"gitId":"AidenLYT"},"content":"* **Tools**:","lastModifiedDate":"2024-02-29"},{"lineNumber":46,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-02-29"}],"authorContributionMap":{"AidenLYT":46}},{"path":"docs/team/ChenRunjia.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"# Hi! I\u0027m Runjia (@RunjiaChen)","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"## Some background info","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"I\u0027m a Year 1 Computer Science student at NUS. I\u0027m interested in algorithms","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"## Some fun facts","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"I\u0027m too lazy to watch movies, so I go to wikipedia and read the plot instead","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"RunjiaChen":7}},{"path":"docs/team/KervynTanJiawei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"# Kervyn Tan Jiawei","lastModifiedDate":"2024-03-08"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"## About Me","lastModifiedDate":"2024-03-08"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"Y2 Computer Science student passionate in the world of Web Development!","lastModifiedDate":"2024-03-08"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"Like to read books on programming/new topics as well as cycling on the weekends","lastModifiedDate":"2024-03-08"}],"authorContributionMap":{"kervyntan":7}},{"path":"docs/team/OngXinHuiLynnette.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"# Hi! I\u0027m Lynnette (@lynnetteeee) :D","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"## Some background info","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"I\u0027m a Year 2 Computer Science student at NUS. I\u0027m interested in cybersecurity and I recently started","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"taking part in Capture-The-Flag (CTF) competitions.","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"## Some fun facts","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"I love to discover good food places, and I\u0027m always on the lookout for new cafes too!","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"I also enjoy travelling and exploring new places.","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"lynnetteeee":9}},{"path":"docs/team/ZhuoHui.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"# Koo Zhuo Hui","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"## About Myself","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"I am a Year 2 Computer Science student! My favourite food includes","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"Mala,pasta and bubbletea!","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"smolegz":6}},{"path":"src/main/java/seedu/address/AddCommandHelper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.person.FormattedCommandPerson;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.ui.Status;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":" * A helper class that prompts the user to enter certain fields","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":" * and displays the final command in the specified format","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":" * so the user can copy over to addressbook.","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"public class AddCommandHelper {","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"    private static final String SUCCESS_MESSAGE \u003d \"You have successfully entered \";","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"    private static final String NEXT_PROMPT \u003d \". Next, please enter \";","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"    private static final String COMPLETE_COMMAND_MESSAGE \u003d \"You have entered all the fields! \"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"            + \"Please enter \\\"cp\\\" to copy the command to your clipboard.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"    private static final String EXIT_MESSAGE \u003d \"Thank you for using AddByStep!\";","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"    private static final String COPY_SUCCESSS_MESSAGE \u003d \"You have copied the command to your clipboard!\"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"            + \"Type \\\"cp\\\" if you wish to copy again. You may close the window to go back to LookMeUp\";","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"    private static final String COPY_COMMAND \u003d \"cp\";","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"    private Status status;","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"RunjiaChen"},"content":"    private Name name;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"RunjiaChen"},"content":"    private Number number;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"RunjiaChen"},"content":"    private Email email;","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"RunjiaChen"},"content":"    private Address address;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"RunjiaChen"},"content":"    private Phone phone;","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"RunjiaChen"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":50,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"RunjiaChen"},"content":"     * Creates a new instance of AddCommandHelper","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"RunjiaChen"},"content":"    public AddCommandHelper() {","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"RunjiaChen"},"content":"        this.status \u003d Status.GET_NAME;","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"RunjiaChen"},"content":"        this.tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":57,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"RunjiaChen"},"content":"     * Takes the input of the user and provides a reply based on the input","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"RunjiaChen"},"content":"     * @param text full user input string","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"RunjiaChen"},"content":"     * @return the string representing the result of processing the user\u0027s input","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"RunjiaChen"},"content":"     * @throws ParseException if the information the user entered is invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"RunjiaChen"},"content":"    public String getResponse(String text) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"RunjiaChen"},"content":"        return processInput(text);","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"RunjiaChen"},"content":"     * Processes the input of the user and prompts the user when necessary","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"RunjiaChen"},"content":"     * for more information.","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"RunjiaChen"},"content":"     * @param input full user input string","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"RunjiaChen"},"content":"     * @return the string representing the result of processing the user\u0027s input","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"RunjiaChen"},"content":"     * @throws ParseException if the input entered by the user is invalid.","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"RunjiaChen"},"content":"    private String processInput(String input) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"RunjiaChen"},"content":"        Status oldStatus \u003d this.status;","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"RunjiaChen"},"content":"        switch (this.status) {","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NAME:","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"RunjiaChen"},"content":"            processName(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NUMBER:","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"RunjiaChen"},"content":"            processNumber(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"RunjiaChen"},"content":"        case GET_EMAIL:","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"RunjiaChen"},"content":"            processEmail(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"RunjiaChen"},"content":"        case GET_ADDRESS:","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"RunjiaChen"},"content":"            processAddress(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"RunjiaChen"},"content":"        case GET_TAG:","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"RunjiaChen"},"content":"            processTag(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"RunjiaChen"},"content":"        case COMPLETE:","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"RunjiaChen"},"content":"            processCommand(input);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"RunjiaChen"},"content":"        case COPY:","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"RunjiaChen"},"content":"        default:","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"RunjiaChen"},"content":"            assert false : \"The status should only be those values\";","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"RunjiaChen"},"content":"        String output \u003d getSuccessMessage(oldStatus, status);","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":105,"author":{"gitId":"RunjiaChen"},"content":"        return output;","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":108,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"RunjiaChen"},"content":"     * Sets the status of the CommandHelper to choose the right","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"RunjiaChen"},"content":"     * type of validity checks based on the information the user is trying","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"RunjiaChen"},"content":"     * to enter.","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"RunjiaChen"},"content":"     * @param status the current type of information the user is trying to enter.","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"RunjiaChen"},"content":"    private void setStatus(Status status) {","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"RunjiaChen"},"content":"        switch (this.status) {","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NAME:","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.GET_NUMBER;","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NUMBER:","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.GET_EMAIL;","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"RunjiaChen"},"content":"        case GET_EMAIL:","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.GET_ADDRESS;","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"RunjiaChen"},"content":"        case GET_ADDRESS:","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.GET_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"RunjiaChen"},"content":"        case GET_TAG:","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.COMPLETE;","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"RunjiaChen"},"content":"        case COMPLETE:","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"RunjiaChen"},"content":"            this.status \u003d Status.COPY;","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"RunjiaChen"},"content":"        case COPY:","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"RunjiaChen"},"content":"        default:","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"RunjiaChen"},"content":"            assert false : \"The status should only be those values\";","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":141,"author":{"gitId":"RunjiaChen"},"content":"    private void processName(String name) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"RunjiaChen"},"content":"        Name processedName \u003d ParserUtil.parseName(name);","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"RunjiaChen"},"content":"        this.name \u003d processedName;","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"RunjiaChen"},"content":"        setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"RunjiaChen"},"content":"    private void processNumber(String num) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"RunjiaChen"},"content":"        Phone processedNum \u003d ParserUtil.parsePhone(num);","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"RunjiaChen"},"content":"        this.phone \u003d processedNum;","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"RunjiaChen"},"content":"        setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":153,"author":{"gitId":"RunjiaChen"},"content":"    private void processEmail(String email) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"RunjiaChen"},"content":"        Email processedEmail \u003d ParserUtil.parseEmail(email);","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"RunjiaChen"},"content":"        this.email \u003d processedEmail;","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"RunjiaChen"},"content":"        setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":158,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":159,"author":{"gitId":"RunjiaChen"},"content":"    private void processAddress(String address) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"RunjiaChen"},"content":"        Address processedAddress \u003d ParserUtil.parseAddress(address);","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"RunjiaChen"},"content":"        this.address \u003d processedAddress;","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"RunjiaChen"},"content":"        setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"RunjiaChen"},"content":"    private void processTag(String tag) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"RunjiaChen"},"content":"        String processedTag \u003d tag.trim();","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"RunjiaChen"},"content":"        if (processedTag.length() \u003e 0) {","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"RunjiaChen"},"content":"            Tag t \u003d ParserUtil.parseTag(tag);","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"RunjiaChen"},"content":"            this.tags.add(t);","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"RunjiaChen"},"content":"        setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"RunjiaChen"},"content":"    private void processCommand(String cmd) {","lastModifiedDate":"2024-03-26"},{"lineNumber":175,"author":{"gitId":"RunjiaChen"},"content":"        if (cmd.equals(COPY_COMMAND)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"RunjiaChen"},"content":"            copyCommand();","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"RunjiaChen"},"content":"            setStatus(this.status);","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":180,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"RunjiaChen"},"content":"    private String formattedCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"smolegz"},"content":"        assert this.status \u003d\u003d Status.COMPLETE : \"Command should have been compeleted before this function is called.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":183,"author":{"gitId":"RunjiaChen"},"content":"        FormattedCommandPerson p \u003d new FormattedCommandPerson(name, phone, email, address, tags);","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"RunjiaChen"},"content":"        return \"add \" + p.getFormattedCommand();","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"RunjiaChen"},"content":"    private boolean isExitCommand(String cmd) {","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"RunjiaChen"},"content":"        return cmd.equals(\"exit\");","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":190,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"RunjiaChen"},"content":"    private String getSuccessMessage(Status oldStatus, Status newStatus) {","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"RunjiaChen"},"content":"        if (newStatus.equals(Status.COPY)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"RunjiaChen"},"content":"            return COPY_SUCCESSS_MESSAGE;","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"RunjiaChen"},"content":"        } else if (newStatus.equals(Status.COMPLETE)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":195,"author":{"gitId":"RunjiaChen"},"content":"            return COMPLETE_COMMAND_MESSAGE;","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"RunjiaChen"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"RunjiaChen"},"content":"            return SUCCESS_MESSAGE + oldStatus + NEXT_PROMPT + newStatus;","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":199,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"RunjiaChen"},"content":"    private void copyCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":203,"author":{"gitId":"RunjiaChen"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"RunjiaChen"},"content":"        final ClipboardContent command \u003d new ClipboardContent();","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"RunjiaChen"},"content":"        assert this.status.equals(Status.COMPLETE) : \"Command must be completed before \"","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"RunjiaChen"},"content":"                + \"it is copied.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"RunjiaChen"},"content":"        command.putString(formattedCommand());","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"RunjiaChen"},"content":"        clipboard.setContent(command);","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":210,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"RunjiaChen":210,"smolegz":1}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lynnetteeee":1,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/AddByStepCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":" * Opens a new window to allow the user","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":" * to key in the details of the contact one by one.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"public class AddByStepCommand extends Command {","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"    public static final String COMMAND_WORD \u003d \"addbystep\";","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"addbystep\";","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"    @Override","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"RunjiaChen":19}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"ERROR! A person with the same name has been found in your \"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"            + \"address book. \\nPlease replace the command word \u0027add\u0027 with your choice (overwrite or duplicate)\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"            + \"*If your choice is to overwrite, include the index which the existing user is stored.\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"            + \"eg. overwrite 1 \u003cremainingCommand\u003e\";","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lynnetteeee":1,"-":82,"kervyntan":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lynnetteeee":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"    /** The application is undergoing addByStep process. */","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"    private final boolean isAddByStep;","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"        this.isAddByStep \u003d false;","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean isAddByStep) {","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"RunjiaChen"},"content":"        this.isAddByStep \u003d isAddByStep;","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"RunjiaChen"},"content":"    public boolean isAddByStep() {","lastModifiedDate":"2024-03-07"},{"lineNumber":66,"author":{"gitId":"RunjiaChen"},"content":"        return isAddByStep;","lastModifiedDate":"2024-03-07"},{"lineNumber":67,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":68,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"showHelp\", showHelp)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                .add(\"exit\", exit)","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RunjiaChen":18,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":" * Copies the fields of a person based on the provided index.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully copied!\";","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Copies the information of a contact.\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"            + \"copy INDEX name/contact/address/email\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"            + \"Example: copy 1 name email\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            + \"INDEX should be a positive integer\";","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"    private final List\u003cString\u003e fieldsToCopyList;","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"     * Creates a CopyCommand to copy a person\u0027s fields based on provided {@code Index}.","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"     * @param fieldsToCopyList Fields to copy.","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"    public CopyCommand(Index targetIndex, List\u003cString\u003e fieldsToCopyList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"        requireNonNull(targetIndex);","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"        this.fieldsToCopyList \u003d fieldsToCopyList.stream()","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"                                  .distinct()","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"                                  .collect(Collectors.toList());","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"        Person person \u003d model.getPerson(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"        StringBuilder result \u003d getInfo(person);","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"        StringSelection toCopyString \u003d new StringSelection(result.toString().trim());","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"        clipboard.setContents(toCopyString, null);","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false);","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"    private StringBuilder getInfo(Person person) {","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"        StringBuilder result \u003d new StringBuilder();","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"        for (String field : fieldsToCopyList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"            if (field.equals(\"name\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"                Name name \u003d person.getName();","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"                result.append(name).append(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"            if (field.equals(\"phone\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"                Phone phone \u003d person.getPhone();","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"                result.append(phone).append(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"            if (field.equals(\"email\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"                Email email \u003d person.getEmail();","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"                result.append(email).append(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"            if (field.equals(\"address\")) {","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"                Address address \u003d person.getAddress();","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"                result.append(address).append(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"        return result;","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"smolegz":85}},{"path":"src/main/java/seedu/address/logic/commands/DuplicateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":" * Adds a duplicate identity i.e. person to the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"public class DuplicateCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"    public static final String COMMAND_WORD \u003d \"duplicate\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"    private static final String MESSAGE_NO_EXISTING_PERSON \u003d \"The person you provided does not exist in your \"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"            + \"address book. Please try again with another person.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"    private final Person toAdd;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"     * Creates an DuplicateCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"    public DuplicateCommand(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"        toAdd \u003d person;","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"        if (!model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"            throw new CommandException(MESSAGE_NO_EXISTING_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"kervyntan"},"content":"        model.addDuplicatePerson(toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"kervyntan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"kervyntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"kervyntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"kervyntan"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"kervyntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"kervyntan"},"content":"        if (!(other instanceof DuplicateCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"kervyntan"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"kervyntan"},"content":"        DuplicateCommand otherDuplicateCommand \u003d (DuplicateCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"kervyntan"},"content":"        return toAdd.equals(otherDuplicateCommand.toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"kervyntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"kervyntan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"kervyntan"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"kervyntan"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"lynnetteeee":1,"kervyntan":83}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2024-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"lynnetteeee":1,"-":242}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Displaying exit window ...\";","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"smolegz":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":" * Lists all persons in the address book with the matching filtered tags","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters and returns\"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"            + \" all persons whose tags contain any of \"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"            + \"Example: \" + COMMAND_WORD + \" colleagues friends\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Filtered and returned persons\";","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"    public FilterCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"        if (!(other instanceof FilterCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"        FilterCommand otherFilterCommand \u003d (FilterCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"        return predicate.equals(otherFilterCommand.predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kervyntan":58}},{"path":"src/main/java/seedu/address/logic/commands/OverwriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":" * Overwrites an existing identity i.e. person to the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"public class OverwriteCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"    public static final String COMMAND_WORD \u003d \"overwrite\";","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Existing person overwritten: %1$s\";","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"    private static final String MESSAGE_NO_EXISTING_PERSON \u003d \"The person you provided does not exist in your \"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"            + \"address book. Please try again with another person.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"    private final Person toAdd;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"    private int indexOfTarget;","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"     * Creates an OverwriteCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"    public OverwriteCommand(Person person, int indexOfTarget) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"        toAdd \u003d person;","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"        this.indexOfTarget \u003d indexOfTarget;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"kervyntan"},"content":"        if (!model.hasPerson(toAdd)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"kervyntan"},"content":"            throw new CommandException(MESSAGE_NO_EXISTING_PERSON);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"kervyntan"},"content":"        Person target \u003d model.getPerson(this.indexOfTarget - 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"kervyntan"},"content":"        model.setDuplicatePerson(target, toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"        // KIV - as current feature doesn\u0027t work as expected","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"        // potentially need to adjust placement of model.commitAddressBook()","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"kervyntan"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"kervyntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"kervyntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"kervyntan"},"content":"            return true;","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"kervyntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"kervyntan"},"content":"        if (!(other instanceof OverwriteCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"kervyntan"},"content":"            return false;","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"kervyntan"},"content":"        OverwriteCommand otherOverwriteCommand \u003d (OverwriteCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"kervyntan"},"content":"        return toAdd.equals(otherOverwriteCommand.toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"kervyntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"kervyntan"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"kervyntan"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"kervyntan"},"content":"                .toString();","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"lynnetteeee":3,"kervyntan":88}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":" * Redoes the most recent undo command.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redid the most recent command\";","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There is no command to redo\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"        model.redoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"lynnetteeee":26}},{"path":"src/main/java/seedu/address/logic/commands/RemoveAbortion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":" * Aborts the removal of a contact after user has been prompted for confirmation.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"public class RemoveAbortion extends RemoveConfirmation {","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"    public static final String COMMAND_WORD \u003d \"no\";","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_REMOVE_PERSON_ABORTED \u003d \"Removal of contact aborted.\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"            + \"Here is the list of existing contacts!\";","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"        if (!isValidConfirmation(model)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(MESSAGE_INVALID_DECISION_MAKING);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"        return new CommandResult(MESSAGE_REMOVE_PERSON_ABORTED);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lynnetteeee":27}},{"path":"src/main/java/seedu/address/logic/commands/RemoveCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":" * Removes a contact identified based on matching name and further confirmation of removal with index.","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"public class RemoveCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"    public static final String COMMAND_WORD \u003d \"remove\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"            + \": Remove the person identified by the matching name or index in the contacts list.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"            + \"Parameters: EXISTING_CONTACT_NAME\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"            + \"Example: \" + COMMAND_WORD + \" John Doe\";","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_PERSONS_TO_REMOVE_NOT_FOUND \u003d \"No contacts found with the given name!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_PERSONS_TO_REMOVE_FOUND \u003d \"%1$d contact(s) found with the given name. \"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"            + \"Please specify the index of the contact to remove.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"    private static final String CONFIRMATION_MESSAGE_PROMPT \u003d \"Are you sure you want to remove this entry? (yes/no): \";","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"lynnetteeee"},"content":"     * Constructs the first RemoveCommand with the given predicate.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lynnetteeee"},"content":"     * @param predicate Keyword to filter out the contacts that match the given name, for safe deletion.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"lynnetteeee"},"content":"    public RemoveCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"lynnetteeee"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"lynnetteeee"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"lynnetteeee"},"content":"     * Constructs the second RemoveCommand with the given index of the contact.","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lynnetteeee"},"content":"     * @param targetIndex Index of the contact to be removed.","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"lynnetteeee"},"content":"    public RemoveCommand(Index targetIndex) {","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"lynnetteeee"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"lynnetteeee"},"content":"        this.predicate \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"     * Executes the RemoveCommand, ensuring safe removal of contacts, preventing accidental deletions.","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lynnetteeee"},"content":"     * @return A command result reflecting the type of RemoveCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lynnetteeee"},"content":"     * @throws CommandException If the command cannot be executed.","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"lynnetteeee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"lynnetteeee"},"content":"        if (isFirstConstructor()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lynnetteeee"},"content":"            return firstExecuteHelper(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lynnetteeee"},"content":"        } else if (isSecondConstructor()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lynnetteeee"},"content":"            return secondExecuteHelper(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lynnetteeee"},"content":"     * Checks if the first RemoveCommand constructor is used.","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isFirstConstructor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"lynnetteeee"},"content":"        return predicate !\u003d null \u0026\u0026 targetIndex \u003d\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lynnetteeee"},"content":"     * Executes the first part of the RemoveCommand function.","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lynnetteeee"},"content":"     * Returns a CommandResult that shortlists the matching contacts for safe removal.","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lynnetteeee"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"lynnetteeee"},"content":"     * @return A command result reflecting the first type of RemoveCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"lynnetteeee"},"content":"     * @throws CommandException If there are no matching contacts found.","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult firstExecuteHelper(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"lynnetteeee"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"lynnetteeee"},"content":"        if (model.getFilteredPersonList().size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(MESSAGE_PERSONS_TO_REMOVE_NOT_FOUND);","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"lynnetteeee"},"content":"            return new CommandResult(","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"lynnetteeee"},"content":"                    String.format(MESSAGE_PERSONS_TO_REMOVE_FOUND, model.getFilteredPersonList().size()));","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"lynnetteeee"},"content":"     * Checks if the second RemoveCommand constructor is used.","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isSecondConstructor() {","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"lynnetteeee"},"content":"        return targetIndex !\u003d null \u0026\u0026 predicate \u003d\u003d null;","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lynnetteeee"},"content":"     * Executes the second part of the RemoveCommand function.","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lynnetteeee"},"content":"     * Returns a CommandResult that seeks confirmation for the contact to remove.","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"lynnetteeee"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"lynnetteeee"},"content":"     * @return A command result reflecting the second type of RemoveCommand.","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"lynnetteeee"},"content":"     * @throws CommandException If the index is invalid for removal.","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult secondExecuteHelper(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"lynnetteeee"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"lynnetteeee"},"content":"        if (!isValidRemovalIndex(targetIndex, lastShownList)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"lynnetteeee"},"content":"        model.updateSinglePersonList(getPerson(targetIndex, lastShownList));","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"lynnetteeee"},"content":"        return new CommandResult(CONFIRMATION_MESSAGE_PROMPT);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"lynnetteeee"},"content":"     * Checks if the index is valid for removal.","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"lynnetteeee"},"content":"    private boolean isValidRemovalIndex(Index targetIndex, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"lynnetteeee"},"content":"        return (targetIndex.getZeroBased() \u003c lastShownList.size()) \u0026\u0026 (targetIndex.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"lynnetteeee"},"content":"     * Retrieves the person to be removed based on the index.","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"lynnetteeee"},"content":"    private Person getPerson(Index targetIndex, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"lynnetteeee"},"content":"        return lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"lynnetteeee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"lynnetteeee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"lynnetteeee"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"lynnetteeee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"lynnetteeee"},"content":"        if (!(other instanceof RemoveCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"lynnetteeee"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"lynnetteeee"},"content":"        RemoveCommand otherRemoveCommand \u003d (RemoveCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"lynnetteeee"},"content":"        if (predicate !\u003d null \u0026\u0026 targetIndex \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"lynnetteeee"},"content":"            return predicate.equals(otherRemoveCommand.predicate);","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"lynnetteeee"},"content":"            assert targetIndex !\u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"lynnetteeee"},"content":"            return targetIndex.equals(otherRemoveCommand.targetIndex);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"lynnetteeee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"lynnetteeee"},"content":"        if (predicate !\u003d null \u0026\u0026 targetIndex \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"lynnetteeee"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"lynnetteeee"},"content":"                    .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"lynnetteeee"},"content":"                    .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"lynnetteeee"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"lynnetteeee"},"content":"                    .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"lynnetteeee"},"content":"                    .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"lynnetteeee":175}},{"path":"src/main/java/seedu/address/logic/commands/RemoveConfirmation.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.parser.RemoveCommandParser;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.ui.CommandBox;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":" * Prompts user confirmation upon remove to ensure safe deletion.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"public abstract class RemoveConfirmation extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"    protected static final String MESSAGE_INVALID_DECISION_MAKING \u003d \"\u0027yes\u0027 or \u0027no\u0027 is only used for decision making!\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"            + \"Please only use these two commands when prompted by the system during contact removal!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"     * Parser object to parse the previous command to verify if it is a remove command.","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"    private final RemoveCommandParser removeParser \u003d new RemoveCommandParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"     * Checks if this confirmation command is valid, specifically used in the context of confirming a contact removal.","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"     * @return True if the previous command is a remove command and has an index argument.","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isValidConfirmation(Model model) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"        String previousCommand \u003d CommandBox.getPreviousCommand().trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"        logger.info(\"Previous command: \" + previousCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"        return removeParser.isRemoveCommand(previousCommand)","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"                \u0026\u0026 removeParser.isValidRemoveIndexCommand(previousCommand, model);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lynnetteeee":39}},{"path":"src/main/java/seedu/address/logic/commands/RemoveSuccess.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":" * Performs the actual deletion of contact after user has been prompted for confirmation.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"public class RemoveSuccess extends RemoveConfirmation {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"    public static final String COMMAND_WORD \u003d \"yes\";","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_REMOVE_PERSON_SUCCESS \u003d \"Successfully Removed Contact: %1$s\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"            + \"Here is the updated list of contacts!\";","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"    private static final int DEFAULT_INDEX \u003d 0;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"        if (!isValidConfirmation(model)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(MESSAGE_INVALID_DECISION_MAKING);","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"        Person personToRemove \u003d model.getFilteredPersonList().get(DEFAULT_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"        model.deletePerson(personToRemove);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"        return new CommandResult(successMessage(personToRemove));","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"     * Returns the success message for the removal of the contact.","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"     * @param personToRemove Contact to be removed.","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"     * @return Success message for the removal of the contact.","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lynnetteeee"},"content":"    public String successMessage(Person personToRemove) {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"lynnetteeee"},"content":"        return String.format(MESSAGE_REMOVE_PERSON_SUCCESS, Messages.format(personToRemove));","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"lynnetteeee":44}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":" * Undoes the most recent command that modifies the contact list.","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undid the most recent command!\\n\"","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"            + \"You may view the previous contact list now :)\";","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"    public static final String MESSAGE_FAILURE \u003d \"There is no command to undo.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"        model.undoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"lynnetteeee":27}},{"path":"src/main/java/seedu/address/logic/commands/sortfunctions/SortByName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.commands.sortfunctions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" * Sorting strategy to sort address book by name in lexicographically order","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"public class SortByName implements SortStrategy {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"    public void sort(AddressBook addressBook) {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"        addressBook.getPersons().sortListByName();","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"    public String getCategory() {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"        return \"name\";","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"AidenLYT":18}},{"path":"src/main/java/seedu/address/logic/commands/sortfunctions/SortByTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.commands.sortfunctions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" * Sorting strategy to sort address book by tag in lexicographically order","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"public class SortByTag implements SortStrategy {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"    public void sort(AddressBook addressBook) {","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"        addressBook.getPersons().sortListByTag();","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"    public String getCategory() {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"        return \"tag\";","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"AidenLYT":18}},{"path":"src/main/java/seedu/address/logic/commands/sortfunctions/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.commands.sortfunctions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":" * Sorts contacts in address book accordingly to [Keyword]","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":" * [Keyword] : tag/name","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \" [KEYWORDS]\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"            + \"KEYWORDS: tag/name\";","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"    private final SortStrategy sortStrategy;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"     * Get the keyword to know which field to sort by","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"     * @param input keyword","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"    public SortCommand(String input) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"        String category \u003d input.trim().toLowerCase();","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"        if (category.isBlank()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"        switch (category) {","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"        case \"tag\":","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"            this.sortStrategy \u003d new SortByTag();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"        case \"name\":","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"            this.sortStrategy \u003d new SortByName();","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"            break;","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"        default:","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"            throw new ParseException(\"Invalid [KEYWORD]\\n\" + \"Keywords supported: NAME/TAG\");","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"AidenLYT"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"AidenLYT"},"content":"        sortStrategy.sort(model.getAddressBook());","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"AidenLYT"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"        model.commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"AidenLYT"},"content":"        return new CommandResult(\"Sorted address book by: \" + sortStrategy.getCategory());","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"AidenLYT":53,"lynnetteeee":1}},{"path":"src/main/java/seedu/address/logic/commands/sortfunctions/SortStrategy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.commands.sortfunctions;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" * Interface representing sorting strategy for the address book","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":" * Different implementations of this interface can be used to sort based on different criteria","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"public interface SortStrategy {","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"     * Sorts address book according to the specific condition","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"     * @param addressBook Address book containing all people added","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"     * @throws CommandException If an error occurs while sorting","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"    void sort(AddressBook addressBook) throws CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"     * Gets the category associated with this sorting strategy","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"     * @return The category for sorting","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"    String getCategory();","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"AidenLYT":23}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2023-07-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2024-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"    protected static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":60,"kervyntan":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.logic.commands.AddByStepCommand;","lastModifiedDate":"2024-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.DuplicateCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.OverwriteCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.RemoveAbortion;","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.RemoveSuccess;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.sortfunctions.SortCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.parser.fuzzy.FuzzyCommandParser;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"AidenLYT"},"content":"        /*","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"AidenLYT"},"content":"         */","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"AidenLYT"},"content":"        final String commandWord \u003d FuzzyCommandParser.parseCommand(matcher.group(\"commandWord\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"lynnetteeee"},"content":"        case RemoveCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"lynnetteeee"},"content":"            return new RemoveCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"lynnetteeee"},"content":"        case RemoveSuccess.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"lynnetteeee"},"content":"            return new RemoveSuccess();","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"lynnetteeee"},"content":"        case RemoveAbortion.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lynnetteeee"},"content":"            return new RemoveAbortion();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lynnetteeee"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"lynnetteeee"},"content":"            return new RedoCommand();","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"lynnetteeee"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"lynnetteeee"},"content":"            return new UndoCommand();","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":110,"author":{"gitId":"AidenLYT"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"AidenLYT"},"content":"            return new SortCommand(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"RunjiaChen"},"content":"        case AddByStepCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-07"},{"lineNumber":114,"author":{"gitId":"RunjiaChen"},"content":"            return new AddByStepCommand();","lastModifiedDate":"2024-03-07"},{"lineNumber":115,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"kervyntan"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"kervyntan"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"kervyntan"},"content":"        case DuplicateCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"kervyntan"},"content":"            return new DuplicateCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"kervyntan"},"content":"        case OverwriteCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"kervyntan"},"content":"            return new OverwriteCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"smolegz"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"smolegz"},"content":"            return new CopyCommandParser().parse(arguments);","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AidenLYT":10,"RunjiaChen":4,"smolegz":4,"lynnetteeee":19,"-":86,"kervyntan":11}},{"path":"src/main/java/seedu/address/logic/parser/CopyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":" * Parses input arguments and creates a new CopyCommand object","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"public class CopyCommandParser implements Parser\u003cCopyCommand\u003e {","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"     * Parses the given {@code String} of arguments in the context of the CopyCommand","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"     * and returns a CopyCommand object for execution.","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    public CopyCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"        String[] argsList \u003d args.trim().split(\" \");","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"        Index index \u003d ParserUtil.parseIndex(argsList[0]);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"        String[] toCopyList \u003d Arrays.copyOfRange(argsList, 1, argsList.length);","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"        List\u003cString\u003e fieldsList \u003d Arrays.asList(toCopyList);","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"        ParserUtil.parseFieldsToCopy(fieldsList);","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"        return new CopyCommand(index, fieldsList);","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"smolegz":32}},{"path":"src/main/java/seedu/address/logic/parser/DuplicateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.AddCommandParser.arePrefixesPresent;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.DuplicateCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":" * Parses input arguments and creates a new DuplicateCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"public class DuplicateCommandParser implements Parser\u003cDuplicateCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"     * Parses the given {@code String} of arguments in the context of the DuplicateCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"     * and returns an DuplicateCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"    public DuplicateCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DuplicateCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"        return new DuplicateCommand(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"kervyntan":53}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"public class FilterCommandParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"     * and returns an FilterCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"        String[] tagKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"        return new FilterCommand(new TagContainsKeywordsPredicate(Arrays.asList(tagKeywords)));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kervyntan":33}},{"path":"src/main/java/seedu/address/logic/parser/OverwriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.AddCommandParser.arePrefixesPresent;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.commands.OverwriteCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":" * Parses input arguments and creates a new OverwriteCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"public class OverwriteCommandParser implements Parser\u003cOverwriteCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"     * Parses the given {@code String} of arguments in the context of the OverwriteCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"     * and returns an OverwriteCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"    public OverwriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"        int indexOfFirstPrefix \u003d args.indexOf(\u0027n\u0027) - 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"        int indexOfTarget \u003d Integer.parseInt(args.substring(1, indexOfFirstPrefix));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"                ArgumentTokenizer.tokenize(args.substring(indexOfFirstPrefix), PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, OverwriteCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"kervyntan"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"kervyntan"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"kervyntan"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"kervyntan"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"        return new OverwriteCommand(person, indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"kervyntan":58}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    public static final String MESSAGE_INVALID_FIELDS \u003d \"Field(s) is not recognised.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"smolegz"},"content":"     * Parse list of fields provided.","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"smolegz"},"content":"     * @param fieldsList List of fields of {@code Person}.","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"smolegz"},"content":"     * @throws ParseException if invalid fields detected.","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"smolegz"},"content":"    public static void parseFieldsToCopy(List\u003cString\u003e fieldsList) throws ParseException {","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"smolegz"},"content":"        List\u003cString\u003e acceptableFields \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"smolegz"},"content":"        acceptableFields.add(\"name\");","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"smolegz"},"content":"        acceptableFields.add(\"phone\");","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"smolegz"},"content":"        acceptableFields.add(\"email\");","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"smolegz"},"content":"        acceptableFields.add(\"address\");","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"smolegz"},"content":"        if (fieldsList.isEmpty()) {","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"smolegz"},"content":"            throw new ParseException(MESSAGE_INVALID_FIELDS);","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"smolegz"},"content":"        for (String field : fieldsList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":143,"author":{"gitId":"smolegz"},"content":"            boolean inAcceptableFieldsList \u003d acceptableFields.contains(field.toLowerCase());","lastModifiedDate":"2024-03-31"},{"lineNumber":144,"author":{"gitId":"smolegz"},"content":"            if (!inAcceptableFieldsList) {","lastModifiedDate":"2024-03-31"},{"lineNumber":145,"author":{"gitId":"smolegz"},"content":"                throw new ParseException(MESSAGE_INVALID_FIELDS);","lastModifiedDate":"2024-03-31"},{"lineNumber":146,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-31"},{"lineNumber":147,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":148,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"smolegz":25,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RemoveCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.commands.RemoveCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":" * Parses input arguments and creates a new RemoveCommand object.","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":" * Determines if the user input argument is an index or a name.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"public class RemoveCommandParser {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"    private static Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"     * Parses the given {@code String} of arguments in the context of the RemoveCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"     * and returns a RemoveCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"    public RemoveCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"        String[] identifiers \u003d argsToArray(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"        if (isIndexArg(identifiers)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"            index \u003d ParserUtil.parseIndex(identifiers[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"lynnetteeee"},"content":"            return new RemoveCommand(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"lynnetteeee"},"content":"            return new RemoveCommand(new NameContainsKeywordsPredicate(Arrays.asList(identifiers)));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lynnetteeee"},"content":"     * Splits the arguments into an array of strings.","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lynnetteeee"},"content":"     * @param args The arguments that user has keyed in.","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lynnetteeee"},"content":"     * @return An array of string(s).","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"     * @throws ParseException If the user only input \"remove\" without any arguments.","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"lynnetteeee"},"content":"    public String[] argsToArray(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"lynnetteeee"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"lynnetteeee"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"lynnetteeee"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"lynnetteeee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemoveCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"lynnetteeee"},"content":"        return trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if the array only contains a single argument, and that single argument is an integer.","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"     * @param args The arguments that user has keyed in.","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"     * @return True if the argument is a single index.","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isIndexArg(String[] args) {","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"lynnetteeee"},"content":"        return args.length \u003d\u003d 1 \u0026\u0026 isInteger(args[0]);","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if the string is an integer.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isInteger(String str) {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"lynnetteeee"},"content":"        if (str.trim().isEmpty()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"lynnetteeee"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"lynnetteeee"},"content":"        try {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"lynnetteeee"},"content":"            Integer.parseInt(str);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"lynnetteeee"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"lynnetteeee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"lynnetteeee"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if the command starts with COMMAND_WORD \"remove\".","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isRemoveCommand(String fullCommand) {","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"lynnetteeee"},"content":"        return fullCommand.trim().startsWith(\"remove\");","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"lynnetteeee"},"content":"     * Returns the arguments keyed in by the user after the \"remove\" COMMAND_WORD, if any.","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"lynnetteeee"},"content":"    public String getRemoveCommandArguments(String removeFullCommand) {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"lynnetteeee"},"content":"        if (!isRemoveCommand(removeFullCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"lynnetteeee"},"content":"            return \"\";","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"lynnetteeee"},"content":"            return removeFullCommand.trim().substring(7).trim();","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if there are arguments, false if there are none following the \"remove\" COMMAND_WORD.","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"lynnetteeee"},"content":"    public boolean hasArgument(String arguments) {","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"lynnetteeee"},"content":"        return (arguments !\u003d null) \u0026\u0026 (!arguments.isEmpty());","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if the remove command has an index argument.","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"lynnetteeee"},"content":"    public boolean hasIndexArgument(String fullCommand) {","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"lynnetteeee"},"content":"        String arguments \u003d getRemoveCommandArguments(fullCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"lynnetteeee"},"content":"        return isRemoveCommand(fullCommand) \u0026\u0026 hasArgument(arguments) \u0026\u0026 isInteger(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":121,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if the command is a valid \"remove INDEX\" command.","lastModifiedDate":"2024-03-29"},{"lineNumber":122,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":123,"author":{"gitId":"lynnetteeee"},"content":"    public boolean isValidRemoveIndexCommand(String fullCommand, Model model) {","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"lynnetteeee"},"content":"        if (!hasIndexArgument(fullCommand)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"lynnetteeee"},"content":"            return false;","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"lynnetteeee"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"lynnetteeee"},"content":"            String arguments \u003d getRemoveCommandArguments(fullCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"lynnetteeee"},"content":"            List\u003cPerson\u003e lastShownList \u003d model.getPreviousList();","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"lynnetteeee"},"content":"            logger.info(\"List size:\" + lastShownList.size());","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"lynnetteeee"},"content":"            logger.info(\"Index:\" + arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"lynnetteeee"},"content":"            return (index.getZeroBased() \u003c lastShownList.size()) \u0026\u0026 (index.getZeroBased() \u003e\u003d 0);","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"RunjiaChen":4,"lynnetteeee":131}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/BkTreeCommandMatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":" * BkTree is a data structure used for fuzzy input","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":" * @param \u003cT\u003e type of elements stored in BkTree","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"public class BkTreeCommandMatcher\u003cT\u003e implements CommandMatcher\u003cT\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(BkTreeCommandMatcher.class);","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"    private BkTreeNode\u003cT\u003e root;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"    private DistanceFunction\u003cT\u003e distanceFunction;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"    private int closestDistance \u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"     * Constructs BkTree with provided items list","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"     * @param items the list of items to be stored in BkTree","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"    public BkTreeCommandMatcher(List\u003cT\u003e items) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"        logger.info(\"Check if items list is null or not\");","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"        if (items \u003d\u003d null || items.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"            logger.severe(\"Item list is null or empty.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"            throw new AssertionError(\"Items list must not be empty!\");","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"        logger.info(\"Items list check passed. Proceed to setting up required functions.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"        root \u003d new BkTreeNode\u003c\u003e(items.get(0));","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"        distanceFunction \u003d new LevenshteinDistance\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"        for (int i \u003d 1; i \u003c items.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"            insert(root, items.get(i));","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"        logger.info(\"Set up completed.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"    private void insert(BkTreeNode\u003cT\u003e node, T item) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"        int distance \u003d distanceFunction.calculateDistance(node.getItem(), item);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"        BkTreeNode\u003cT\u003e child \u003d node.getChildren().get(distance);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"        if (child \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"            node.getChildren().put(distance, new BkTreeNode\u003c\u003e(item));","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"        } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"AidenLYT"},"content":"            insert(child, item);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"AidenLYT"},"content":"    private T findMatch(BkTreeNode\u003cT\u003e node, T item) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"AidenLYT"},"content":"        if (node \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"AidenLYT"},"content":"            return null;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"AidenLYT"},"content":"        int distance \u003d distanceFunction.calculateDistance(node.getItem(), item);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"AidenLYT"},"content":"        if (distance \u003d\u003d 0) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"AidenLYT"},"content":"            return node.getItem();","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"AidenLYT"},"content":"        T closestMatch \u003d node.getItem();","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"AidenLYT"},"content":"        for (int i \u003d distance - 1; i \u003c\u003d distance + 1; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"AidenLYT"},"content":"            BkTreeNode\u003cT\u003e child \u003d node.getChildren().get(i);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"AidenLYT"},"content":"            if (child !\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"AidenLYT"},"content":"                T match \u003d findMatch(child, item);","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"AidenLYT"},"content":"                int prevDistance \u003d distanceFunction.calculateDistance(closestMatch, item);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"AidenLYT"},"content":"                int currDistance \u003d distanceFunction.calculateDistance(match, item);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"AidenLYT"},"content":"                boolean isCloser \u003d currDistance \u003c prevDistance;","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"AidenLYT"},"content":"                if (match !\u003d null \u0026\u0026 isCloser) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"AidenLYT"},"content":"                    closestMatch \u003d match;","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"AidenLYT"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"AidenLYT"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"AidenLYT"},"content":"        this.closestDistance \u003d distanceFunction.calculateDistance(item, closestMatch);","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"AidenLYT"},"content":"        logger.fine(\"Current Item:\" + item + \"Its Closest Match: \"","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"AidenLYT"},"content":"                + closestMatch + \"Its closest distance: \" + closestDistance);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"AidenLYT"},"content":"        return closestMatch;","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"AidenLYT"},"content":"    public int getClosestDistance() {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"AidenLYT"},"content":"        return this.closestDistance;","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"AidenLYT"},"content":"    public T findClosestMatch(T item) {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"AidenLYT"},"content":"        assert item !\u003d null : \"Item must not be null\";","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"AidenLYT"},"content":"        return findMatch(root, item);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":91}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/BkTreeNode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" * Represents a node in BkTree used for fuzzy search","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":" * @param \u003cT\u003e type of element stored in the node","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"public class BkTreeNode\u003cT\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"    private T item;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"    private Map\u003cInteger, BkTreeNode\u003cT\u003e\u003e children;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"     * Constructs a BkTreeNode with specified item","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"     * @param item item stored in the node","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"    BkTreeNode(T item) {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"        this.item \u003d item;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"        this.children \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"    public T getItem() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"        return item;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"    public Map\u003cInteger, BkTreeNode\u003cT\u003e\u003e getChildren() {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"        return children;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":30}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/CommandMatcher.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":" * Interface for matching","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":" * @param \u003cT\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"public interface CommandMatcher\u003cT\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"     * Finds the closest match to the given command input by user","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"     * @param item the command item to find the closest match for","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"     * @return the closest matched command Item","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"    T findClosestMatch(T item);","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":14}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/DistanceFunction.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":" * Represents a function for calculating distance between two items","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":" * @param \u003cT\u003e type of item","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"public interface DistanceFunction\u003cT\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"    int calculateDistance(T item1, T item2);","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":9}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/FuzzyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" * Parsers user commands with fuzzy matching","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"public class FuzzyCommandParser {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"    private static final BkTreeCommandMatcher\u003cString\u003e commandTree \u003d new BkTreeCommandMatcher\u003c\u003e(Arrays.asList(","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"            \"add\", \"edit\", \"delete\", \"remove\", \"clear\", \"find\", \"list\", \"exit\", \"help\", \"sort\", \"addbystep\", \"filter\",","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"            \"duplicate\", \"overwrite\", \"yes\", \"no\", \"undo\", \"redo\", \"copy\"));","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"    private static final int MAX_DISTANCE \u003d 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"     * Parses user input with fuzzy matching","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"     * @param userInput the user input to be parsed","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"     * @return closest matched command, \"error\" if no match is found within MAX_DISTANCE","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"    public static String parseCommand(String userInput) {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"        String userInputLowerCase \u003d userInput.toLowerCase();","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"        String closestMatch \u003d commandTree.findClosestMatch(userInputLowerCase);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"        if (commandTree.getClosestDistance() \u003e MAX_DISTANCE) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"            return \"error\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"        return closestMatch;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":26,"lynnetteeee":2,"kervyntan":1}},{"path":"src/main/java/seedu/address/logic/parser/fuzzy/LevenshteinDistance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.parser.fuzzy;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":" * Distance function implemented using Levenshtein distance algorithm","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":" * Calculates minimum number of single-character edits required to change one string into another","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":" * @param \u003cT\u003e type of items distance is calculated","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"public class LevenshteinDistance\u003cT\u003e implements DistanceFunction\u003cT\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"    public int calculateDistance(T item1, T item2) {","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"        assert item1 !\u003d null \u0026\u0026 item2 !\u003d null : \"Items must not be null\";","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"        assert item1 instanceof String \u0026\u0026 item2 instanceof String : \"Items must be of type String\";","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"        String s1 \u003d (String) item1;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"        String s2 \u003d (String) item2;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"        // Dynamic Programming","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"        int[][] dp \u003d new int[s1.length() + 1][s2.length() + 1];","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"        for (int i \u003d 0; i \u003c\u003d s1.length(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"            dp[i][0] \u003d i;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"        for (int j \u003d 0; j \u003c\u003d s2.length(); j++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"            dp[0][j] \u003d j;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"        for (int i \u003d 1; i \u003c\u003d s1.length(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"            for (int j \u003d 1; j \u003c\u003d s2.length(); j++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"                int cost \u003d (s1.charAt(i - 1) \u003d\u003d s2.charAt(j - 1)) ? 0 : 1;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"                dp[i][j] \u003d Math.min(dp[i - 1][j] + 1, Math.min(dp[i][j - 1] + 1, dp[i - 1][j - 1] + cost));","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"        return dp[s1.length()][s2.length()];","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"AidenLYT":37}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"kervyntan"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"kervyntan"},"content":"     * The person must already exist in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"kervyntan"},"content":"    public void addDuplicatePerson(Person p) {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"kervyntan"},"content":"        persons.duplicateAdd(p);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"kervyntan"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"kervyntan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"kervyntan"},"content":"     * The person identity of {@code editedPerson} must be the same as another existing person in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"kervyntan"},"content":"    public void setDuplicatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"kervyntan"},"content":"        persons.setDuplicatePerson(target, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"kervyntan"},"content":"     * Returns {@code person}\u0027s name that already exists in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"kervyntan"},"content":"    public Person getPerson(int indexOfTarget) {","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"kervyntan"},"content":"        return persons.getPerson(indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":138,"author":{"gitId":"AidenLYT"},"content":"    public UniquePersonList getPersons() {","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"AidenLYT"},"content":"        return this.persons;","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AidenLYT":4,"-":130,"kervyntan":27}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"AidenLYT"},"content":"    AddressBook getAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"kervyntan"},"content":"     * Adds the given person with a name that already exists in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"kervyntan"},"content":"     * {@code person}\u0027s name already exists in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"kervyntan"},"content":"    void addDuplicatePerson(Person person);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"kervyntan"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"kervyntan"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"kervyntan"},"content":"     * The person identity of {@code editedPerson} must be the same as another existing person in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"kervyntan"},"content":"    void setDuplicatePerson(Person target, Person editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"kervyntan"},"content":"     * Returns {@code person}\u0027s name that already exists in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"kervyntan"},"content":"    Person getPerson(int indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"lynnetteeee"},"content":"     * Returns the previous filtered list of persons.","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"lynnetteeee"},"content":"    ObservableList\u003cPerson\u003e getPreviousList();","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"lynnetteeee"},"content":"     * Updates the single person list to filter by the given {@code person}.","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"lynnetteeee"},"content":"     * @throws NullPointerException if {@code person} is null.","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"lynnetteeee"},"content":"    void updateSinglePersonList(Person person);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"lynnetteeee"},"content":"     * Undoes the address book to its previous state.","lastModifiedDate":"2024-03-31"},{"lineNumber":119,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":120,"author":{"gitId":"lynnetteeee"},"content":"    void undoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":121,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":122,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":123,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if {@code undo()} has address book state to restore to.","lastModifiedDate":"2024-03-31"},{"lineNumber":124,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":125,"author":{"gitId":"lynnetteeee"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":126,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":127,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":128,"author":{"gitId":"lynnetteeee"},"content":"     * Redoes the address book to its previously undone state.","lastModifiedDate":"2024-03-31"},{"lineNumber":129,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":130,"author":{"gitId":"lynnetteeee"},"content":"    void redoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":131,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":132,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":133,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if {@code redo()} has address book state to restore to, after an undo.","lastModifiedDate":"2024-03-31"},{"lineNumber":134,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":135,"author":{"gitId":"lynnetteeee"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":136,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":137,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":138,"author":{"gitId":"lynnetteeee"},"content":"     * Saves a copy of the current {@code AddressBook} state at the end of the state list","lastModifiedDate":"2024-03-31"},{"lineNumber":139,"author":{"gitId":"lynnetteeee"},"content":"     * after state-changing operations (e.g. add, remove).","lastModifiedDate":"2024-03-31"},{"lineNumber":140,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":141,"author":{"gitId":"lynnetteeee"},"content":"    void commitAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"AidenLYT":1,"lynnetteeee":37,"-":86,"kervyntan":18}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"    private final ObservableList\u003cPerson\u003e previousStateSnapshot;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"        previousStateSnapshot \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"AidenLYT"},"content":"    public AddressBook getAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"lynnetteeee"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"lynnetteeee"},"content":"        addressBook.undo();","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"lynnetteeee"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"lynnetteeee"},"content":"        return addressBook.canUndoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"lynnetteeee"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"lynnetteeee"},"content":"        addressBook.redo();","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"lynnetteeee"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"lynnetteeee"},"content":"        return addressBook.canRedoAddressBook();","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":112,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":113,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":114,"author":{"gitId":"lynnetteeee"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":115,"author":{"gitId":"lynnetteeee"},"content":"        addressBook.commit();","lastModifiedDate":"2024-03-31"},{"lineNumber":116,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":117,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"kervyntan"},"content":"    public void addDuplicatePerson(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"kervyntan"},"content":"        addressBook.addDuplicatePerson(person);","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"kervyntan"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"kervyntan"},"content":"    public void setDuplicatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"kervyntan"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"kervyntan"},"content":"        addressBook.setDuplicatePerson(target, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"kervyntan"},"content":"    public Person getPerson(int indexOfTarget) {","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"kervyntan"},"content":"        requireAllNonNull(indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"kervyntan"},"content":"        return addressBook.getPerson(indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":173,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"lynnetteeee"},"content":"     * Returns an unmodifiable view of the previous list of {@code Person} backed by the internal list of","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"lynnetteeee"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":177,"author":{"gitId":"lynnetteeee"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":178,"author":{"gitId":"lynnetteeee"},"content":"    public ObservableList\u003cPerson\u003e getPreviousList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":179,"author":{"gitId":"lynnetteeee"},"content":"        return FXCollections.unmodifiableObservableList(previousStateSnapshot);","lastModifiedDate":"2024-03-28"},{"lineNumber":180,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":181,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":182,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":183,"author":{"gitId":"lynnetteeee"},"content":"     * Returns an unmodifiable view of the filtered list of {@code Person} backed by the internal list of","lastModifiedDate":"2024-03-28"},{"lineNumber":184,"author":{"gitId":"lynnetteeee"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-03-28"},{"lineNumber":185,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":189,"author":{"gitId":"lynnetteeee"},"content":"        saveCurrentState();","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":193,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"lynnetteeee"},"content":"     * Updates the filtered person list with a single person.","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"lynnetteeee"},"content":"    public void updateSinglePersonList(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"lynnetteeee"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"lynnetteeee"},"content":"        saveCurrentState();","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"lynnetteeee"},"content":"        filteredPersons.setPredicate(person::equals);","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":201,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":202,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":203,"author":{"gitId":"lynnetteeee"},"content":"     * Saves the current state of the filtered person list.","lastModifiedDate":"2024-03-28"},{"lineNumber":204,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":205,"author":{"gitId":"lynnetteeee"},"content":"    private void saveCurrentState() {","lastModifiedDate":"2024-03-28"},{"lineNumber":206,"author":{"gitId":"lynnetteeee"},"content":"        previousStateSnapshot.clear();","lastModifiedDate":"2024-03-28"},{"lineNumber":207,"author":{"gitId":"lynnetteeee"},"content":"        previousStateSnapshot.addAll(filteredPersons);","lastModifiedDate":"2024-03-28"},{"lineNumber":208,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":209,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AidenLYT":1,"lynnetteeee":61,"-":145,"kervyntan":20}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lynnetteeee"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-31"},{"lineNumber":2,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":3,"author":{"gitId":"lynnetteeee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-31"},{"lineNumber":4,"author":{"gitId":"lynnetteeee"},"content":"import java.util.List;","lastModifiedDate":"2024-03-31"},{"lineNumber":5,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":6,"author":{"gitId":"lynnetteeee"},"content":"/**","lastModifiedDate":"2024-03-31"},{"lineNumber":7,"author":{"gitId":"lynnetteeee"},"content":" * Tracks the history of {@code AddressBook}.","lastModifiedDate":"2024-03-31"},{"lineNumber":8,"author":{"gitId":"lynnetteeee"},"content":" */","lastModifiedDate":"2024-03-31"},{"lineNumber":9,"author":{"gitId":"lynnetteeee"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2024-03-31"},{"lineNumber":10,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":11,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":12,"author":{"gitId":"lynnetteeee"},"content":"     * List of states that the address book has been in.","lastModifiedDate":"2024-03-31"},{"lineNumber":13,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":14,"author":{"gitId":"lynnetteeee"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2024-03-31"},{"lineNumber":15,"author":{"gitId":"lynnetteeee"},"content":"    private int currentStatePointer;","lastModifiedDate":"2024-03-31"},{"lineNumber":16,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":17,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":18,"author":{"gitId":"lynnetteeee"},"content":"     * Constructs a {@code VersionedAddressBook} with the given {@code ReadOnlyAddressBook}.","lastModifiedDate":"2024-03-31"},{"lineNumber":19,"author":{"gitId":"lynnetteeee"},"content":"     *","lastModifiedDate":"2024-03-31"},{"lineNumber":20,"author":{"gitId":"lynnetteeee"},"content":"     * @param initialState The initial state of the address book.","lastModifiedDate":"2024-03-31"},{"lineNumber":21,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":22,"author":{"gitId":"lynnetteeee"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2024-03-31"},{"lineNumber":23,"author":{"gitId":"lynnetteeee"},"content":"        super(initialState);","lastModifiedDate":"2024-03-31"},{"lineNumber":24,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"        addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-31"},{"lineNumber":26,"author":{"gitId":"lynnetteeee"},"content":"        addressBookStateList.add(new AddressBook(initialState));","lastModifiedDate":"2024-03-31"},{"lineNumber":27,"author":{"gitId":"lynnetteeee"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":28,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":29,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":30,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":31,"author":{"gitId":"lynnetteeee"},"content":"    * Saves a copy of the current {@code AddressBook} state at the end of the state list.","lastModifiedDate":"2024-03-31"},{"lineNumber":32,"author":{"gitId":"lynnetteeee"},"content":"    * Undoes any earlier states.","lastModifiedDate":"2024-03-31"},{"lineNumber":33,"author":{"gitId":"lynnetteeee"},"content":"    */","lastModifiedDate":"2024-03-31"},{"lineNumber":34,"author":{"gitId":"lynnetteeee"},"content":"    public void commit() {","lastModifiedDate":"2024-03-31"},{"lineNumber":35,"author":{"gitId":"lynnetteeee"},"content":"        int size \u003d addressBookStateList.size();","lastModifiedDate":"2024-03-31"},{"lineNumber":36,"author":{"gitId":"lynnetteeee"},"content":"        addressBookStateList.subList(currentStatePointer + 1, size).clear();","lastModifiedDate":"2024-03-31"},{"lineNumber":37,"author":{"gitId":"lynnetteeee"},"content":"        addressBookStateList.add(new AddressBook(this));","lastModifiedDate":"2024-03-31"},{"lineNumber":38,"author":{"gitId":"lynnetteeee"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-31"},{"lineNumber":39,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":40,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":41,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":42,"author":{"gitId":"lynnetteeee"},"content":"    * Restores the address book to its previous state.","lastModifiedDate":"2024-03-31"},{"lineNumber":43,"author":{"gitId":"lynnetteeee"},"content":"    */","lastModifiedDate":"2024-03-31"},{"lineNumber":44,"author":{"gitId":"lynnetteeee"},"content":"    public void undo() {","lastModifiedDate":"2024-03-31"},{"lineNumber":45,"author":{"gitId":"lynnetteeee"},"content":"        if (currentStatePointer \u003d\u003d 0) {","lastModifiedDate":"2024-03-31"},{"lineNumber":46,"author":{"gitId":"lynnetteeee"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2024-03-31"},{"lineNumber":47,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":48,"author":{"gitId":"lynnetteeee"},"content":"        currentStatePointer--;","lastModifiedDate":"2024-03-31"},{"lineNumber":49,"author":{"gitId":"lynnetteeee"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-31"},{"lineNumber":50,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":52,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":53,"author":{"gitId":"lynnetteeee"},"content":"    * Restores the address book to its previously undone state.","lastModifiedDate":"2024-03-31"},{"lineNumber":54,"author":{"gitId":"lynnetteeee"},"content":"    */","lastModifiedDate":"2024-03-31"},{"lineNumber":55,"author":{"gitId":"lynnetteeee"},"content":"    public void redo() {","lastModifiedDate":"2024-03-31"},{"lineNumber":56,"author":{"gitId":"lynnetteeee"},"content":"        if (currentStatePointer \u003d\u003d addressBookStateList.size() - 1) {","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"lynnetteeee"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"lynnetteeee"},"content":"        currentStatePointer++;","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if {@code undo()} has address book state to restore to.","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":69,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":70,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":71,"author":{"gitId":"lynnetteeee"},"content":"     * Returns true if {@code redo()} has address book state to restore to, after an undo.","lastModifiedDate":"2024-03-31"},{"lineNumber":72,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-31"},{"lineNumber":73,"author":{"gitId":"lynnetteeee"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":74,"author":{"gitId":"lynnetteeee"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2024-03-31"},{"lineNumber":75,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":76,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":77,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":78,"author":{"gitId":"lynnetteeee"},"content":"    * Handles case where an undo operation is called when there is no earlier address book state to restore to.","lastModifiedDate":"2024-03-31"},{"lineNumber":79,"author":{"gitId":"lynnetteeee"},"content":"    */","lastModifiedDate":"2024-03-31"},{"lineNumber":80,"author":{"gitId":"lynnetteeee"},"content":"    public static class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-31"},{"lineNumber":81,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":82,"author":{"gitId":"lynnetteeee"},"content":"         * Error message for when there is no earlier address book state to restore to.","lastModifiedDate":"2024-03-31"},{"lineNumber":83,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":84,"author":{"gitId":"lynnetteeee"},"content":"        public static final String UNDO_ERROR_MESSAGE \u003d \"There is no command to undo.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":85,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":86,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":87,"author":{"gitId":"lynnetteeee"},"content":"         * Constructs a {@code NoUndoableStateException} with the default error message.","lastModifiedDate":"2024-03-31"},{"lineNumber":88,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":89,"author":{"gitId":"lynnetteeee"},"content":"        public NoUndoableStateException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":90,"author":{"gitId":"lynnetteeee"},"content":"            super(UNDO_ERROR_MESSAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":91,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":92,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":93,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":94,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-31"},{"lineNumber":95,"author":{"gitId":"lynnetteeee"},"content":"    * Handles case where a redo operation is called when it is not preceded \u0027undo\u0027 and thus","lastModifiedDate":"2024-03-31"},{"lineNumber":96,"author":{"gitId":"lynnetteeee"},"content":"    * no address book state to restore to.","lastModifiedDate":"2024-03-31"},{"lineNumber":97,"author":{"gitId":"lynnetteeee"},"content":"    */","lastModifiedDate":"2024-03-31"},{"lineNumber":98,"author":{"gitId":"lynnetteeee"},"content":"    public static class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2024-03-31"},{"lineNumber":99,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":100,"author":{"gitId":"lynnetteeee"},"content":"         * Error message for when there is no address book state to restore to after an undo operation.","lastModifiedDate":"2024-03-31"},{"lineNumber":101,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":102,"author":{"gitId":"lynnetteeee"},"content":"        public static final String REDO_ERROR_MESSAGE \u003d \"There is no command to redo.\";","lastModifiedDate":"2024-03-31"},{"lineNumber":103,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":104,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":105,"author":{"gitId":"lynnetteeee"},"content":"         * Constructs a {@code NoRedoableStateException} with the default error message.","lastModifiedDate":"2024-03-31"},{"lineNumber":106,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":107,"author":{"gitId":"lynnetteeee"},"content":"        public NoRedoableStateException() {","lastModifiedDate":"2024-03-31"},{"lineNumber":108,"author":{"gitId":"lynnetteeee"},"content":"            super(REDO_ERROR_MESSAGE);","lastModifiedDate":"2024-03-31"},{"lineNumber":109,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":110,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":111,"author":{"gitId":"lynnetteeee"},"content":"}","lastModifiedDate":"2024-03-31"}],"authorContributionMap":{"lynnetteeee":111}},{"path":"src/main/java/seedu/address/model/person/FormattedCommandPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":" * Represents a Person in the addressbook that can generate the add command for the","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":" * person\u0027s details.","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"public class FormattedCommandPerson extends Person {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"    public FormattedCommandPerson(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"    public String getFormattedCommand() {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"        StringBuilder cmd \u003d new StringBuilder();","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(PREFIX_NAME);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(name);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(\" \" + PREFIX_PHONE);","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(phone);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(\" \" + PREFIX_EMAIL);","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(email);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(\" \" + PREFIX_ADDRESS);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"        cmd.append(address);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"        if (!this.tags.isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"            cmd.append(\" \" + PREFIX_TAG);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"            String tag \u003d tags.toArray()[0].toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"            tag \u003d tag.replace(\"[\", \"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"            tag \u003d tag.replace(\"]\", \"\");","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"            System.out.println(tag);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"            cmd.append(tag);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"RunjiaChen"},"content":"        return cmd.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"RunjiaChen":44}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"    protected final Name name;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"    protected final Phone phone;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"    protected final Email email;","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"    protected final Address address;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"    protected final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2024-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RunjiaChen":9,"-":112}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":" * Tests that a {@code Person}\u0027s {@code tag} matches any of the keywords given.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"kervyntan"},"content":"    private final List\u003cString\u003e tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"kervyntan"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e tags) {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"kervyntan"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"kervyntan"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"kervyntan"},"content":"        return person.getTags().stream() // Stream over the tags of the person","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"kervyntan"},"content":"                .anyMatch(personTag -\u003e tags.stream() // Stream over the given tags to check","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"kervyntan"},"content":"                        .anyMatch(tagKeyword -\u003e StringUtil.containsWordIgnoreCase(personTag.getTagName(), tagKeyword)));","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"kervyntan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"kervyntan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"kervyntan"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"kervyntan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"kervyntan"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"        TagContainsKeywordsPredicate otherTagContainsKeywordsPredicate \u003d (TagContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"        return tags.equals(otherTagContainsKeywordsPredicate.tags);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"kervyntan"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"kervyntan"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"kervyntan"},"content":"        return new ToStringBuilder(this).add(\"tags\", tags).toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"kervyntan":46}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"kervyntan"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonNotFoundException;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"kervyntan"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"     * Adds a person to the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"     * The person must already exist in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"    public void duplicateAdd(Person toAdd) {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"        if (!contains(toAdd)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"            throw new DuplicatePersonNotFoundException();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"kervyntan"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"kervyntan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"kervyntan"},"content":"     * The person identity of {@code editedPerson} must be the same as another existing person in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"kervyntan"},"content":"    public void setDuplicatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"kervyntan"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"kervyntan"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"kervyntan"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"kervyntan"},"content":"            throw new DuplicatePersonNotFoundException();","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"kervyntan"},"content":"        if (target.isSamePerson(editedPerson)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"kervyntan"},"content":"            internalList.set(index, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"kervyntan"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"kervyntan"},"content":"     * Retrieves the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"kervyntan"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"kervyntan"},"content":"     * The person identity of {@code editedPerson} must be the same as another existing person in the list.","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"kervyntan"},"content":"    public Person getPerson(int indexOfTarget) {","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"kervyntan"},"content":"        return internalList.get(indexOfTarget);","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"kervyntan"},"content":"        /*","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"kervyntan"},"content":"            if (!personsAreUnique(persons)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"kervyntan"},"content":"                throw new DuplicatePersonException();","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"kervyntan"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"kervyntan"},"content":"        */","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":192,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"AidenLYT"},"content":"     * Sorts List by the tag they are assigned to","lastModifiedDate":"2024-03-19"},{"lineNumber":195,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":196,"author":{"gitId":"AidenLYT"},"content":"    public void sortListByTag() {","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"AidenLYT"},"content":"        internalList.sort(Comparator.comparing(person -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"AidenLYT"},"content":"                person.getTags().stream()","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"AidenLYT"},"content":"                        .map(tag -\u003e tag.tagName.toLowerCase())","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"AidenLYT"},"content":"                        .sorted()","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"AidenLYT"},"content":"                        .collect(Collectors.toList())","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"AidenLYT"},"content":"                        .toString()","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"AidenLYT"},"content":"        ));","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"AidenLYT"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":207,"author":{"gitId":"AidenLYT"},"content":"     * Sorts List by name","lastModifiedDate":"2024-03-19"},{"lineNumber":208,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":209,"author":{"gitId":"AidenLYT"},"content":"    public void sortListByName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"AidenLYT"},"content":"        internalList.sort(Comparator.comparing(person -\u003e person.getName().fullName));","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AidenLYT":23,"-":147,"kervyntan":42}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kervyntan"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"kervyntan"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"kervyntan"},"content":" * Signals that the operation will not result in successful addition","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"kervyntan"},"content":" * since there isn\u0027t currently a duplicate Person in the model (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"kervyntan"},"content":" * identity).","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"kervyntan"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"kervyntan"},"content":"public class DuplicatePersonNotFoundException extends RuntimeException {","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"kervyntan"},"content":"    public DuplicatePersonNotFoundException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"kervyntan"},"content":"        super(\"Operation would not result in duplicate persons; This person doesn\u0027t currently exist\");","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"kervyntan"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"kervyntan":12}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"kervyntan"},"content":"    public String getTagName() {","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"kervyntan"},"content":"        return this.tagName;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"kervyntan"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!(other instanceof Tag)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Tag otherTag \u003d (Tag) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return tagName.equals(otherTag.tagName);","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":62,"kervyntan":4}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"kervyntan"},"content":"            /*","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"kervyntan"},"content":"                if (addressBook.hasPerson(person)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"kervyntan"},"content":"                    throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"            */","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":57,"kervyntan":5}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    private static final int ZERO_INDEX \u003d 0;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(CommandBox.class);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"lynnetteeee"},"content":"    private static String previousCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"    private InputHistory inputHistory;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"        this.inputHistory \u003d new InputHistory();","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"lynnetteeee"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"lynnetteeee"},"content":"     * Returns the previous command in its String form.","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"lynnetteeee"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"lynnetteeee"},"content":"    public static String getPreviousCommand() {","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"lynnetteeee"},"content":"        return previousCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"        } finally {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"            inputHistory.addToInputHistory(commandText);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"lynnetteeee"},"content":"            previousCommand \u003d inputHistory.getPreviousCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"     * Handles the Up/Down key pressed event.","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"     * @param event The event when a key is pressed.","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"    private void handleArrowKey(KeyEvent event) {","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"        String keyName \u003d event.getCode().getName();","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"        assert !keyName.isEmpty();","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"        //Performs nothing if there is no history.","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"        if (inputHistory.inputList.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"            return;","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"smolegz"},"content":"        if (keyName.equals(\"Up\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"smolegz"},"content":"            inputHistory.decrementIndex();","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"smolegz"},"content":"            setTextField();","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"smolegz"},"content":"        if (keyName.equals(\"Down\")) {","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"smolegz"},"content":"            inputHistory.incrementIndex();","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"smolegz"},"content":"            setTextField();","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":97,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"smolegz"},"content":"     * Sets the text field with the command, moves caret to the end of text.","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"smolegz"},"content":"    private void setTextField() {","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"smolegz"},"content":"        String commandText \u003d inputHistory.getCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"smolegz"},"content":"        commandTextField.setText(commandText);","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"smolegz"},"content":"        commandTextField.end();","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"smolegz"},"content":"        assert !commandText.isEmpty();","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"smolegz"},"content":"     * Encapsulates the input history of typed commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"smolegz"},"content":"    private class InputHistory {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"smolegz"},"content":"        private ArrayList\u003cString\u003e inputList;","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"smolegz"},"content":"        private int currentIndex;","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"smolegz"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"smolegz"},"content":"         * Constructor for InputHistory.","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"smolegz"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"smolegz"},"content":"        public InputHistory() {","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"smolegz"},"content":"            this.inputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"smolegz"},"content":"            this.currentIndex \u003d ZERO_INDEX;","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":154,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":155,"author":{"gitId":"smolegz"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"smolegz"},"content":"         * Adds typed in command into inputList.","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"smolegz"},"content":"         * @param commandText Sting of command.","lastModifiedDate":"2024-03-24"},{"lineNumber":158,"author":{"gitId":"smolegz"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"smolegz"},"content":"        public void addToInputHistory(String commandText) {","lastModifiedDate":"2024-03-24"},{"lineNumber":160,"author":{"gitId":"smolegz"},"content":"            this.inputList.add(commandText);","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"smolegz"},"content":"            currentIndex \u003d inputList.size();","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"smolegz"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"smolegz"},"content":"         * Increments the counter.","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"smolegz"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"smolegz"},"content":"        public void incrementIndex() {","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"smolegz"},"content":"            int maxListIndex \u003d inputList.size() - 1;","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"smolegz"},"content":"            if (this.currentIndex \u003c maxListIndex) {","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"smolegz"},"content":"                this.currentIndex++;","lastModifiedDate":"2024-03-24"},{"lineNumber":172,"author":{"gitId":"smolegz"},"content":"                logger.info(\"Showing succeeding command.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":174,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"smolegz"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"smolegz"},"content":"         * Decrements the counter.","lastModifiedDate":"2024-03-24"},{"lineNumber":178,"author":{"gitId":"smolegz"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":179,"author":{"gitId":"smolegz"},"content":"        public void decrementIndex() {","lastModifiedDate":"2024-03-24"},{"lineNumber":180,"author":{"gitId":"smolegz"},"content":"            if (this.currentIndex !\u003d ZERO_INDEX) {","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"smolegz"},"content":"                this.currentIndex--;","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"smolegz"},"content":"                logger.info(\"Showing previous command.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"smolegz"},"content":"            }","lastModifiedDate":"2024-03-24"},{"lineNumber":184,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":185,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"smolegz"},"content":"        /**","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"smolegz"},"content":"         * Retrieves the command corresponding to the counter.","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"smolegz"},"content":"         * @return String of command.","lastModifiedDate":"2024-03-24"},{"lineNumber":189,"author":{"gitId":"smolegz"},"content":"         */","lastModifiedDate":"2024-03-24"},{"lineNumber":190,"author":{"gitId":"smolegz"},"content":"        public String getCommand() {","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"smolegz"},"content":"            return this.inputList.get(currentIndex);","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"smolegz"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":194,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-28"},{"lineNumber":195,"author":{"gitId":"lynnetteeee"},"content":"         * Retrieves the previous command in its String format.","lastModifiedDate":"2024-03-28"},{"lineNumber":196,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-28"},{"lineNumber":197,"author":{"gitId":"lynnetteeee"},"content":"        public String getPreviousCommand() {","lastModifiedDate":"2024-03-28"},{"lineNumber":198,"author":{"gitId":"lynnetteeee"},"content":"            return inputList.get(inputList.size() - 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":199,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":200,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"smolegz":102,"lynnetteeee":16,"-":84}},{"path":"src/main/java/seedu/address/ui/CommandHelperWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.AddCommandHelper;","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":" * A side window. Prompts the user to key in the fields one bye one","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":" * when they wish to add a person into address book but is unsure","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":" * of the exact format of the command.","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"public class CommandHelperWindow extends AnchorPane {","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"    private TextField userInput;","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"    private Button sendButton;","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"    private AddCommandHelper addCommandHelper;","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"     * Starts the CommandHelper Window","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"    public void initialize() {","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"    public void setCommandHelper(AddCommandHelper a) {","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"RunjiaChen"},"content":"        this.addCommandHelper \u003d a;","lastModifiedDate":"2024-03-07"},{"lineNumber":43,"author":{"gitId":"RunjiaChen"},"content":"        dialogContainer.getChildren()","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"RunjiaChen"},"content":"                .addAll(DialogBox.getAddCommandHelperDialog(\"Hello, please enter the name of the person\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":46,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":47,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"RunjiaChen"},"content":"     * Creates two dialog boxes, one echoing user input and the other containin AddCommandHelper\u0027s reply depending","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"RunjiaChen"},"content":"     * on whether the input by the user is valid or not.","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"RunjiaChen"},"content":"    private void handleUserInput() {","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"RunjiaChen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"RunjiaChen"},"content":"        String response;","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"RunjiaChen"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"RunjiaChen"},"content":"            response \u003d addCommandHelper.getResponse(input);","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"RunjiaChen"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"RunjiaChen"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"RunjiaChen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2024-03-07"},{"lineNumber":61,"author":{"gitId":"RunjiaChen"},"content":"                DialogBox.getUserDialog(input),","lastModifiedDate":"2024-03-07"},{"lineNumber":62,"author":{"gitId":"RunjiaChen"},"content":"                DialogBox.getAddCommandHelperDialog(response));","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"RunjiaChen"},"content":"        userInput.clear();","lastModifiedDate":"2024-03-07"},{"lineNumber":64,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":65,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"RunjiaChen":67}},{"path":"src/main/java/seedu/address/ui/DialogBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":" * containing text from the speaker.","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-07"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2024-03-07"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"    private Label dialog;","lastModifiedDate":"2024-03-07"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"    private DialogBox(String text) {","lastModifiedDate":"2024-03-07"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-07"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"        dialog.setText(text);","lastModifiedDate":"2024-03-07"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"RunjiaChen"},"content":"    private void flip() {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"RunjiaChen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"RunjiaChen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"RunjiaChen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"RunjiaChen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"RunjiaChen"},"content":"    public static DialogBox getUserDialog(String text) {","lastModifiedDate":"2024-03-07"},{"lineNumber":51,"author":{"gitId":"RunjiaChen"},"content":"        return new DialogBox(text);","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":53,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"RunjiaChen"},"content":"    public static DialogBox getAddCommandHelperDialog(String text) {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"RunjiaChen"},"content":"        var db \u003d new DialogBox(text);","lastModifiedDate":"2024-03-07"},{"lineNumber":56,"author":{"gitId":"RunjiaChen"},"content":"        db.flip();","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"RunjiaChen"},"content":"        return db;","lastModifiedDate":"2024-03-07"},{"lineNumber":58,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":59,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"RunjiaChen":59}},{"path":"src/main/java/seedu/address/ui/ExitWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"import javafx.application.Platform;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":" * An exit window that seeks confirmation for program exit.","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"public class ExitWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    public static final String EXIT_MESSAGE \u003d \"Are you sure you want to exit?\\n\\n Press ENTER to confirm.\\n \"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"                                                      + \"On MacOS, press SPACE instead.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ExitWindow.class);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"    private static final String FXML \u003d \"ExitWindow.fxml\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"    private Label exitMessage;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"    private Button yesButton;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"     * Creates a new ExitWindow.","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"     * @param root Stage to use as the root of the ExitWindow.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"    public ExitWindow(Stage root) {","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"        super(FXML, root);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"        exitMessage.setText(EXIT_MESSAGE);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"     * Creates a new ExitWindow.","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"    public ExitWindow() {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"        this(new Stage());","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"     * Shows the exit window.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"smolegz"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"smolegz"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"smolegz"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"smolegz"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"smolegz"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"smolegz"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"smolegz"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"smolegz"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"smolegz"},"content":"    public void show() {","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"smolegz"},"content":"        logger.fine(\"Showing exit window.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"smolegz"},"content":"        getRoot().show();","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"smolegz"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-22"},{"lineNumber":71,"author":{"gitId":"smolegz"},"content":"     * Hides the exit window.","lastModifiedDate":"2024-03-22"},{"lineNumber":72,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-22"},{"lineNumber":73,"author":{"gitId":"smolegz"},"content":"    public void hide() {","lastModifiedDate":"2024-03-22"},{"lineNumber":74,"author":{"gitId":"smolegz"},"content":"        getRoot().hide();","lastModifiedDate":"2024-03-22"},{"lineNumber":75,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":76,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":77,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"smolegz"},"content":"     * Returns true if the exit window is currently being shown.","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"    public boolean isShowing() {","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"smolegz"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"smolegz"},"content":"     * Exits from the program.","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"smolegz"},"content":"    private void yesButton() {","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"smolegz"},"content":"        Platform.exit();","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"smolegz"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"smolegz"},"content":"     * Hides the exit window.","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"smolegz"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"smolegz"},"content":"    private void noButton() {","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"smolegz"},"content":"        getRoot().hide();","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"smolegz"},"content":"        logger.fine(\"Hiding exit window.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"smolegz"},"content":"        yesButton.requestFocus();","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"smolegz"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"smolegz":102}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.AddCommandHelper;","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"import seedu.address.Main;","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"    private ExitWindow exitWindow;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":45,"author":{"gitId":"RunjiaChen"},"content":"    private CommandHelperWindow commandHelperWindow;","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"RunjiaChen"},"content":"        //System.out.println(\"yay\");","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"smolegz"},"content":"        exitWindow \u003d new ExitWindow();","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":82,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"RunjiaChen"},"content":"    @FXML","lastModifiedDate":"2024-03-07"},{"lineNumber":166,"author":{"gitId":"RunjiaChen"},"content":"    private void handleAddByStep() {","lastModifiedDate":"2024-03-07"},{"lineNumber":167,"author":{"gitId":"RunjiaChen"},"content":"        try {","lastModifiedDate":"2024-03-07"},{"lineNumber":168,"author":{"gitId":"RunjiaChen"},"content":"            Stage stage \u003d new Stage();","lastModifiedDate":"2024-03-07"},{"lineNumber":169,"author":{"gitId":"RunjiaChen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/CommandHelperWindow.fxml\"));","lastModifiedDate":"2024-03-07"},{"lineNumber":170,"author":{"gitId":"RunjiaChen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2024-03-07"},{"lineNumber":171,"author":{"gitId":"RunjiaChen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2024-03-07"},{"lineNumber":172,"author":{"gitId":"RunjiaChen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2024-03-07"},{"lineNumber":173,"author":{"gitId":"RunjiaChen"},"content":"            fxmlLoader.\u003cCommandHelperWindow\u003egetController().setCommandHelper(new AddCommandHelper());","lastModifiedDate":"2024-03-07"},{"lineNumber":174,"author":{"gitId":"RunjiaChen"},"content":"            stage.show();","lastModifiedDate":"2024-03-07"},{"lineNumber":175,"author":{"gitId":"RunjiaChen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-07"},{"lineNumber":176,"author":{"gitId":"RunjiaChen"},"content":"            e.printStackTrace();","lastModifiedDate":"2024-03-07"},{"lineNumber":177,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-07"},{"lineNumber":178,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":179,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":180,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":181,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":182,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"smolegz"},"content":"     * Closes the application when the cross button is clicked.","lastModifiedDate":"2024-03-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"smolegz"},"content":"        exitWindow.hide();","lastModifiedDate":"2024-03-22"},{"lineNumber":198,"author":{"gitId":"smolegz"},"content":"        //primaryStage.hide();","lastModifiedDate":"2024-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":201,"author":{"gitId":"smolegz"},"content":"    @FXML","lastModifiedDate":"2024-03-22"},{"lineNumber":202,"author":{"gitId":"smolegz"},"content":"    private void showExitWindow() {","lastModifiedDate":"2024-03-22"},{"lineNumber":203,"author":{"gitId":"smolegz"},"content":"        helpWindow.hide();","lastModifiedDate":"2024-03-22"},{"lineNumber":204,"author":{"gitId":"smolegz"},"content":"        exitWindow.show();","lastModifiedDate":"2024-03-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"smolegz"},"content":"                showExitWindow();","lastModifiedDate":"2024-03-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"RunjiaChen"},"content":"            if (commandResult.isAddByStep()) {","lastModifiedDate":"2024-03-07"},{"lineNumber":231,"author":{"gitId":"RunjiaChen"},"content":"                handleAddByStep();","lastModifiedDate":"2024-03-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2024-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RunjiaChen":35,"smolegz":10,"-":196}},{"path":"src/main/java/seedu/address/ui/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":" * Monitors the fields that have been entered by the user when","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":" * they key in fields for the add command by by step.","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"public enum Status {","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"    GET_NAME, GET_NUMBER, GET_EMAIL, GET_ADDRESS, GET_TAG, COMPLETE, COPY;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"        String msg \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"        switch(this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NAME:","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"name\";","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"        case GET_NUMBER:","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"number\";","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"RunjiaChen"},"content":"        case GET_EMAIL:","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"email\";","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"RunjiaChen"},"content":"        case GET_ADDRESS:","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"address\";","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"RunjiaChen"},"content":"        case GET_TAG:","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"tag (optional)\";","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"RunjiaChen"},"content":"        case COMPLETE:","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"complete command\";","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"RunjiaChen"},"content":"        case COPY:","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"RunjiaChen"},"content":"            msg \u003d \"copy\";","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"RunjiaChen"},"content":"            break;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"RunjiaChen"},"content":"        default:","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"RunjiaChen"},"content":"            assert false : \"The enum should not reach this stage\";","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"RunjiaChen"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"RunjiaChen"},"content":"        return msg;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"RunjiaChen"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"RunjiaChen"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"RunjiaChen":41}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/look_me_up.png\";","lastModifiedDate":"2024-04-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"smolegz":1,"-":87}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" onKeyPressed\u003d\"#handleArrowKey\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"smolegz":2,"-":6}},{"path":"src/main/resources/view/CommandHelperWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"seedu.address.ui.CommandHelperWindow\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":15,"author":{"gitId":"RunjiaChen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":16,"author":{"gitId":"RunjiaChen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":17,"author":{"gitId":"RunjiaChen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":18,"author":{"gitId":"RunjiaChen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":19,"author":{"gitId":"RunjiaChen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"RunjiaChen":19}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RunjiaChen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":2,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":3,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":4,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":5,"author":{"gitId":"RunjiaChen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":6,"author":{"gitId":"RunjiaChen"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":7,"author":{"gitId":"RunjiaChen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":8,"author":{"gitId":"RunjiaChen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"RunjiaChen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"RunjiaChen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":11,"author":{"gitId":"RunjiaChen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":12,"author":{"gitId":"RunjiaChen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":13,"author":{"gitId":"RunjiaChen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2024-03-07"},{"lineNumber":14,"author":{"gitId":"RunjiaChen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-03-07"}],"authorContributionMap":{"RunjiaChen":14}},{"path":"src/main/resources/view/ExitWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"#exitMessage {","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"#yesButton {","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"#noButton, #yesButton {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"    -fx-background-color: white;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"#noButton:focused, #yesButton:focused {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"    -fx-background-color: \"#a6ff6b\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"#yesButton:hover, #noButton:hover {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"#exitMessageContainer {","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"smolegz":23}},{"path":"src/main/resources/view/ExitWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"smolegz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"smolegz"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"smolegz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"smolegz"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Confirm to Exit\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"smolegz"},"content":"    \u003cicons\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"smolegz"},"content":"        \u003cImage url\u003d\"@/images/exit_icon.png\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"smolegz"},"content":"    \u003cscene\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"        \u003cScene\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"smolegz"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"smolegz"},"content":"                \u003cURL value\u003d\"@ExitWindow.css\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"smolegz"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"smolegz"},"content":"            \u003cVBox fx:id\u003d\"exitMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"smolegz"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"smolegz"},"content":"                    \u003cLabel fx:id\u003d\"exitMessage\" alignment\u003d\"TOP_LEFT\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"smolegz"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"smolegz"},"content":"                            \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"smolegz"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"smolegz"},"content":"                    \u003c/Label\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"                \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"smolegz"},"content":"                    \u003cButton fx:id\u003d\"yesButton\" defaultButton\u003d\"true\" mnemonicParsing\u003d\"false\" onAction\u003d\"#yesButton\" text\u003d\"Yes\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"smolegz"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"smolegz"},"content":"                            \u003cInsets left\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"smolegz"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"smolegz"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"smolegz"},"content":"                    \u003cButton fx:id\u003d\"noButton\" cancelButton\u003d\"true\" mnemonicParsing\u003d\"false\" onAction\u003d\"#noButton\" text\u003d\"No\"\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"smolegz"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"smolegz"},"content":"                            \u003cInsets left\u003d\"5.0\" top\u003d\"20.0\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"smolegz"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"smolegz"},"content":"                    \u003c/Button\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"smolegz"},"content":"                \u003c/HBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"smolegz"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"smolegz"},"content":"                \u003c/children\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"smolegz"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"smolegz"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"smolegz"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"smolegz"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"smolegz"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"50.0\" right\u003d\"50.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"smolegz"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"smolegz"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"smolegz"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"smolegz"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"smolegz"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"smolegz":54}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-07-27"},{"lineNumber":15,"author":{"gitId":"smolegz"},"content":"         title\u003d\"LookMeUp\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"smolegz"},"content":"    \u003cImage url\u003d\"@/images/look_me_up.png\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"smolegz"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#showExitWindow\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2024-04-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"smolegz":3,"-":57}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"AidenLYT"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"AidenLYT"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AidenLYT":2,"-":175}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"lynnetteeee"},"content":"    @Test","lastModifiedDate":"2024-03-31"},{"lineNumber":57,"author":{"gitId":"lynnetteeee"},"content":"    public void execute_commitAddressBook_success() throws Exception {","lastModifiedDate":"2024-03-31"},{"lineNumber":58,"author":{"gitId":"lynnetteeee"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2024-03-31"},{"lineNumber":59,"author":{"gitId":"lynnetteeee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-31"},{"lineNumber":60,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":61,"author":{"gitId":"lynnetteeee"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2024-03-31"},{"lineNumber":62,"author":{"gitId":"lynnetteeee"},"content":"        addCommand.execute(modelStub);","lastModifiedDate":"2024-03-31"},{"lineNumber":63,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":64,"author":{"gitId":"lynnetteeee"},"content":"        assertTrue(modelStub.isCommitAddressBookCalled());","lastModifiedDate":"2024-03-31"},{"lineNumber":65,"author":{"gitId":"lynnetteeee"},"content":"    }","lastModifiedDate":"2024-03-31"},{"lineNumber":66,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":67,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"kervyntan"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"kervyntan"},"content":"        public void addDuplicatePerson(Person person) {","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"kervyntan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"AidenLYT"},"content":"        public AddressBook getAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"kervyntan"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"kervyntan"},"content":"        public void setDuplicatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"kervyntan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"kervyntan"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"kervyntan"},"content":"        public Person getPerson(int indexOfTarget) {","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"kervyntan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"kervyntan"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":188,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":189,"author":{"gitId":"lynnetteeee"},"content":"        public ObservableList\u003cPerson\u003e getPreviousList() {","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":191,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":192,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":193,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"lynnetteeee"},"content":"        public void updateSinglePersonList(Person person) {","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":198,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":199,"author":{"gitId":"lynnetteeee"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":200,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":201,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":202,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":203,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":204,"author":{"gitId":"lynnetteeee"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":205,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":206,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":207,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":208,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":209,"author":{"gitId":"lynnetteeee"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":210,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":211,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":212,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":213,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":214,"author":{"gitId":"lynnetteeee"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":215,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":216,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":217,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":218,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":219,"author":{"gitId":"lynnetteeee"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":220,"author":{"gitId":"lynnetteeee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-31"},{"lineNumber":221,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"lynnetteeee"},"content":"        private boolean commitAddressBookCalled \u003d false;","lastModifiedDate":"2024-03-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"AidenLYT"},"content":"        public AddressBook getAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":265,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":266,"author":{"gitId":"lynnetteeee"},"content":"        @Override","lastModifiedDate":"2024-03-31"},{"lineNumber":267,"author":{"gitId":"lynnetteeee"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2024-03-31"},{"lineNumber":268,"author":{"gitId":"lynnetteeee"},"content":"            commitAddressBookCalled \u003d true;","lastModifiedDate":"2024-03-31"},{"lineNumber":269,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":270,"author":{"gitId":"lynnetteeee"},"content":"","lastModifiedDate":"2024-03-31"},{"lineNumber":271,"author":{"gitId":"lynnetteeee"},"content":"        /**","lastModifiedDate":"2024-03-31"},{"lineNumber":272,"author":{"gitId":"lynnetteeee"},"content":"         * Returns true if commitAddressBook() is called.","lastModifiedDate":"2024-03-31"},{"lineNumber":273,"author":{"gitId":"lynnetteeee"},"content":"         */","lastModifiedDate":"2024-03-31"},{"lineNumber":274,"author":{"gitId":"lynnetteeee"},"content":"        public boolean isCommitAddressBookCalled() {","lastModifiedDate":"2024-03-31"},{"lineNumber":275,"author":{"gitId":"lynnetteeee"},"content":"            return commitAddressBookCalled;","lastModifiedDate":"2024-03-31"},{"lineNumber":276,"author":{"gitId":"lynnetteeee"},"content":"        }","lastModifiedDate":"2024-03-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"AidenLYT":2,"lynnetteeee":60,"-":202,"kervyntan":15}},{"path":"src/test/java/seedu/address/logic/commands/SortStrategyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AidenLYT"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"AidenLYT"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"AidenLYT"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"AidenLYT"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"AidenLYT"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"AidenLYT"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"AidenLYT"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"AidenLYT"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"AidenLYT"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.sortfunctions.SortByName;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.sortfunctions.SortByTag;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.sortfunctions.SortCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.commands.sortfunctions.SortStrategy;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"AidenLYT"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"AidenLYT"},"content":"public class SortStrategyTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"AidenLYT"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"AidenLYT"},"content":"    public void testSort_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"AidenLYT"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"AidenLYT"},"content":"        Set\u003cTag\u003e tagsp1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"AidenLYT"},"content":"        tagsp1.add(new Tag(\"tag1\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AidenLYT"},"content":"        Person p1 \u003d new Person(new Name(\"Alice\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"AidenLYT"},"content":"                new Phone(\"87654321\"), new Email(\"alice@gmail.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"AidenLYT"},"content":"                new Address(\"NUS computing drive\"), tagsp1);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"AidenLYT"},"content":"        Set\u003cTag\u003e tagsp2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"AidenLYT"},"content":"        tagsp2.add(new Tag(\"tag2\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"AidenLYT"},"content":"        Person p2 \u003d new Person(new Name(\"Bob\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"AidenLYT"},"content":"                new Phone(\"87654321\"), new Email(\"bob@gmail.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"AidenLYT"},"content":"                new Address(\"NUS computing drive\"), tagsp2);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"AidenLYT"},"content":"        Set\u003cTag\u003e tagsp3 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"AidenLYT"},"content":"        tagsp3.add(new Tag(\"tag3\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"AidenLYT"},"content":"        Person p3 \u003d new Person(new Name(\"Charles\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"AidenLYT"},"content":"                new Phone(\"87654321\"), new Email(\"charles@gmail.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"AidenLYT"},"content":"                new Address(\"NUS computing drive\"), tagsp3);","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"AidenLYT"},"content":"        addressBook.addPerson(p3);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"AidenLYT"},"content":"        addressBook.addPerson(p1);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"AidenLYT"},"content":"        addressBook.addPerson(p2);","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"AidenLYT"},"content":"        assertAll(\"success\", () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"AidenLYT"},"content":"            SortStrategy sortByTag \u003d new SortByTag();","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"AidenLYT"},"content":"            try {","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"AidenLYT"},"content":"                sortByTag.sort(addressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"AidenLYT"},"content":"            } catch (CommandException err) {","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"AidenLYT"},"content":"                fail(\"Exception thrown while sorting by tags: \" + err.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"AidenLYT"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"AidenLYT"},"content":"            List\u003cPerson\u003e sorted \u003d addressBook.getPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"AidenLYT"},"content":"            assertAll(\"sortByTag\", () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"AidenLYT"},"content":"                            assertEquals(tagsp1, sorted.get(0).getTags()), () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"AidenLYT"},"content":"                            assertEquals(tagsp2, sorted.get(1).getTags()), () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"AidenLYT"},"content":"                            assertEquals(tagsp3, sorted.get(2).getTags())","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"AidenLYT"},"content":"            );","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"AidenLYT"},"content":"            }, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"AidenLYT"},"content":"                SortStrategy sortByName \u003d new SortByName();","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"AidenLYT"},"content":"                try {","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"AidenLYT"},"content":"                    sortByName.sort(addressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"AidenLYT"},"content":"                } catch (CommandException err) {","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"AidenLYT"},"content":"                    fail(\"Exception thrown while sorting by name: \" + err.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"AidenLYT"},"content":"                }","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"AidenLYT"},"content":"                List\u003cPerson\u003e sorted \u003d addressBook.getPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"AidenLYT"},"content":"                assertAll(\"sortByName\", () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"AidenLYT"},"content":"                                assertEquals(new Name(\"Alice\"), sorted.get(0).getName()), () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"AidenLYT"},"content":"                                assertEquals(new Name(\"Bob\"), sorted.get(1).getName()), () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"AidenLYT"},"content":"                                assertEquals(new Name(\"Charles\"), sorted.get(2).getName())","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"AidenLYT"},"content":"                );","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"AidenLYT"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"AidenLYT"},"content":"        );","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"AidenLYT"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"AidenLYT"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"AidenLYT"},"content":"    public void testSort_failure() {","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"AidenLYT"},"content":"        assertAll(\"Failed\", () -\u003e assertAll(\"Empty\", () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"AidenLYT"},"content":"                                        assertThrows(ParseException.class, () -\u003e new SortCommand(\" \")), () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"AidenLYT"},"content":"                                assertThrows(ParseException.class, () -\u003e new SortCommand(\"\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"AidenLYT"},"content":"                        ), () -\u003e assertAll(\"Invalid\", () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"name tag\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"tag name\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"name name\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"tag tag\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"names\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"tags\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"taylor\")), () -\u003e assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"AidenLYT"},"content":"                        new SortCommand(\"12tag12\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"AidenLYT"},"content":"                        )","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"AidenLYT"},"content":"        );","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"AidenLYT"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"AidenLYT"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"AidenLYT":110}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":55,"author":{"gitId":"kervyntan"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"kervyntan"},"content":"        @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"kervyntan"},"content":"        public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"kervyntan"},"content":"            addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"kervyntan"},"content":"            Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"kervyntan"},"content":"                    .build();","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"kervyntan"},"content":"            assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"kervyntan"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"kervyntan"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"-":83,"kervyntan":9}}]
