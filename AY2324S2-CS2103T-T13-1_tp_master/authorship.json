[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T13-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2324S2-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"# TAHelper","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"* TAHelper helps TA to better manage their students\u0027 profiles, this includes attendance, grading, etc.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"* For the detailed documentation of this project, see the **[Tutor Helper Website]([https://ay2324s2-cs2103t-t13-1.github.io/tp/](https://ay2324s2-cs2103t-t13-1.github.io/tp/)**.","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"* This project is based on the AddressBook-Level3 project created by the [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":7,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"    implementation \u0027de.jensd:fontawesomefx-fontawesome:4.7.0-9.1.2\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"    implementation \u0027de.jensd:fontawesomefx-controls:9.1.2\u0027","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AndrewOng2066":3,"-":72}},{"path":"config/checkstyle/checkstyle.xml","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"\u003c!DOCTYPE module PUBLIC","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"-//Checkstyle//DTD Checkstyle Configuration 1.3//EN\"","lastModifiedDate":"2019-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"https://checkstyle.org/dtds/configuration_1_3.dtd\"\u003e","lastModifiedDate":"2019-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    This configuration file enforces rules for the coding standard at","lastModifiedDate":"2022-05-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    https://se-education.org/guides/conventions/java/intermediate.html","lastModifiedDate":"2022-05-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003cmodule name\u003d\"Checker\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"FileTabCharacter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there are no tab characters in the file. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"NewlineAtEndOfFile\"\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c!-- Accept LF, CR or CRLF to accomodate devs who prefer different line endings --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"lineSeparator\" value\u003d\"lf_cr_crlf\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"RegexpSingleline\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that FIXME is not used in comments.  TODO is preferred. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"format\" value\u003d\"((//.*)|(\\*.*))FIXME\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"message\" value\u003d\u0027TODO is preferred to FIXME.\"\u0027 /\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"SuppressionFilter\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"file\" value\u003d\"${config_loc}/suppressions.xml\"/\u003e","lastModifiedDate":"2019-02-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"LineLength\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a line is too long. --\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003cproperty name\u003d\"max\" value\u003d\"120\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c!-- All Java AST specific tests live under TreeWalker module. --\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003cmodule name\u003d\"TreeWalker\"\u003e","lastModifiedDate":"2017-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    \u003c!-- Required to allow exceptions in code style --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SuppressionCommentFilter\"\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"offCommentFormat\" value\u003d\"CHECKSTYLE.OFF\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"onCommentFormat\" value\u003d\"CHECKSTYLE.ON\\: ([\\w\\|]+)\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"checkFormat\" value\u003d\"$1\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    IMPORT CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the ordering of import statements follow the rules that the default Eclipse formatter uses.","lastModifiedDate":"2017-01-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    The order rule \"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\" consists of:","lastModifiedDate":"2017-01-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      1. STATIC: static imports","lastModifiedDate":"2017-01-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"      2. STANDARD_JAVA_PACKAGE: standard java/javax imports","lastModifiedDate":"2017-01-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"      3. SPECIAL_IMPORTS: defined as org imports","lastModifiedDate":"2017-01-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      4. THIRD_PARTY_PACKAGE: defined as com imports","lastModifiedDate":"2017-01-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CustomImportOrder\"\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"customImportOrderRules\"","lastModifiedDate":"2017-01-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            value\u003d\"STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"specialImportsRegExp\" value\u003d\"^org\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"thirdPartyPackageRegExp\" value\u003d\"^com\\.\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        \u003cproperty name\u003d\"sortImportsInGroupAlphabetically\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for redundant import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    An import statement is redundant if:","lastModifiedDate":"2017-01-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      * It is a duplicate of another import. This is, when a class is imported more than once.","lastModifiedDate":"2017-01-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the java.lang package, e.g. importing java.lang.String.","lastModifiedDate":"2017-01-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      * The class non-statically imported is from the same package as the current package.","lastModifiedDate":"2017-01-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RedundantImport\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for unused import statements.","lastModifiedDate":"2017-01-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    An import statement is unused if:","lastModifiedDate":"2017-01-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"      It\u0027s not referenced in the file.","lastModifiedDate":"2017-01-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UnusedImports\"/\u003e","lastModifiedDate":"2017-01-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AvoidStarImport\"/\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    NAMING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    \u003c!-- Validate abbreviations (consecutive capital letters) length in identifier name --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AbbreviationAsWordInName\"\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreFinal\" value\u003d\"false\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAbbreviationLength\" value\u003d\"1\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"PackageName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for package names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z]+(\\.[a-z][a-z0-9]{1,})*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"TypeName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, final fields against the expression \"^[A-Z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"TypeName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ConstantName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-private, static, final fields against the expression \"^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"ConstantName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"applyToPrivate\" value\u003d\"false\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003cmessage key\u003d\"name.invalidPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"               value\u003d\"Variable \u0027\u0027{0}\u0027\u0027 should be in ALL_CAPS (if it is a constant) or be private (otherwise).\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"StaticVariableName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      \u003c!-- Validates static, non-final fields against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"StaticVariableName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*_?$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MemberName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c!-- Validates non-static members against the supplied expression. --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MemberName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*$\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodName\"\u003e","lastModifiedDate":"2017-01-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method names against the supplied expression. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"      \u003cmetadata name\u003d\"altname\" value\u003d\"MethodName\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"^[a-z][a-zA-Z0-9]*(_[a-z][a-zA-Z0-9]+){0,2}$\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParameterName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for method parameters against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalFinalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local final variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LocalVariableName\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"      \u003c!-- Validates identifiers for local variables against the expression \"^[a-z][a-zA-Z0-9]*$\". --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    LENGTH and CODING CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that array type declarations follow Java Style","lastModifiedDate":"2017-04-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"      Java style: public static void main(String[] args) // Allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"      C style:    public static void main(String args[]) // Not allowed","lastModifiedDate":"2017-04-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ArrayTypeStyle\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if a catch block is empty and does not contain any comments. --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"EmptyCatchBlock\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"LeftCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"      \u003c!-- Checks for placement of the left curly brace (\u0027{\u0027). --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"RightCurly\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"      \u003c!-- Checks right curlies on CATCH, ELSE, and TRY blocks are on","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"      the same line. e.g., the following example is fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"      \u003c!-- This next example is not fine:","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"      \u003cpre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        if {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"          ...","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        else","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"      \u003c/pre\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    \u003c!-- Checks for braces around loop blocks --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NeedBraces\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"      \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"      if (true) return 1; // Not allowed","lastModifiedDate":"2017-04-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"      if (true) { return 1; } // Not allowed","lastModifiedDate":"2016-10-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"      else if {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return 1; // else if should always be multi line","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"      if (true)","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return 1; // Not allowed","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoopBody\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each variable declaration is in its own statement and on its own line. --\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MultipleVariableDeclarations\"/\u003e","lastModifiedDate":"2017-09-21"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OneStatementPerLine\"/\u003e","lastModifiedDate":"2017-09-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that long constants are defined with an upper ell.--\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"UpperEll\" /\u003e","lastModifiedDate":"2018-01-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"FallThrough\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"      \u003c!-- Warn about falling through to the next case statement.  Similar to","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"      javac -Xlint:fallthrough, but the check is suppressed if a single-line comment","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"      on the last non-blank line preceding the fallen-into case contains \u0027fall through\u0027 (or","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"      some other variants which we don\u0027t publicized to promote consistency).","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"reliefPattern\"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"       value\u003d\"fall through|Fall through|fallthru|Fallthru|falls through|Falls through|fallthrough|Fallthrough|No break|NO break|no break|continue on\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingSwitchDefault\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that Class variables should never be declared public. --\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"VisibilityModifier\"\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"protectedAllowed\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowPublicFinalFields\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreAnnotationCanonicalNames\" value\u003d\"RegisterExtension, TempDir\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    ORDER CHECKS","lastModifiedDate":"2017-01-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that the order of at-clauses follows the tagOrder default property value order.","lastModifiedDate":"2017-04-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         @author, @version, @param, @return, @throws, @exception, @see, @since, @serial, @serialField, @serialData, @deprecated","lastModifiedDate":"2017-04-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2017-04-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    \u003c!-- Checks if the Class and Interface declarations is organized in this order","lastModifiedDate":"2017-04-01"},{"lineNumber":241,"author":{"gitId":"-"},"content":"      1. Class (static) variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"      2. Instance variables. Order: public, protected, package level (no access modifier), private.","lastModifiedDate":"2017-04-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      3. Constructors","lastModifiedDate":"2017-04-01"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      4. Methods","lastModifiedDate":"2017-04-01"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    \u003cmodule name \u003d\"DeclarationOrder\"/\u003e","lastModifiedDate":"2017-04-01"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that default is after all cases in a switch statement --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"DefaultComesLast\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ModifierOrder\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      \u003c!-- Warn if modifier order is inconsistent with JLS3 8.1.1, 8.3.1, and","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"           8.4.3.  The prescribed order is:","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"           public, protected, private, abstract, static, final, transient, volatile,","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"           synchronized, native, strictfp","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OverloadMethodsDeclarationOrder\"/\u003e","lastModifiedDate":"2017-01-16"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    WHITESPACE CHECKS","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that comments are indented relative to their position in the code --\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"CommentsIndentation\"/\u003e","lastModifiedDate":"2017-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-03"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAround\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that various tokens are surrounded by whitespace.","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"           This includes most binary operators and keywords followed","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"           by regular or curly braces.","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, BAND, BAND_ASSIGN, BOR,","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        BOR_ASSIGN, BSR, BSR_ASSIGN, BXOR, BXOR_ASSIGN, COLON, DIV, DIV_ASSIGN,","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        EQUAL, GE, GT, LAND, LCURLY, LE, LITERAL_CATCH, LITERAL_DO, LITERAL_ELSE,","lastModifiedDate":"2016-12-10"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        LITERAL_FINALLY, LITERAL_FOR, LITERAL_IF, LITERAL_RETURN,","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        LITERAL_SYNCHRONIZED, LITERAL_TRY, LITERAL_WHILE, LOR, LT, MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        MINUS_ASSIGN, MOD, MOD_ASSIGN, NOT_EQUAL, PLUS, PLUS_ASSIGN, QUESTION,","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        RCURLY, SL, SLIST, SL_ASSIGN, SR_ASSIGN, STAR, STAR_ASSIGN\"/\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":280,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty constructors e.g. MyClass() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":281,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyConstructors\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty methods e.g. void func() {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":283,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyMethods\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":284,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty types e.g. class Foo {}, enum Foo {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":285,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyTypes\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty loops e.g. for (int i \u003d 1; i \u003e 1; i++) {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLoops\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":288,"author":{"gitId":"-"},"content":"      \u003c!-- Allow empty lambdas e.g. () -\u003e {} --\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":289,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowEmptyLambdas\" value\u003d\"true\" /\u003e","lastModifiedDate":"2016-12-10"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"WhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that commas, semicolons and typecasts are followed by whitespace. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, SEMI, TYPECAST\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceAfter\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace after various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS,","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        UNARY_PLUS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    \u003c!-- No trailing whitespace --\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Regexp\"\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"format\" value\u003d\"[ \\t]+$\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"illegalPattern\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"message\" value\u003d\"Trailing whitespace\"/\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-12-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the non-assignment type operator is at the next line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":313,"author":{"gitId":"-"},"content":"           This includes \"?\", \":\", \"\u003d\u003d\", \"!\u003d\", \"/\", \"+\", \"-\", \"*\", \"%\", \"\u003e\u003e\", \"\u003e\u003e\u003e\",","lastModifiedDate":"2017-05-22"},{"lineNumber":314,"author":{"gitId":"-"},"content":"           \"\u003e\u003d\", \"\u003e\", \"\u003c\u003c\", \"\u003c\u003d\", \"\u003c\", \"^\", \"|\", \"||\", \"\u0026\", \"\u0026\u0026\", \"instanceof\",","lastModifiedDate":"2017-05-22"},{"lineNumber":315,"author":{"gitId":"-"},"content":"           \"\u0026\" when used in a generic upper or lower bounds constraints,","lastModifiedDate":"2017-05-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"             e.g. \u003cT extends Foo \u0026 Bar\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":317,"author":{"gitId":"-"},"content":"           \"::\" when used as a reference to a method or constructor without arguments.","lastModifiedDate":"2017-05-22"},{"lineNumber":318,"author":{"gitId":"-"},"content":"             e.g. String::compareToIgnoreCase","lastModifiedDate":"2017-05-22"},{"lineNumber":319,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":320,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"QUESTION, COLON, EQUAL, NOT_EQUAL, DIV, PLUS, MINUS, STAR, MOD, SR, BSR,","lastModifiedDate":"2017-05-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        GE, GT, SL, LE, LT, BXOR, BOR, LOR, BAND, LAND, LITERAL_INSTANCEOF, TYPE_EXTENSION_AND, METHOD_REF\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":322,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"OperatorWrap\"\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the assignment type operator is at the previous end of line in a line wrap.","lastModifiedDate":"2017-05-22"},{"lineNumber":326,"author":{"gitId":"-"},"content":"           This includes \"\u003d\", \"/\u003d\", \"+\u003d\", \"-\u003d\", \"*\u003d\", \"%\u003d\", \"\u003e\u003e\u003d\", \"\u003e\u003e\u003e\u003d\", \"\u003c\u003c\u003d\", \"^\u003d\", \"\u0026\u003d\".","lastModifiedDate":"2017-05-22"},{"lineNumber":327,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":328,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"ASSIGN, DIV_ASSIGN, PLUS_ASSIGN, MINUS_ASSIGN, STAR_ASSIGN, MOD_ASSIGN,","lastModifiedDate":"2017-05-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"        SR_ASSIGN, BSR_ASSIGN, SL_ASSIGN, BXOR_ASSIGN, BOR_ASSIGN, BAND_ASSIGN\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":330,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-05-22"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":334,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \".\", \"@\" is at the next line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":335,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"DOT, AT\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":336,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"nl\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SeparatorWrap\"\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":339,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that the \",\", \"]\", \"[\", \"...\", \";\", \"(\" is at the previous end of line in a line wrap. --\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":340,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"COMMA, RBRACK, ARRAY_DECLARATOR, ELLIPSIS, SEMI, LPAREN\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":341,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"option\" value\u003d\"eol\"/\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-04-14"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-14"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"Indentation\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"caseIndent\" value\u003d\"0\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"throwsIndent\" value\u003d\"8\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBefore\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before various unary operators. Linebreaks are allowed. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":351,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"SEMI, DOT, POST_DEC, POST_INC\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowLineBreaks\" value\u003d\"true\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"NoWhitespaceBeforeCaseDefaultColon\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that there is no whitespace between method/constructor name and open parenthesis. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MethodParamPad\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"ParenPad\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"      \u003c!-- Checks that there is no whitespace before close parenthesis or after open parenthesis. --\u003e","lastModifiedDate":"2016-10-12"},{"lineNumber":362,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"severity\" value\u003d\"warning\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that non-whitespace characters are separated by no more than one whitespace character.","lastModifiedDate":"2018-08-15"},{"lineNumber":366,"author":{"gitId":"-"},"content":"         a \u003d 1; // Allowed","lastModifiedDate":"2018-08-15"},{"lineNumber":367,"author":{"gitId":"-"},"content":"         a  \u003d 1; // Not allowed (more than one space before \u003d)","lastModifiedDate":"2018-08-15"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"SingleSpaceSeparator\"\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":370,"author":{"gitId":"-"},"content":"      \u003c!-- Validate whitespace surrounding comments as well.","lastModifiedDate":"2018-08-15"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":372,"author":{"gitId":"-"},"content":"           a \u003d 1; // Allowed (single space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":373,"author":{"gitId":"-"},"content":"           a \u003d 1; /* Allowed (single space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":374,"author":{"gitId":"-"},"content":"           /* Allowed (single space after end of comment) */ a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":375,"author":{"gitId":"-"},"content":"           a \u003d 1;  // Not allowed (more than one space before start of comment)","lastModifiedDate":"2018-08-15"},{"lineNumber":376,"author":{"gitId":"-"},"content":"           a \u003d 1;  /* Not allowed (more than one space before start of comment) */","lastModifiedDate":"2018-08-15"},{"lineNumber":377,"author":{"gitId":"-"},"content":"           /* Not allowed (more than one space after end of comment) */  a \u003d 1;","lastModifiedDate":"2018-08-15"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":379,"author":{"gitId":"-"},"content":"           This doesn\u0027t validate whitespace within comments so a comment /* like  this */ is allowed.","lastModifiedDate":"2018-08-15"},{"lineNumber":380,"author":{"gitId":"-"},"content":"      --\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":381,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateComments\" value\u003d\"true\"/\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2018-08-15"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    \u003c!--","lastModifiedDate":"2017-08-20"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    JAVADOC CHECKS","lastModifiedDate":"2017-08-20"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    --\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":388,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c!-- Checks that all block-attendances are ordered correctly. --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"AtclauseOrder\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":391,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c!-- Checks that Javadoc block attendances appear only at the beginning of the line. --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocBlockTagLocation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that all Javadoc comments start from the second line. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocContentLocationCheck\" /\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each line in Javadoc has leading asterisks. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingLeadingAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that each non-empty line in Javadoc has whitespace after leading asterisk. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMissingWhitespaceAfterAsterisk\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":403,"author":{"gitId":"AndrewOng2066"},"content":"    \u003c!-- Checks that for block attendances, indentation of continuation lines is at least 4 spaces. --\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocTagContinuationIndentation\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every class, enumeration and interface. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocType\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":408,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    \u003c!-- Checks the Javadoc\u0027s format for every public method (excluding getters, setters and constructors). --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"JavadocMethod\"\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowedAnnotations\" value\u003d\"Override, Test, BeforeAll, BeforeEach, AfterAll, AfterEach, Subscribe\"/\u003e","lastModifiedDate":"2019-02-24"},{"lineNumber":414,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"accessModifiers\" value\u003d\"public\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"validateThrows\" value\u003d\"false\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":416,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingParamTags\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":417,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingReturnTag\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":418,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"tokens\" value\u003d\"METHOD_DEF, ANNOTATION_FIELD_DEF\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":419,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":421,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"InvalidJavadocPosition\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-27"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public method (excluding getters, setters and constructors) has a header comment. --\u003e","lastModifiedDate":"2022-05-29"},{"lineNumber":424,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocMethodCheck\"\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"minLineCount\" value\u003d\"1\"/\u003e","lastModifiedDate":"2020-05-27"},{"lineNumber":426,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"allowMissingPropertyJavadoc\" value\u003d\"true\"/\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":427,"author":{"gitId":"-"},"content":"      \u003cproperty name\u003d\"ignoreMethodNamesRegex\" value\u003d\"(set.*|get.*|main)\"/\u003e","lastModifiedDate":"2023-07-10"},{"lineNumber":428,"author":{"gitId":"-"},"content":"    \u003c/module\u003e","lastModifiedDate":"2017-08-20"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-20"},{"lineNumber":430,"author":{"gitId":"-"},"content":"    \u003c!-- Checks that every public class, enumeration and interface has a header comment. --\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"    \u003cmodule name\u003d\"MissingJavadocType\"/\u003e","lastModifiedDate":"2022-04-29"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-04-29"},{"lineNumber":433,"author":{"gitId":"-"},"content":"  \u003c/module\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":434,"author":{"gitId":"-"},"content":"\u003c/module\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AndrewOng2066":3,"-":431}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"You can reach us at the email `E0957568@u.nus.edu`","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"### Nicholas","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"\u003cimg src\u003d\"images/nichee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"[[github](https://github.com/nichee)]","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"* Role: Coder","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"* Responsibilities: Coding","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"### Andrew Ong Pang Woon","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"\u003cimg src\u003d\"images/andrewong2066.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"[[github](http://github.com/andrewong2066)]","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"* Role: Developer","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"* Responsibilities: Coding","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"### Rahman Faaheem Ilhaam","lastModifiedDate":"2024-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"\u003cimg src\u003d\"images/faaheem13.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"[[github](http://github.com/faaheem13)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"* Responsibilities:","lastModifiedDate":"2024-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"### Tania Tan Shu Qi","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"\u003cimg src\u003d\"images/taniatsq.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"[[github](http://github.com/taniatsq)]","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"faaheem13":4,"AndrewOng2066":8,"nichee":6,"-":35}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"DevOps guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# DevOps guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/MainApp.java).","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"AndrewOng2066":1,"-":81}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# AB-3 Developer Guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/ui/Ui.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/logic/Logic.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2023-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/model/Model.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"* stores the studentId book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/studentId/storage/Storage.java)","lastModifiedDate":"2024-03-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"* can save both studentId book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"* `VersionedAddressBook#commit()` — Saves the current studentId book state in its history.","lastModifiedDate":"2024-03-19"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"* `VersionedAddressBook#undo()` — Restores the previous studentId book state from its history.","lastModifiedDate":"2024-03-19"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone studentId book state from its history.","lastModifiedDate":"2024-03-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial studentId book state, and the `currentStatePointer` pointing to that single studentId book state.","lastModifiedDate":"2024-03-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the studentId book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the studentId book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted studentId book state.","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified studentId book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the studentId book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous studentId book state, and restores the studentId book to that state.","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the studentId book to that state.","lastModifiedDate":"2024-03-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest studentId book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2024-03-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"AndrewOng2066"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the studentId book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2024-03-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"AndrewOng2066"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all studentId book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2024-03-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"AndrewOng2066"},"content":"* **Alternative 1 (current choice):** Saves the entire studentId book.","lastModifiedDate":"2024-03-19"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"nichee"},"content":"# Implementation of Classes feature","lastModifiedDate":"2024-03-23"},{"lineNumber":260,"author":{"gitId":"nichee"},"content":"The Classes feature is built using the basic structure of `AddressBook`. `Classes` represents a tutorial class.","lastModifiedDate":"2024-03-23"},{"lineNumber":261,"author":{"gitId":"nichee"},"content":"### 1. Basic structure","lastModifiedDate":"2024-03-23"},{"lineNumber":262,"author":{"gitId":"nichee"},"content":"A `ClassBook` instance holds all current `Classes` instances. This is stored in the data folder as `classbook.json`","lastModifiedDate":"2024-03-23"},{"lineNumber":263,"author":{"gitId":"nichee"},"content":"file. \u003cbr /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":264,"author":{"gitId":"nichee"},"content":"Each `Classes` instance contains an instance of `Addressbook`, which holds a list of `Person` instances ","lastModifiedDate":"2024-03-23"},{"lineNumber":265,"author":{"gitId":"nichee"},"content":"representing the students in the Class. Each `Classes` instance stored in data as `[className].json` where ","lastModifiedDate":"2024-03-23"},{"lineNumber":266,"author":{"gitId":"nichee"},"content":"className is the name of the `Classes` instance e.g. `CS2103.json`","lastModifiedDate":"2024-03-23"},{"lineNumber":267,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":268,"author":{"gitId":"nichee"},"content":"### 2. Changes to Storage","lastModifiedDate":"2024-03-23"},{"lineNumber":269,"author":{"gitId":"nichee"},"content":"Problem 1:","lastModifiedDate":"2024-03-23"},{"lineNumber":270,"author":{"gitId":"nichee"},"content":"The original structure of AB3 only allows for a single file path for storage, which was set to `addressbook.json` ","lastModifiedDate":"2024-03-23"},{"lineNumber":271,"author":{"gitId":"nichee"},"content":"by default. This was a big problem, as our intended implementation of the Classes feature necessitated","lastModifiedDate":"2024-03-23"},{"lineNumber":272,"author":{"gitId":"nichee"},"content":"multiple .json files to make sharing data between tutors easier. \u003cbr /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":273,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":274,"author":{"gitId":"nichee"},"content":"Solution 1 v1.0: ","lastModifiedDate":"2024-03-23"},{"lineNumber":275,"author":{"gitId":"nichee"},"content":"Rather than use the filepath specified in the `preferences.json`, `ModelManager` was changed to use","lastModifiedDate":"2024-03-23"},{"lineNumber":276,"author":{"gitId":"nichee"},"content":"its own instance of `Storage`, to call the `saveAddressBook` with `selectedClass.getFilePath()`","lastModifiedDate":"2024-03-23"},{"lineNumber":277,"author":{"gitId":"nichee"},"content":"as the second parameter. This works, but SLAP is not ideal with the current implementation.","lastModifiedDate":"2024-03-23"},{"lineNumber":278,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":279,"author":{"gitId":"nichee"},"content":"### 3. Changes to UI","lastModifiedDate":"2024-03-23"},{"lineNumber":280,"author":{"gitId":"nichee"},"content":"Problem 1:","lastModifiedDate":"2024-03-23"},{"lineNumber":281,"author":{"gitId":"nichee"},"content":"Since the original AB3 had only one command (find) that required the UI to be updated, the UI was implemented to update ","lastModifiedDate":"2024-03-23"},{"lineNumber":282,"author":{"gitId":"nichee"},"content":"based on the contents of the `filteredPersonsList`. This was inadequate for our classes feature, which","lastModifiedDate":"2024-03-23"},{"lineNumber":283,"author":{"gitId":"nichee"},"content":"requires the UI\u0027s `PersonListPanel` to be updated upon selecting a different class. ","lastModifiedDate":"2024-03-23"},{"lineNumber":284,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":285,"author":{"gitId":"nichee"},"content":"Solution 1:","lastModifiedDate":"2024-03-23"},{"lineNumber":286,"author":{"gitId":"nichee"},"content":"A list of `UiUpdateListener` - `List\u003cUiUpdateListener\u003e uiUpdateListeners` is created in ModelManager by calling ","lastModifiedDate":"2024-03-23"},{"lineNumber":287,"author":{"gitId":"nichee"},"content":"`modelManager.addUiUpdateListener(uiManager);` in MainApp. The listeners monitors for calls to the `select` command,","lastModifiedDate":"2024-03-23"},{"lineNumber":288,"author":{"gitId":"nichee"},"content":"and call `mainWindow.fillInnerParts()` to update the UI PersonListPanel.","lastModifiedDate":"2024-03-23"},{"lineNumber":289,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":290,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":291,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":292,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"AndrewOng2066"},"content":"* NUS CS2103T Tutors who has to keep track of students\u0027 profile and progress during class","lastModifiedDate":"2024-03-18"},{"lineNumber":312,"author":{"gitId":"AndrewOng2066"},"content":"* has a need to manage a significant number of contact","lastModifiedDate":"2024-03-18"},{"lineNumber":313,"author":{"gitId":"AndrewOng2066"},"content":"* manages student\u0027s profile such as attendance, grade, etc","lastModifiedDate":"2024-03-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"AndrewOng2066"},"content":"**Value proposition**: Makes tutors life easier by increasing convenience of checking progress and compacting all the relevant information for easy access (GitHub PR reviews, Canvas quiz results, iP progress tracker, etc.)","lastModifiedDate":"2024-03-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                 | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"|----------|--------------------------------------------|------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-09-12"},{"lineNumber":328,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | new user who enters the program for the first time | select the class that I want | view all the students in that selected class |","lastModifiedDate":"2024-03-18"},{"lineNumber":329,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | new user| create new class | separate students into their respective classes |","lastModifiedDate":"2024-03-18"},{"lineNumber":330,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user| delete class | remove classes that is not needed anymore |","lastModifiedDate":"2024-03-18"},{"lineNumber":331,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user | add a new student to my class | keep track of my students\u0027 profiles |","lastModifiedDate":"2024-03-18"},{"lineNumber":332,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user | remove a student from the class | keep an updated record of students in the class |","lastModifiedDate":"2024-03-18"},{"lineNumber":333,"author":{"gitId":"AndrewOng2066"},"content":"| `* *`    | user | write descriptions for each student | take note of certain students based on the description |","lastModifiedDate":"2024-03-18"},{"lineNumber":334,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user | create an attendance sheet for my students | record a student\u0027s attendance |","lastModifiedDate":"2024-03-18"},{"lineNumber":335,"author":{"gitId":"AndrewOng2066"},"content":"| `* *`    | user | edit the attendance sheet of students | conveniently make changes to attendance when necessary |","lastModifiedDate":"2024-03-18"},{"lineNumber":336,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user | record attendance status for my students (PRESENT, ABSENT, VALID REASON) | acknowledge their attendance |","lastModifiedDate":"2024-03-18"},{"lineNumber":337,"author":{"gitId":"AndrewOng2066"},"content":"| `* * *`  | user | delete an attendance sheet | remove any unnecessary attendance sheet |","lastModifiedDate":"2024-03-18"},{"lineNumber":338,"author":{"gitId":"AndrewOng2066"},"content":"| `*`      | organised user | browse my contacts in the default alphabetical setting | easily scroll to find a particular contact |","lastModifiedDate":"2024-03-18"},{"lineNumber":339,"author":{"gitId":"AndrewOng2066"},"content":"| `* *`    | forgetful user | schedule reminders for important events or follow-ups associated with a specific contact | don\u0027t miss important dates or tasks |","lastModifiedDate":"2024-03-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"AndrewOng2066"},"content":"(For all use cases below, the **System** is the `TutorHelperBot` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"AndrewOng2066"},"content":"**Use case: Select a class when the program is first opened (UC-01)**","lastModifiedDate":"2024-03-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"AndrewOng2066"},"content":"1.  User enters the program","lastModifiedDate":"2024-03-18"},{"lineNumber":351,"author":{"gitId":"AndrewOng2066"},"content":"2.  TutorHelperBot shows a list of classes","lastModifiedDate":"2024-03-18"},{"lineNumber":352,"author":{"gitId":"AndrewOng2066"},"content":"3.  User selects a class","lastModifiedDate":"2024-03-18"},{"lineNumber":353,"author":{"gitId":"AndrewOng2066"},"content":"4.  TuthorHelperBot shows the list of students in the selected class","lastModifiedDate":"2024-03-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"AndrewOng2066"},"content":"  * 2a1. TutorHelperBot shows a message that the list is empty.","lastModifiedDate":"2024-03-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"AndrewOng2066"},"content":"* 3a. The user enters an invalid class.","lastModifiedDate":"2024-03-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"AndrewOng2066"},"content":"    * 3a1. TutorHelperBot shows an error message about selecting an invalid class.","lastModifiedDate":"2024-03-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":368,"author":{"gitId":"AndrewOng2066"},"content":"      Use case ends.","lastModifiedDate":"2024-03-18"},{"lineNumber":369,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":370,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":371,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":372,"author":{"gitId":"AndrewOng2066"},"content":"**Use case: Create new class (UC-02)**","lastModifiedDate":"2024-03-18"},{"lineNumber":373,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":374,"author":{"gitId":"AndrewOng2066"},"content":"**MSS**","lastModifiedDate":"2024-03-18"},{"lineNumber":375,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":376,"author":{"gitId":"AndrewOng2066"},"content":"1.  User requests to create new class with all the details","lastModifiedDate":"2024-03-18"},{"lineNumber":377,"author":{"gitId":"AndrewOng2066"},"content":"2.  TutorHelperBot shows the created class","lastModifiedDate":"2024-03-18"},{"lineNumber":378,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":379,"author":{"gitId":"AndrewOng2066"},"content":"    Use case ends.","lastModifiedDate":"2024-03-18"},{"lineNumber":380,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":381,"author":{"gitId":"AndrewOng2066"},"content":"**Extensions**","lastModifiedDate":"2024-03-18"},{"lineNumber":382,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":383,"author":{"gitId":"AndrewOng2066"},"content":"* 1a. Enter an invalid command.","lastModifiedDate":"2024-03-18"},{"lineNumber":384,"author":{"gitId":"AndrewOng2066"},"content":"  * 1a1. TutorHelperBot shows an error message.","lastModifiedDate":"2024-03-18"},{"lineNumber":385,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":386,"author":{"gitId":"AndrewOng2066"},"content":"  Use case ends.","lastModifiedDate":"2024-03-18"},{"lineNumber":387,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":388,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":389,"author":{"gitId":"AndrewOng2066"},"content":"**Use case: Select a student\u0027s profile (UC-03)**","lastModifiedDate":"2024-03-18"},{"lineNumber":390,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":391,"author":{"gitId":"AndrewOng2066"},"content":"**MSS**","lastModifiedDate":"2024-03-18"},{"lineNumber":392,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":393,"author":{"gitId":"AndrewOng2066"},"content":"1.  User requests to view a student\u0027s profile","lastModifiedDate":"2024-03-18"},{"lineNumber":394,"author":{"gitId":"AndrewOng2066"},"content":"2.  TutorHelperBot shows the details of the selected student","lastModifiedDate":"2024-03-18"},{"lineNumber":395,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":396,"author":{"gitId":"AndrewOng2066"},"content":"    Use case ends.","lastModifiedDate":"2024-03-18"},{"lineNumber":397,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":398,"author":{"gitId":"AndrewOng2066"},"content":"**Extensions**","lastModifiedDate":"2024-03-18"},{"lineNumber":399,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":400,"author":{"gitId":"AndrewOng2066"},"content":"* 1a. Enter an invalid command.","lastModifiedDate":"2024-03-18"},{"lineNumber":401,"author":{"gitId":"AndrewOng2066"},"content":"  * 1a1. TutorHelperBot shows an error message.","lastModifiedDate":"2024-03-18"},{"lineNumber":402,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":403,"author":{"gitId":"AndrewOng2066"},"content":"* 1b. Enter an invalid student","lastModifiedDate":"2024-03-18"},{"lineNumber":404,"author":{"gitId":"AndrewOng2066"},"content":"  * 1a1. TutorHelperBot shows an error message that stated student is not existed.","lastModifiedDate":"2024-03-18"},{"lineNumber":405,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":406,"author":{"gitId":"AndrewOng2066"},"content":"  Use case ends.","lastModifiedDate":"2024-03-18"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"AndrewOng2066"},"content":"2.  Should be able to hold up to 1000 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-18"},{"lineNumber":415,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"AndrewOng2066"},"content":"4.  Each class should accept up to 30 students without issue","lastModifiedDate":"2024-03-18"},{"lineNumber":417,"author":{"gitId":"AndrewOng2066"},"content":"5.  No student should exist in more than 2 classes","lastModifiedDate":"2024-03-18"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":433,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":434,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AndrewOng2066":88,"nichee":34,"-":356}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Setting up and getting started\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Setting up and getting started","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"   1. Run the `seedu.studentId.Main` and try a few commands.","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   **Tip:**","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"AndrewOng2066":1,"-":60}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Testing guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Testing guide","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c!-- -------------------------------------------------------------------------------------------------------------------- --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"   e.g. `seedu.studentId.commons.StringUtilTest`","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"   e.g. `seedu.studentId.storage.StorageManagerTest`","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"   e.g. `seedu.studentId.logic.LogicManagerTest`","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":3,"-":38}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"# TutorHelperBot User Guide","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"TutorHelperBot is a **desktop app for managing your tutorial contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, TutorHelperBot can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"1. Download the latest `addressbook.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TutorHelperBot.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"   * `view` : Lists all classes to select from.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"   * `create c/CS2101` : Creates a class with course code `CS2101` in the Class Book.","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"  ","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"   * `select 1` : Selects the specified class of index 1 from the class list.","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com s/A0251980B ar/01-01-2011` : Adds a student named `John Doe` to the Student Book.","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"  e.g `n/NAME [ar/DATE]` can be used as `n/John Doe ar/01-01-2011` or as `n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"  e.g. `[ar/DATE]…​` can be used as ` ` (i.e. 0 times), `ar/01-01-2011`, `ar/01-01-2011 ar/01-02-2011` etc.","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"### Creating a class : `create`","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"Simultaneously creates a class in the ClassBook and an empty StudentBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"![CreateClassCommand](images/CreateClassCommand.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"Format: `create c/CLASS_NAME`","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"Examples: ","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"* `create c/CS2101`","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"* `create c/CS2103T`","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"### Viewing the classes : `view`","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"Shows list of classes in result display.","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"![ViewCommand](images/ViewCommand.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"Format: `view`","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"### Selecting a class to view : `select`","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"Shows a list of all students in the selected class.","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"![SelectCommand](images/SelectCommand.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"Format: `select INDEX`","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"### Adding a student : `add`","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"Adds a student to the StudentBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL s/STUDENT_ID [ar/DATE]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"**Tip:** A student can have any number of attendances (including 0)","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"* `add n/John Doe p/98765432 e/johnd@gmail.com s/A0251980B ar/01-01-2011`","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"* `add n/John Doe p/98765432 e/johnd@gmail.com s/A0251980B`","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"taniatsq"},"content":"### Editing a student : `edit`","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"taniatsq"},"content":"Edits an existing student in the StudentBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [s/STUDENT_ID] [ar/DATE]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"* Edits the student at the specified `INDEX`. The index refers to the index number shown in the displayed student list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"* When editing attendances, the existing attendances of the student will be removed i.e adding of attendances is not cumulative.","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"* You can remove all the student’s attendances by typing `ar/` without","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"    specifying any attendances after it.","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email studentId of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-19"},{"lineNumber":139,"author":{"gitId":"taniatsq"},"content":"*  `edit 2 n/Betsy Crower ar/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing attendances.","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"taniatsq"},"content":"### Listing a class to view : `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"taniatsq"},"content":"Lists all students in the class.","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"taniatsq"},"content":"Format: `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"taniatsq"},"content":"### Locating students by name : `find`","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"taniatsq"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"taniatsq"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"taniatsq"},"content":"* `find andrew` returns `andrew` and `Andrew`","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"taniatsq"},"content":"  ![Find example 1](images/FindCommandCapsInsensitive.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"taniatsq"},"content":"* `find nic faaheem` returns `nic`, `faaheem`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"taniatsq"},"content":"  ![result for \u0027find nic faaheem\u0027](images/FindExample2.png)","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"taniatsq"},"content":"### Deleting a student : `delete`","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"taniatsq"},"content":"Deletes the specified student from the StudentBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"taniatsq"},"content":"* Deletes the student at the specified `INDEX`.","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"taniatsq"},"content":"* The index refers to the index number shown in the displayed student list.","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"taniatsq"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the StudentBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"taniatsq"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st student in the results of the `find` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"taniatsq"},"content":"### Removing a class: `rm`","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"taniatsq"},"content":"Removes the specified class from the ClassBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"taniatsq"},"content":"Format: `rm INDEX`","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"taniatsq"},"content":"* Deletes the class at the specified `INDEX`.","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"taniatsq"},"content":"* The index refers to the index number shown in the displayed class list.","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"taniatsq"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"taniatsq"},"content":"* Removes class from ClassBook and entire StudentBook from that class as well, i.e. [JAR file location]/data/classbook/[ClassName].json will be simultaneously deleted.","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"taniatsq"},"content":"Clears all entries from the StudentBook in a selected class.","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"taniatsq"},"content":"ClassBook and StudentBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":210,"author":{"gitId":"taniatsq"},"content":"ClassBook and StudentBook data are saved automatically as a JSON file `[JAR file location]/data/classbook.json` and `[JAR file location]/data/classbook/[ClassName].json` respectively. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"taniatsq"},"content":"If your changes to the data file makes its format invalid, StudentBook will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"taniatsq"},"content":"Furthermore, certain edits can cause the StudentBook to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":236,"author":{"gitId":"taniatsq"},"content":"2. **When using view after selecting a class**, if you try to view classes after having selected a class, the StudentBook of the previously selected class will still be on display, until you select another class.","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Action     | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"-----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**Clear**  | `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**List**   | `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**Help**   | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"nichee"},"content":"**View**   | `view`","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"taniatsq"},"content":"**Select** | `select INDEX` \u003cbr\u003e e.g., `select 1`","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"taniatsq"},"content":"**Create** | `create c/CLASS_NAME` \u003cbr\u003e e.g., `create c/CS2103`","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"AndrewOng2066":4,"taniatsq":82,"nichee":2,"-":165}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eTutorHelperBot\u003c/a\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/se-edu/addressbook-level3\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"AndrewOng2066":1,"-":66}},{"path":"docs/diagrams/AddAttendanceRecordSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"[-\u003e UI : \"attendance ar/06-06-2024\")","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"activate UI","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"UI -\u003e Logic : execute(\"attendance ar/06-06-2024\")","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"activate Logic","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"Logic -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"Model --\u003e Logic : list of person","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"loop every row in the list of person","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"Logic -\u003e Model : setPerson(person)","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"Logic -\u003e Model : updateFilteredPersonList(...)","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"end","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"Logic -\u003e Storage: saveClassBook(classBook)","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"activate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"Storage -\u003e Storage : save to file","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"activate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"deactivate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"AndrewOng2066":28}},{"path":"docs/diagrams/AddPersonClassBookRelationship.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"faaheem13"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"faaheem13"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"faaheem13"},"content":"class Person {","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"faaheem13"},"content":"  - name: String","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"faaheem13"},"content":"  - phone: String","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"faaheem13"},"content":"  - email: String","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":"  - studentId: String","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"faaheem13"},"content":"  - description: String","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"faaheem13"},"content":"  + setDescription(description: String): void","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"faaheem13"},"content":"class AddressBook {","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"faaheem13"},"content":"  - persons: UniquePersonList","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"faaheem13"},"content":"  + addPerson(person: Person): void","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"faaheem13"},"content":"  + removePerson(person: Person): void","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"faaheem13"},"content":"  + getPersonList(): ObservableList\u003cPerson\u003e","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"faaheem13"},"content":"class ClassBook {","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"faaheem13"},"content":"  - classes: UniqueClassList","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"faaheem13"},"content":"  - addressBook: AddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":22,"author":{"gitId":"faaheem13"},"content":"  + createClass(classes: Classes): void","lastModifiedDate":"2024-03-22"},{"lineNumber":23,"author":{"gitId":"faaheem13"},"content":"  + removeClass(classes: Classes): void","lastModifiedDate":"2024-03-22"},{"lineNumber":24,"author":{"gitId":"faaheem13"},"content":"  + setAddressBook(addressBook: AddressBook): void","lastModifiedDate":"2024-03-22"},{"lineNumber":25,"author":{"gitId":"faaheem13"},"content":"  + getAddressBook(): AddressBook","lastModifiedDate":"2024-03-22"},{"lineNumber":26,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":27,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":28,"author":{"gitId":"faaheem13"},"content":"class AddCommand {","lastModifiedDate":"2024-03-22"},{"lineNumber":29,"author":{"gitId":"faaheem13"},"content":"  - toAdd: Person","lastModifiedDate":"2024-03-22"},{"lineNumber":30,"author":{"gitId":"faaheem13"},"content":"  + execute(model: Model): CommandResult","lastModifiedDate":"2024-03-22"},{"lineNumber":31,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":32,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":33,"author":{"gitId":"faaheem13"},"content":"class Model {","lastModifiedDate":"2024-03-22"},{"lineNumber":34,"author":{"gitId":"faaheem13"},"content":"  + addPerson(person: Person): void","lastModifiedDate":"2024-03-22"},{"lineNumber":35,"author":{"gitId":"faaheem13"},"content":"  + setAddressBook(addressBook: AddressBook): void","lastModifiedDate":"2024-03-22"},{"lineNumber":36,"author":{"gitId":"faaheem13"},"content":"  + setClassBook(classBook: ClassBook): void","lastModifiedDate":"2024-03-22"},{"lineNumber":37,"author":{"gitId":"faaheem13"},"content":"}","lastModifiedDate":"2024-03-22"},{"lineNumber":38,"author":{"gitId":"faaheem13"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":39,"author":{"gitId":"faaheem13"},"content":"Person \"1\" --\u003e \"*\" AddressBook: contains","lastModifiedDate":"2024-03-22"},{"lineNumber":40,"author":{"gitId":"faaheem13"},"content":"ClassBook \"1\" --\u003e \"1\" AddressBook: contains","lastModifiedDate":"2024-03-22"},{"lineNumber":41,"author":{"gitId":"faaheem13"},"content":"AddCommand ..\u003e Person: adds","lastModifiedDate":"2024-03-22"},{"lineNumber":42,"author":{"gitId":"faaheem13"},"content":"AddCommand ..\u003e Model: uses","lastModifiedDate":"2024-03-22"},{"lineNumber":43,"author":{"gitId":"faaheem13"},"content":"Model ..\u003e ClassBook: manages","lastModifiedDate":"2024-03-22"},{"lineNumber":44,"author":{"gitId":"faaheem13"},"content":"Model ..\u003e AddressBook: manages","lastModifiedDate":"2024-03-22"},{"lineNumber":45,"author":{"gitId":"faaheem13"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"faaheem13":45}},{"path":"docs/diagrams/CreateClassSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"@startuml","lastModifiedDate":"2024-03-22"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2024-03-22"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"[-\u003e UI : \"create c/CS2103T\"","lastModifiedDate":"2024-03-22"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"activate UI","lastModifiedDate":"2024-03-22"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"UI -\u003e Logic : execute(\"create \"create c/CS2103T\"","lastModifiedDate":"2024-03-22"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"activate Logic","lastModifiedDate":"2024-03-22"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"Logic -\u003e Model : createClass(c)","lastModifiedDate":"2024-03-22"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"activate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"deactivate Model","lastModifiedDate":"2024-03-22"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"Logic -\u003e Storage: saveClassBook(classBook)","lastModifiedDate":"2024-03-22"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"activate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"Storage -\u003e Storage : save to file","lastModifiedDate":"2024-03-22"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"activate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"deactivate Storage","lastModifiedDate":"2024-03-22"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-22"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"@enduml","lastModifiedDate":"2024-03-22"}],"authorContributionMap":{"taniatsq":21}},{"path":"docs/diagrams/SelectClassCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"@startuml","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"UI -\u003e Logic : execute(\"select class\")","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"activate Logic","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"Logic -\u003e Model : selectClass(classes)","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"activate Model","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"Model -\u003e Storage : new JsonAddressBookStorage(selectedClass.getFilePath())","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"activate Storage","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"Storage -\u003e Storage : readAddressBook()","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"activate Storage","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"alt Address book data is present","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    Storage --\u003e Model : optionalAddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    Model -\u003e Model : new AddressBook(optionalAddressBook.get())","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    Model -\u003e Model : updateFilteredPersonList(updatedPerson -\u003e true)","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    Model --\u003e Logic : selectedClassAddressBook updated","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    Model -\u003e Model : updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS)","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    Model --\u003e Logic : filtered person list updated","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"    Logic -\u003e Storage : saveClassBook(classBook)","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"    activate Storage","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"    Storage -\u003e Storage : save to file","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"    deactivate Storage","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"else","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"    Storage -\u003e Logic : DataLoadingException","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    Logic --\u003e UI : Error: Failed to load address book data","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"    deactivate Model","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"    deactivate Logic","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"    UI -\u003e UI : Display error message","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"end","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"deactivate Model","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"deactivate Logic","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"alt Update UI","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"    UI -\u003e UIUpdateListener : updateUiOnClassSelected(classes)","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"    activate UIUpdateListener","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"    UIUpdateListener -\u003e UI : Update UI","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"    deactivate UIUpdateListener","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"else","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"    UI -\u003e UI : No UI update required","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"end","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"@enduml","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"nichee":45}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"John Doe\u0027s Project Portfolio Page\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"AddressBook - Level 3 is a desktop studentId book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"AndrewOng2066":1,"-":45}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their studentId book and edit it if required. The command should have the following format:","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/studentId/logic/command` directory.","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.studentId.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.studentId.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":" * Changes the remark of an existing person in the studentId book.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.studentId.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"Create a `RemarkCommandParser` class in the `seedu.studentId.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2024-03-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"AndrewOng2066"},"content":"Create a new `Remark` in `seedu.studentId.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2024-03-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"AndrewOng2066"},"content":"Simply add the following to [`seedu.studentId.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2024-03-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"AndrewOng2066"},"content":"You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty studentId book!","lastModifiedDate":"2024-03-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"AndrewOng2066":10,"-":392}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Removing Fields","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `studentId` field from `Person` class.","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"success\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `studentId` field can be done similarly.","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"The `studentId` field in `Person` is actually an instance of the `seedu.address.model.person.StudentIdss` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"1. Safe delete the field `studentId` in `EditPersonDescriptor`.","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"1. Remove the usages of `studentId` and select `Do refactor` when you are done.","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"   **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `studentId` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `studentId` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$studentId` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"![$studentId](../images/remove/$studentId.png)","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"private Label studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"\u003cLabel fx:id\u003d\"studentId\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentId\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `studentId` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"    \"studentId\": \"4th street\"","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"You can go through each individual `json` file and manually remove the `studentId` field.","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":14,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Tracing code","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c!-- {:toc} --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureDiagram.puml\" alt\u003d\"ArchitectureDiagram\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.studentId.logic.Logic`.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"A quick look at the `seedu.studentId.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/ComponentManagers.puml\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2023-09-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"**Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/tracing/LogicSequenceDiagram.puml\" alt\u003d\"Tracing an `edit` command through the Logic component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"   ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     \u003cpuml src\u003d\"../diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    \u003cpuml src\u003d\"../diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"   \u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"   **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"   \u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"1. As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"   \u003cpuml src\u003d\"../diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    ```java","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"AndrewOng2066"},"content":"    3.  Save the studentId book in the CSV format instead","lastModifiedDate":"2024-03-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"AndrewOng2066"},"content":"    6.  Add a new entity to the studentId book","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":4,"-":307}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"import seedu.address.storage.ClassBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"import seedu.address.storage.JsonClassBookStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 2, true);","lastModifiedDate":"2023-08-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        ClassBookStorage classBookStorage \u003d new JsonClassBookStorage(userPrefs.getClassBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, classBookStorage);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"nichee"},"content":"        ModelManager modelManager \u003d (ModelManager) model;","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"nichee"},"content":"        UiManager uiManager \u003d (UiManager) ui;","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"nichee"},"content":"        modelManager.addUiUpdateListener(uiManager);","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"        logger.info(\"Using address data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        logger.info(\"Using class data file : \" + storage.getClassBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"        Optional\u003cReadOnlyClassBook\u003e classBookOptional;","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"        ReadOnlyClassBook initClasses;","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"            classBookOptional \u003d storage.readClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"            if (!classBookOptional.isPresent()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"                logger.info(\"Creating a new data file \" + storage.getClassBookFilePath()","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"                        + \" populated with a sample ClassBook.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"            initClasses \u003d classBookOptional.orElseGet(SampleDataUtil::getSampleClassBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"            logger.warning(\"Data file at \" + storage.getClassBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"                    + \" Will be starting with an empty ClassBook.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"            initClasses \u003d new ClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"        return new ModelManager(initialData, userPrefs, initClasses);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":201,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"taniatsq":24,"nichee":7,"-":183}},{"path":"src/main/java/seedu/address/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * Creates a file with specified filePath if it does not exist along with its missing parent directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"     * Creates a file with specified fileName if it does not exist along with its missing parent directories.","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    public static void createIfMissing(String file) throws IOException {","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        if (!isFileExists(Paths.get(file))) {","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"            createFile(Paths.get(file));","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"taniatsq":10,"-":82}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    ReadOnlyClassBook getClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    ObservableList\u003cClasses\u003e getFilteredClassList();","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"    Path getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"taniatsq":8,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.parser.ClassBookParser;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    private final ClassBookParser classBookParser;","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        classBookParser \u003d new ClassBookParser();","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"        // Not adding to addressbook.json anymore","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"        //        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"        //            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"        //        } catch (AccessDeniedException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"nichee"},"content":"        //            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"nichee"},"content":"        //        } catch (IOException ioe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"nichee"},"content":"        //            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"nichee"},"content":"        //        }","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"            storage.saveClassBook(model.getClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"    public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"        return model.getClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"    public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        return model.getFilteredClassList();","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"    public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        return model.getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"taniatsq":24,"nichee":8,"-":87}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_DATE_NOT_FOUND \u003d \"The entered date is not found\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_NO_PERSON_IN_THE_CLASS \u003d \"Currently no one in the class\";","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_DUPLICATE_DATE_ATTENDANCE \u003d \"The entered date already exists in the \"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"            + \"Attendance Record\";","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    public static final String MESSAGE_INVALID_CLASS_DISPLAYED_INDEX \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"            \"The class index provided is invalid\";","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"                .append(\"; StudentId: \")","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"                .append(person.getStudentId());","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"     * Formats the {@code classes} for display to the user.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    public static String classFormat(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"        builder.append(classes.getCourseCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AndrewOng2066":7,"taniatsq":11,"nichee":2,"-":47}},{"path":"src/main/java/seedu/address/logic/commands/AddAttendanceRecordCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.EditCommand.MESSAGE_DUPLICATE_PERSON;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":" * Adds an attendance record to students.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"public class AddAttendanceRecordCommand extends Command {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Add attendance record. \"","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_RECORD + \"DATE\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            + \"Example: \" + COMMAND_WORD + \" ar/ 19-03-2024\";","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"attendance command not implemented yet\";","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New attendance added for: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Date: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    private Attendance date;","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * Creates an AddAttendanceRecord to add the specified {@code date}","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    public AddAttendanceRecordCommand(Attendance date) {","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        requireAllNonNull(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            throw new CommandException(Messages.MESSAGE_NO_PERSON_IN_THE_CLASS);","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"        for (Attendance i : lastShownList.get(0).getAttendances()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            if (date.attendanceName.getDate().equals(i.attendanceName.getDate())) {","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATE_DATE_ATTENDANCE);","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            Index index \u003d Index.fromZeroBased(i);","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"            EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setName(lastShownList.get(i).getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setPhone(lastShownList.get(i).getPhone());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setEmail(lastShownList.get(i).getEmail());","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setStudentId(lastShownList.get(i).getStudentId());","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"            Set\u003cAttendance\u003e set \u003d new HashSet\u003c\u003e(lastShownList.get(i).getAttendances());","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            if (set \u003d\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"                set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"            set.add(this.date);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setAttendances(set);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"            Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, date));","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"                                             EditCommand.EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId updatedStudentId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d editPersonDescriptor.getTags().orElse(personToEdit.getAttendances());","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedStudentId, updatedAttendances);","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"            return true;","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"        if (!(other instanceof AddAttendanceRecordCommand)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"            return false;","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand otherAddAttendanceRecordCommand \u003d (AddAttendanceRecordCommand) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"        return date.equals(otherAddAttendanceRecordCommand.date);","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":121}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":" * Adds a person to the currently selected class\u0027 address book.","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_STUDENTID + \"STUDENTID \"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"            + \"[\" + PREFIX_ATTENDANCE_RECORD + \"Attendance]...\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_STUDENTID + \"A0255333B \"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_RECORD + \"friends \"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_RECORD + \"owesMoney\";","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: %1$s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the class\";","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AndrewOng2066":9,"nichee":1,"-":74}},{"path":"src/main/java/seedu/address/logic/commands/CreateClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" * Creates a class to the classbook.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"public class CreateClassCommand extends Command {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    public static final String COMMAND_WORD \u003d \"create\";","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates a class. \"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"            + PREFIX_CLASS + \"CLASS_CODE\";","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New class added: %1$s\";","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"This class already exists\";","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    private final Classes toCreate;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    public CreateClassCommand(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        toCreate \u003d classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        if (model.hasClass(toCreate)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CLASS);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"        model.createClass(toCreate);","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.classFormat(toCreate)));","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"        if (!(other instanceof CreateClassCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand otherCreateClassCommand \u003d (CreateClassCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        return toCreate.equals(otherCreateClassCommand.toCreate);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        return new ToStringBuilder(this).add(\"toCreate\", toCreate).toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":67}},{"path":"src/main/java/seedu/address/logic/commands/EditAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_STATUS;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":" * Edits the details of an attendance record of an existing person in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"public class EditAttendanceCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String COMMAND_WORD \u003d \"edita\";","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the attendance record of the person identified \"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            + \"by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            + \"[\" + PREFIX_ATTENDANCE_RECORD + \"Attendance] \"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            + \"[\" + PREFIX_ATTENDANCE_STATUS + \"Status]\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_RECORD + \"20-03-2024 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_STATUS + \"0\";","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    private final Index index;","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    public EditAttendanceCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        this.editPersonDescriptor \u003d editPersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"    private static Person createEditedPerson(Person personToEdit,","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"                                             EditPersonDescriptor editPersonDescriptor) throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId updatedStudentId \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getStudentId());","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        boolean found \u003d false;","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        for (Attendance a : personToEdit.getAttendances()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"            if (a.attendanceName.getDate().equals(editPersonDescriptor.getAttendances().attendanceName.getDate())) {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                a.attendanceName.setStatus(editPersonDescriptor.getAttendances().attendanceName.getStatus());","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"                found \u003d true;","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"                break;","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"        if (!found) {","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"            throw new CommandException(Messages.MESSAGE_DATE_NOT_FOUND);","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedStudentId, personToEdit.getAttendances());","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"            return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"            return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        EditAttendanceCommand otherEditAttendanceCommand \u003d (EditAttendanceCommand) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        return index.equals(otherEditAttendanceCommand.index)","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditAttendanceCommand.editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"    public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"                .add(\"index\", index)","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"                .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2024-03-20"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"        private Name name;","lastModifiedDate":"2024-03-20"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"        private Phone phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"        private Email email;","lastModifiedDate":"2024-03-20"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"        private StudentId studentId;","lastModifiedDate":"2024-03-20"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"        private Attendance attendances;","lastModifiedDate":"2024-03-20"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2024-03-20"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"         * Copy constructor.","lastModifiedDate":"2024-03-20"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2024-03-20"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"            setName(toCopy.name);","lastModifiedDate":"2024-03-20"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2024-03-20"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2024-03-20"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"            setAttendances(toCopy.attendances);","lastModifiedDate":"2024-03-20"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2024-03-20"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2024-03-20"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, studentId, attendances);","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"        public void setName(Name name) {","lastModifiedDate":"2024-03-20"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"            this.name \u003d name;","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":171,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":176,"author":{"gitId":"AndrewOng2066"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2024-03-20"},{"lineNumber":177,"author":{"gitId":"AndrewOng2066"},"content":"            this.email \u003d email;","lastModifiedDate":"2024-03-20"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":180,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2024-03-20"},{"lineNumber":181,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2024-03-20"},{"lineNumber":182,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2024-03-20"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cStudentId\u003e getAddress() {","lastModifiedDate":"2024-03-20"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2024-03-20"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2024-03-20"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"        public void setAttendances(Attendance attendances) {","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"            this.attendances \u003d attendances;","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"AndrewOng2066"},"content":"        /**","lastModifiedDate":"2024-03-20"},{"lineNumber":201,"author":{"gitId":"AndrewOng2066"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-20"},{"lineNumber":202,"author":{"gitId":"AndrewOng2066"},"content":"         * if modification is attempted.","lastModifiedDate":"2024-03-20"},{"lineNumber":203,"author":{"gitId":"AndrewOng2066"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"AndrewOng2066"},"content":"         */","lastModifiedDate":"2024-03-20"},{"lineNumber":205,"author":{"gitId":"AndrewOng2066"},"content":"        public Attendance getAttendances() {","lastModifiedDate":"2024-03-20"},{"lineNumber":206,"author":{"gitId":"AndrewOng2066"},"content":"            return attendances;","lastModifiedDate":"2024-03-20"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2024-03-20"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-20"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"                return true;","lastModifiedDate":"2024-03-20"},{"lineNumber":213,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":214,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":215,"author":{"gitId":"AndrewOng2066"},"content":"            // instanceof handles nulls","lastModifiedDate":"2024-03-20"},{"lineNumber":216,"author":{"gitId":"AndrewOng2066"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":217,"author":{"gitId":"AndrewOng2066"},"content":"                return false;","lastModifiedDate":"2024-03-20"},{"lineNumber":218,"author":{"gitId":"AndrewOng2066"},"content":"            }","lastModifiedDate":"2024-03-20"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":220,"author":{"gitId":"AndrewOng2066"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2024-03-20"},{"lineNumber":221,"author":{"gitId":"AndrewOng2066"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2024-03-20"},{"lineNumber":222,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2024-03-20"},{"lineNumber":224,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(studentId, otherEditPersonDescriptor.studentId)","lastModifiedDate":"2024-03-20"},{"lineNumber":225,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(attendances, otherEditPersonDescriptor.attendances);","lastModifiedDate":"2024-03-20"},{"lineNumber":226,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"AndrewOng2066"},"content":"        public String toString() {","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"AndrewOng2066"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"AndrewOng2066"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"AndrewOng2066"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"AndrewOng2066"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"AndrewOng2066"},"content":"                    .add(\"studentid\", studentId)","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"AndrewOng2066"},"content":"                    .toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":238,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":239,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"AndrewOng2066":239}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"            + \"[\" + PREFIX_STUDENTID + \"STUDENTID] \"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            + \"[\" + PREFIX_ATTENDANCE_RECORD + \"Attendance]...\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId updatedStudentId \u003d editPersonDescriptor.getStudentId().orElse(personToEdit.getStudentId());","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e updatedAttendances \u003d editPersonDescriptor.getTags().orElse(personToEdit.getAttendances());","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedStudentId, updatedAttendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"        private StudentId studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"        private Set\u003cAttendance\u003e attendances;","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"            setStudentId(toCopy.studentId);","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"            setAttendances(toCopy.attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, studentId, attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"        public void setStudentId(StudentId studentId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"            this.studentId \u003d studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cStudentId\u003e getStudentId() {","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.ofNullable(studentId);","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"AndrewOng2066"},"content":"        public void setAttendances(Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2024-03-19"},{"lineNumber":201,"author":{"gitId":"AndrewOng2066"},"content":"            this.attendances \u003d (attendances !\u003d null) ? new HashSet\u003c\u003e(attendances) : null;","lastModifiedDate":"2024-03-19"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"        public Optional\u003cSet\u003cAttendance\u003e\u003e getTags() {","lastModifiedDate":"2024-03-19"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"            return (attendances !\u003d null) ? Optional.of(Collections.unmodifiableSet(attendances)) : Optional.empty();","lastModifiedDate":"2024-03-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":228,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(studentId, otherEditPersonDescriptor.studentId)","lastModifiedDate":"2024-03-19"},{"lineNumber":229,"author":{"gitId":"AndrewOng2066"},"content":"                    \u0026\u0026 Objects.equals(attendances, otherEditPersonDescriptor.attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":238,"author":{"gitId":"AndrewOng2066"},"content":"                    .add(\"studentid\", studentId)","lastModifiedDate":"2024-03-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"AndrewOng2066":26,"-":216}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons in: \";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"        return new CommandResult(MESSAGE_SUCCESS + model.getSelectedClassName());","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"nichee":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/SelectClassCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":" * Selects the Class to be viewed or modified currently.","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"public class SelectClassCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here is your class: \";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Enters individual class view, \"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"            + \"displaying all students in the class\"","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"            + \"Parameters: view [index of class]...\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    private final Integer index;","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"    public SelectClassCommand(Integer index) {","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"        ObservableList\u003cClasses\u003e lastShownList \u003d model.getFilteredClassList();","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"        if (index \u003c 1 || index \u003e model.getFilteredClassList().size()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"            throw new IllegalArgumentException(Messages.MESSAGE_INVALID_CLASS_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"        Classes selectedClass \u003d lastShownList.get(index - 1);","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"nichee"},"content":"        model.selectClass(selectedClass);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"nichee"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"nichee"},"content":"        return new CommandResult(MESSAGE_SUCCESS + selectedClass.getCourseCode());","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"taniatsq":1,"nichee":47}},{"path":"src/main/java/seedu/address/logic/commands/ViewClassesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":" * Lists all Classes in the UniqueClassList to the user.","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"public class ViewClassesCommand extends Command {","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are your classes: \";","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        String formattedClassList \u003d model.getFormattedClassList();","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"        return new CommandResult(MESSAGE_SUCCESS + formattedClassList);","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"nichee":23}},{"path":"src/main/java/seedu/address/logic/parser/AddAttendanceRecordCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.AddAttendanceRecordCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":" * Parses input arguments and creates a new AddAttendanceRecordCommand object","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"public class AddAttendanceRecordCommandParser implements Parser\u003cAddAttendanceRecordCommand\u003e {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses the given {@code String} of arguments in the context of the AddAttendanceRecordCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"     * and returns an AddAttendanceRecordCommand object for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public AddAttendanceRecordCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ATTENDANCE_RECORD);","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ATTENDANCE_RECORD)","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"                    AddAttendanceRecordCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ATTENDANCE_RECORD);","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance attendance \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_ATTENDANCE_RECORD).get());","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        return new AddAttendanceRecordCommand(attendance);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":49}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"                        PREFIX_STUDENTID, PREFIX_ATTENDANCE_RECORD);","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_STUDENTID, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STUDENTID);","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId studentId \u003d ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get());","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e attendanceList \u003d ParserUtil.parseAttendances(","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"                argMultimap.getAllValues(PREFIX_ATTENDANCE_RECORD));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        Person person \u003d new Person(name, phone, email, studentId, attendanceList);","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"AndrewOng2066":12,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.AddAttendanceRecordCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.EditAttendanceCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"import seedu.address.logic.commands.SelectClassCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"import seedu.address.logic.commands.ViewClassesCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"        case CreateClassCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"            return new CreateClassCommandParser().parse(arguments);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"        case ViewClassesCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"            return new ViewClassesCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        case AddAttendanceRecordCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddAttendanceRecordCommandParser().parse(arguments);","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"        case EditAttendanceCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"            return new EditAttendanceCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"        case SelectClassCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"            return new SelectClassCommandParser().parse(arguments);","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AndrewOng2066":7,"taniatsq":5,"nichee":8,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ClassBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":" * Parses user input.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"public class ClassBookParser {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ClassBookParser.class);","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"     * @param userInput full user input string","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * @return the command based on the user input","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        switch (commandWord) {","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"        case CreateClassCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"            return new CreateClassCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        default:","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":53}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public static final Prefix PREFIX_STUDENTID \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"    public static final Prefix PREFIX_CLASS \u003d new Prefix(\"c/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    public static final Prefix PREFIX_ATTENDANCE_RECORD \u003d new Prefix(\"ar/\");","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    public static final Prefix PREFIX_ATTENDANCE_STATUS \u003d new Prefix(\"st/\");","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AndrewOng2066":3,"taniatsq":1,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/CreateClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" * Parses user input and creates a new CreateClassCommand.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"public class CreateClassCommandParser implements Parser\u003cCreateClassCommand\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    public CreateClassCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_CLASS);","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASS)","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_CLASS);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        Classes classes \u003d ParserUtil.parseClass(argMultimap.getValue(PREFIX_CLASS).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"        return new CreateClassCommand(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":36}},{"path":"src/main/java/seedu/address/logic/parser/EditAttendanceCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_STATUS;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Collection;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.EditAttendanceCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.EditAttendanceCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":" * Parses input arguments and creates a new EditAttendanceCommand object","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"public class EditAttendanceCommandParser implements Parser\u003cEditAttendanceCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public EditAttendanceCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ATTENDANCE_RECORD, PREFIX_ATTENDANCE_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        Index index;","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"                    EditAttendanceCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_ATTENDANCE_RECORD, PREFIX_ATTENDANCE_STATUS)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"                    EditAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_ATTENDANCE_RECORD, PREFIX_ATTENDANCE_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        AttendanceStatus attendanceStatus \u003d ParserUtil.parsesAttendanceStatus(","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                argMultimap.getValue(PREFIX_ATTENDANCE_RECORD).get(),","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"                argMultimap.getValue(PREFIX_ATTENDANCE_STATUS).get());","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        editPersonDescriptor.setAttendances(new Attendance(attendanceStatus));","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        return new EditAttendanceCommand(index, editPersonDescriptor);","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2024-03-20"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2024-03-20"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    private Optional\u003cSet\u003cAttendance\u003e\u003e parseAttendanceForEdit(Collection\u003cString\u003e attendances) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        assert attendances !\u003d null;","lastModifiedDate":"2024-03-20"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"        if (attendances.isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        Collection\u003cString\u003e tagSet \u003d attendances.size() \u003d\u003d 1 \u0026\u0026 attendances.contains(\"\")","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"                ? Collections.emptySet() : attendances;","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        return Optional.of(ParserUtil.parseAttendances(tagSet));","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"AndrewOng2066":81}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"                        PREFIX_STUDENTID, PREFIX_ATTENDANCE_RECORD);","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STUDENTID);","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        if (argMultimap.getValue(PREFIX_STUDENTID).isPresent()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            editPersonDescriptor.setStudentId(ParserUtil.parseStudentId(argMultimap.getValue(PREFIX_STUDENTID).get()));","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        parseAttendanceForEdit(argMultimap.getAllValues(PREFIX_ATTENDANCE_RECORD))","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"                .ifPresent(editPersonDescriptor::setAttendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"    private Optional\u003cSet\u003cAttendance\u003e\u003e parseAttendanceForEdit(Collection\u003cString\u003e attendances) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        assert attendances !\u003d null;","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        if (attendances.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        Collection\u003cString\u003e tagSet \u003d attendances.size() \u003d\u003d 1 \u0026\u0026 attendances.contains(\"\")","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"                ? Collections.emptySet() : attendances;","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        return Optional.of(ParserUtil.parseAttendances(tagSet));","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"AndrewOng2066":16,"-":72}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"    public static StudentId parseStudentId(String studentId) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        String trimmedStudentId \u003d studentId.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        if (!StudentId.isValidStudentId(trimmedStudentId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        return new StudentId(trimmedStudentId);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"     * Parses a {@code String course code} into an {@code Classes}.","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"     * @throws ParseException if the given {@code courseCode} is invalid.","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"    public static Classes parseClass(String courseCode) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"        String trimmedCourseCode \u003d courseCode.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        if (!CourseCode.isValidClass(trimmedCourseCode)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"            throw new ParseException(CourseCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"        return new Classes(new CourseCode(trimmedCourseCode));","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses a {@code String date} into an {@code AttendanceDate}.","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"    public static Attendance parseDate(String date) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"        if (!Attendance.isValidDate(trimmedDate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"        return new Attendance(new AttendanceStatus(trimmedDate, \"1\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses a {@code String date} into a {@code Attendance}.","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"     * @throws ParseException if the given {@code attendance} is invalid.","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"    public static Attendance parseAttendances(String date) throws ParseException {","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"        String trimmedTag \u003d date.trim();","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"        if (!Attendance.isValidDate(trimmedTag)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"        return new Attendance(new AttendanceStatus(trimmedTag, \"1\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses {@code Collection\u003cString\u003e attendances} into a {@code Set\u003cAttendance\u003e}.","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"    public static Set\u003cAttendance\u003e parseAttendances(Collection\u003cString\u003e attendances) throws ParseException {","lastModifiedDate":"2024-03-19"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"        final Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"        for (String attendanceName : attendances) {","lastModifiedDate":"2024-03-19"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"            attendanceSet.add(parseAttendances(attendanceName));","lastModifiedDate":"2024-03-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"        return attendanceSet;","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"     * Parses {@code String date} and {@code String status} into a {@code AttendanceStatus}.","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"    public static AttendanceStatus parsesAttendanceStatus(String date, String status) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(date, status);","lastModifiedDate":"2024-03-20"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2024-03-20"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"        if (!Attendance.isValidDate(trimmedDate) || !Attendance.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"        return new AttendanceStatus(date, status);","lastModifiedDate":"2024-03-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"AndrewOng2066":48,"taniatsq":10,"-":112}},{"path":"src/main/java/seedu/address/logic/parser/SelectClassCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import seedu.address.logic.commands.SelectClassCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"public class SelectClassCommandParser implements Parser\u003cSelectClassCommand\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"nichee"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"nichee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"    public SelectClassCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"            int index \u003d Integer.parseInt(args.trim());","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"            return new SelectClassCommand(index);","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"                    SelectClassCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"nichee":27}},{"path":"src/main/java/seedu/address/model/ClassBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.UniqueClassList;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" * Wraps all data at the class-book level.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" * Duplicates are not allowed.","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"public class ClassBook implements ReadOnlyClassBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    //storage not considered yet, need to set up storage and copy info over","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    private final UniqueClassList classList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"     * Creates an ClassBook using the Classes in the {@code toBeCopied}","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public ClassBook(ReadOnlyClassBook toBeCopied) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        this();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    public ClassBook() {}","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"     * Replaces the contents of the class list with {@code classes}.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"     * {@code classes} must not contain duplicate classes.","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    public void setClasses(List\u003cClasses\u003e classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"        this.classList.setClasses(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"     * Resets the existing data of this {@code ClassBook} with {@code newData}.","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    public void resetData(ReadOnlyClassBook newData) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(newData);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        setClasses(newData.getClassList());","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     * Returns true if a class that is the same as {@code classes} exists in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        return classList.contains(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"     * Creates a class in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"     * The class must not already exist in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"    public void createClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"        classList.add(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"     * Replaces the given classes {@code target} in the list with {@code editedClass}.","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"     * {@code target} must exist in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"     * The class of {@code editedClass} must not be the same as another existing class in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    public void setClass(Classes target, Classes editedClass) {","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(editedClass);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"        classList.setClass(target, editedClass);","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"     * Removes {@code classes} from this {@code classList}.","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"     * {@code classes} must exist in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"    public void removeClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"        classList.remove(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"                .add(\"classes\", classList)","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"    public ObservableList\u003cClasses\u003e getClassList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        return classList.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        if (!(other instanceof ClassBook)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"        ClassBook otherClassBook \u003d (ClassBook) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"        return classList.equals(otherClassBook.classList);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        return classList.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":109}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"    Path getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    void setClassBookFilePath(Path classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"    void setClassBook(ReadOnlyClassBook classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    ReadOnlyClassBook getClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    ObservableList\u003cClasses\u003e getFilteredClassList();","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"    String getFormattedClassList();","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"    void createClass(Classes classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"    void removeClass(Classes classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"    boolean hasClass(Classes classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"    void selectClass(Classes classes);","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"nichee"},"content":"    String getSelectedClassName();","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"taniatsq":18,"nichee":2,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"nichee"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"import seedu.address.ui.UiUpdateListener;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"    private final List\u003cUiUpdateListener\u003e uiUpdateListeners;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"    // private final AddressBook addressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    private final ClassBook classBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    private final FilteredList\u003cClasses\u003e filteredClasses;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"    private Classes selectedClass;","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"    private AddressBook selectedClassAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"nichee"},"content":"    private JsonAddressBookStorage Storage;","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyClassBook classBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        requireAllNonNull(addressBook, userPrefs, classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"                + \"and class book: \" + classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"        this.selectedClassAddressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2024-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"        this.classBook \u003d new ClassBook(classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"nichee"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.selectedClassAddressBook.getPersonList());","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        filteredClasses \u003d new FilteredList\u003c\u003e(this.classBook.getClassList());","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"nichee"},"content":"        // Set an initial predicate that always evaluates to false in order to hide people on startup","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"nichee"},"content":"        Predicate\u003cPerson\u003e initialPredicate \u003d person -\u003e false;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"nichee"},"content":"        filteredPersons.setPredicate(initialPredicate);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"nichee"},"content":"        uiUpdateListeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        this(new AddressBook(), new UserPrefs(), new ClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"    public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"        return userPrefs.getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"    public void setClassBookFilePath(Path classBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"        userPrefs.setClassBookFilePath(classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"nichee"},"content":"        this.selectedClassAddressBook.resetData(addressBook);","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"nichee"},"content":"        return selectedClassAddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"    public void setClassBook(ReadOnlyClassBook classBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"        this.classBook.resetData(classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"    public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"        return classBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"nichee"},"content":"        return selectedClassAddressBook.hasPerson(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"taniatsq"},"content":"    public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":145,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":146,"author":{"gitId":"taniatsq"},"content":"        return classBook.hasClass(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":151,"author":{"gitId":"nichee"},"content":"        selectedClassAddressBook.removePerson(target);","lastModifiedDate":"2024-03-20"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"nichee"},"content":"        requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"nichee"},"content":"        selectedClassAddressBook.addPerson(person);","lastModifiedDate":"2024-03-20"},{"lineNumber":158,"author":{"gitId":"nichee"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.selectedClassAddressBook.getPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"nichee"},"content":"            this.Storage.saveAddressBook(selectedClassAddressBook, selectedClass.getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"nichee"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"nichee"},"content":"            logger.warning(\"Error adding person to the selected class address book: \" + e.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"nichee"},"content":"        Predicate\u003cPerson\u003e predicate \u003d updatedPerson -\u003e selectedClassAddressBook.getPersonList().contains(updatedPerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"nichee"},"content":"        updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":169,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":170,"author":{"gitId":"taniatsq"},"content":"    public void createClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":171,"author":{"gitId":"taniatsq"},"content":"        classBook.createClass(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":172,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":173,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":174,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":175,"author":{"gitId":"taniatsq"},"content":"    public void removeClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":176,"author":{"gitId":"taniatsq"},"content":"        classBook.removeClass(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":183,"author":{"gitId":"nichee"},"content":"        selectedClassAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2024-03-20"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"        // Update the storage with the edited AddressBook","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"            Storage.saveAddressBook(selectedClassAddressBook, selectedClass.getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"            logger.warning(\"Error saving the address book after editing person: \" + e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"            // Consider what action to take if saving fails","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"            // e.g., throw a new CommandException or runtime exception","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":196,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":197,"author":{"gitId":"nichee"},"content":"    public String getSelectedClassName() {","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"nichee"},"content":"            return this.selectedClass.getCourseCode().toString();","lastModifiedDate":"2024-03-20"},{"lineNumber":200,"author":{"gitId":"nichee"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"nichee"},"content":"            return \"No class selected!\";","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"taniatsq"},"content":"    public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"taniatsq"},"content":"        return filteredClasses;","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":226,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":227,"author":{"gitId":"nichee"},"content":"    public String getFormattedClassList() {","lastModifiedDate":"2024-03-20"},{"lineNumber":228,"author":{"gitId":"nichee"},"content":"        ObservableList\u003cClasses\u003e classesList \u003d this.getFilteredClassList();","lastModifiedDate":"2024-03-20"},{"lineNumber":229,"author":{"gitId":"nichee"},"content":"        String returnString \u003d \"\";","lastModifiedDate":"2024-03-20"},{"lineNumber":230,"author":{"gitId":"nichee"},"content":"        for (int i \u003d 0; i \u003c classesList.size(); i++) {","lastModifiedDate":"2024-03-20"},{"lineNumber":231,"author":{"gitId":"nichee"},"content":"            returnString +\u003d (i + 1) + \": \" + classesList.get(i).getCourseCode() + \"   \";","lastModifiedDate":"2024-03-20"},{"lineNumber":232,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":233,"author":{"gitId":"nichee"},"content":"        return returnString;","lastModifiedDate":"2024-03-20"},{"lineNumber":234,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":235,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":236,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":249,"author":{"gitId":"nichee"},"content":"        return selectedClassAddressBook.equals(otherModelManager.selectedClassAddressBook)","lastModifiedDate":"2024-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":251,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"nichee"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dClassBook accessors\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":255,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":256,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-20"},{"lineNumber":257,"author":{"gitId":"nichee"},"content":"    public void selectClass(Classes classes) {","lastModifiedDate":"2024-03-20"},{"lineNumber":258,"author":{"gitId":"nichee"},"content":"        requireNonNull(classes);","lastModifiedDate":"2024-03-20"},{"lineNumber":259,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":260,"author":{"gitId":"nichee"},"content":"        selectedClass \u003d classes;","lastModifiedDate":"2024-03-20"},{"lineNumber":261,"author":{"gitId":"nichee"},"content":"        // selectedClassAddressBook \u003d selectedClass.getAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":262,"author":{"gitId":"nichee"},"content":"        this.Storage \u003d new JsonAddressBookStorage(selectedClass.getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":263,"author":{"gitId":"nichee"},"content":"        userPrefs.setAddressBookFilePath(selectedClass.getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":264,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":265,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":266,"author":{"gitId":"nichee"},"content":"            Optional\u003cReadOnlyAddressBook\u003e optionalAddressBook \u003d Storage.readAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":267,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":268,"author":{"gitId":"nichee"},"content":"            if (optionalAddressBook.isPresent()) {","lastModifiedDate":"2024-03-21"},{"lineNumber":269,"author":{"gitId":"nichee"},"content":"                selectedClassAddressBook \u003d new AddressBook(optionalAddressBook.get());","lastModifiedDate":"2024-03-21"},{"lineNumber":270,"author":{"gitId":"nichee"},"content":"                filteredPersons \u003d new FilteredList\u003c\u003e(this.selectedClassAddressBook.getPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":271,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":272,"author":{"gitId":"nichee"},"content":"                updateFilteredPersonList(updatedPerson -\u003e true);","lastModifiedDate":"2024-03-21"},{"lineNumber":273,"author":{"gitId":"nichee"},"content":"            } else {","lastModifiedDate":"2024-03-21"},{"lineNumber":274,"author":{"gitId":"nichee"},"content":"                logger.warning(\"Failed to load address book data for class: \" + selectedClass);","lastModifiedDate":"2024-03-21"},{"lineNumber":275,"author":{"gitId":"nichee"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":276,"author":{"gitId":"nichee"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":277,"author":{"gitId":"nichee"},"content":"            logger.warning(\"Error loading address book data for class: \" + selectedClass);","lastModifiedDate":"2024-03-21"},{"lineNumber":278,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":279,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":280,"author":{"gitId":"nichee"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.selectedClassAddressBook.getPersonList());","lastModifiedDate":"2024-03-21"},{"lineNumber":281,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":282,"author":{"gitId":"nichee"},"content":"        // Predicate\u003cPerson\u003e predicate \u003d person -\u003e selectedClassAddressBook.getPersonList().contains(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":283,"author":{"gitId":"nichee"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-21"},{"lineNumber":284,"author":{"gitId":"nichee"},"content":"        for (UiUpdateListener listener : uiUpdateListeners) {","lastModifiedDate":"2024-03-23"},{"lineNumber":285,"author":{"gitId":"nichee"},"content":"            listener.updateUiOnClassSelected(classes);;","lastModifiedDate":"2024-03-21"},{"lineNumber":286,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":287,"author":{"gitId":"nichee"},"content":"        notifyUiUpdateListenersOnClassSelected(classes);","lastModifiedDate":"2024-03-23"},{"lineNumber":288,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":289,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":290,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":291,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":292,"author":{"gitId":"nichee"},"content":"    public void addUiUpdateListener(UiUpdateListener listener) {","lastModifiedDate":"2024-03-23"},{"lineNumber":293,"author":{"gitId":"nichee"},"content":"        uiUpdateListeners.add(listener);","lastModifiedDate":"2024-03-21"},{"lineNumber":294,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":295,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":296,"author":{"gitId":"nichee"},"content":"    public void removeUiUpdateListener(UiUpdateListener listener) {","lastModifiedDate":"2024-03-23"},{"lineNumber":297,"author":{"gitId":"nichee"},"content":"        uiUpdateListeners.remove(listener);","lastModifiedDate":"2024-03-21"},{"lineNumber":298,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":299,"author":{"gitId":"nichee"},"content":"    private void notifyUiUpdateListenersOnClassSelected(Classes selectedClass) {","lastModifiedDate":"2024-03-23"},{"lineNumber":300,"author":{"gitId":"nichee"},"content":"        for (UiUpdateListener listener : uiUpdateListeners) {","lastModifiedDate":"2024-03-23"},{"lineNumber":301,"author":{"gitId":"nichee"},"content":"            listener.updateUiOnClassSelected(selectedClass);","lastModifiedDate":"2024-03-21"},{"lineNumber":302,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":303,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":304,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AndrewOng2066":10,"taniatsq":46,"nichee":110,"-":139}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"     * Returns an unmodifiable view of the class list.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"taniatsq":1,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyClassBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":" * Unmodifiable view of a class book","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public interface ReadOnlyClassBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    ObservableList\u003cClasses\u003e getClassList();","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    Path getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"taniatsq":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    // private Path addressBookFilePath;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    private Path classBookFilePath \u003d Paths.get(\"data\", \"classbook.json\");","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"    public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        return classBookFilePath;","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"    public void setClassBookFilePath(Path classBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"        this.classBookFilePath \u003d classBookFilePath;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath)","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"                \u0026\u0026 classBookFilePath.equals(otherUserPrefs.classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        sb.append(\"\\nLocal data file location: \" + classBookFilePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AndrewOng2066":1,"taniatsq":14,"-":86}},{"path":"src/main/java/seedu/address/model/person/AttendanceStatus.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":" * Represents a Person\u0027s attendance record in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"public class AttendanceStatus {","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"    private String date;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    private String status;","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"     * @param date of the attendance","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"     * @param status of the student","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public AttendanceStatus(String date, String status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public String getDate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        return date;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStatus() {","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        return status;","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public void setDate(String date) {","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    public void setStatus(String status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        if (!(other instanceof AttendanceStatus)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        AttendanceStatus otherAttendance \u003d (AttendanceStatus) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        return date.equals(otherAttendance.date) \u0026\u0026 status.equals(otherAttendance.status);","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        return Objects.hash(date, status);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"AndrewOng2066":58}},{"path":"src/main/java/seedu/address/model/person/Classes.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":"import java.util.List;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":" * Represents a Class in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"public class Classes {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    private CourseCode courseCode; //tutorial grp","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"nichee"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"nichee"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"     * Constructor for Classes.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    public Classes(CourseCode courseCode) {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        this.courseCode \u003d courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        this.addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"        this.addressBookStorage \u003d new JsonAddressBookStorage(getFilePath());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"     * Getter function to return courseCode.","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * @return courseCode","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    public CourseCode getCourseCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        return courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"     * Returns true if both class have the same courseCode.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    public boolean isSameClass(Classes otherClass) {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"        if (otherClass \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        return otherClass !\u003d null \u0026\u0026 otherClass.getCourseCode().equals(getCourseCode());","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"        if (!(other instanceof Classes)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        Classes otherClass \u003d (Classes) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"        return courseCode.equals(otherClass.courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"        return Objects.hash(courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"                .add(\"courseCode\", courseCode)","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"                .toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"nichee"},"content":"    public List\u003cString\u003e getStudents() {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"nichee"},"content":"        return new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"nichee"},"content":"    public AddressBook getAddressBook() {","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"nichee"},"content":"        return this.addressBook;","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"    public Path getFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"        // Modify this method to generate the file path based on class name, etc.","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"        String fileName \u003d courseCode.getCourseCode() + \".json\";","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"        return Paths.get(\"data/classbook\", fileName);","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":70,"nichee":22}},{"path":"src/main/java/seedu/address/model/person/CourseCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":" * Represents a Classes\u0027s Course Code in the class book.","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public class CourseCode {","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Course codes should only contain alphanumeric characters \"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"            + \"and no spaces, and it should not be blank\";","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"    private String courseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    // private AddressBook studentlist \u003d arrays(students(arrays());","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"     * Constructor for CourseCode.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     * @param courseCode A valid course code.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    public CourseCode(String courseCode) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"        checkArgument(isValidClass(courseCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        this.courseCode \u003d courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * Returns true if a given string is a valid courseCode.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public static boolean isValidClass(String courseCode) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        return courseCode.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * Getter function that returns the course code.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     * @return course code","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    public String getCourseCode() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        return courseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        return courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"        if (!(other instanceof CourseCode)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        CourseCode otherCourseCode \u003d (CourseCode) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        return courseCode.equals(otherCourseCode.courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        return courseCode.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":65}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":" * Represents a Person\u0027s String email in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"     * Returns value as the string representation.","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return value.equals(otherEmail.value);","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"taniatsq":1,"nichee":3,"-":77}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    private final StudentId studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"    private final Set\u003cAttendance\u003e attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    public Person(Name name, Phone phone, Email email, StudentId studentId, Set\u003cAttendance\u003e attendances) {","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        requireAllNonNull(name, phone, email, studentId, attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        this.studentId \u003d studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        this.attendances.addAll(attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    public StudentId getStudentId() {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        return studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    public Set\u003cAttendance\u003e getAttendances() {","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"        return Collections.unmodifiableSet(attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"                \u0026\u0026 studentId.equals(otherPerson.studentId)","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"                \u0026\u0026 attendances.equals(otherPerson.attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"        return Objects.hash(name, phone, email, studentId, attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"                .add(\"studentid\", studentId)","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AndrewOng2066":15,"-":101}},{"path":"src/main/java/seedu/address/model/person/StudentId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"faaheem13"},"content":" * Represents a Person\u0027s (Student\u0027s) address in the address book.","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudentId(String)}","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"public class StudentId {","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Student ID must be in this format: \"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"            + \"first letter is \u0027A\u0027 followed by 7 digits and lastly with any letter\";","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"     * Format must be in: first letter is \u0027A\u0027 followed by 7 digits and lastly with any letter","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALIDATION_REGEX \u003d \"A[0-9]{7}[A-Z]\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"     * Constructs an {@code Studentid}.","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-03-08"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"     * @param studentId A valid studentId.","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    public StudentId(String studentId) {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(studentId);","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        checkArgument(isValidStudentId(studentId), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        value \u003d studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public static boolean isValidStudentId(String test) {","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        if (!(other instanceof StudentId)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId otherStudentId \u003d (StudentId) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        return value.equals(otherStudentId.value);","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"faaheem13":1,"AndrewOng2066":17,"-":49}},{"path":"src/main/java/seedu/address/model/person/UniqueClassList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.util.List;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" * A list of classes that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" * A class is considered unique by comparing using {@code Classes#isSameClass(Classes)}. As such, adding and updating of","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":" * Classes uses Classes#isSameClass(Classes) for equality so as to ensure that the class being added or updated is","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":" * unique in terms of identity in the UniqueClassList. However, the removal of a class uses Classes#equals(Object) so","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":" * as to ensure that the class with exactly the same fields will be removed.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":" *","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":" *","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":" * @see Classes#isSameClass(Classes)","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"public class UniqueClassList implements Iterable\u003cClasses\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    private final ObservableList\u003cClasses\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    private final ObservableList\u003cClasses\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     * Returns true if the list contains an equivalent classes as the given argument.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    public boolean contains(Classes toCheck) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        return internalList.stream().anyMatch(toCheck::isSameClass);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    public Iterator\u003cClasses\u003e iterator() {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"     * Adds a class to list.","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"    public void add(Classes toAdd) {","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"        //      if (contains(toAdd)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"        //      throw new DuplicateClassException()","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        //      }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"     * Replaces the classes {@code target} in the list with {@code editedClass}.","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"     * The class identity of {@code editedClass} must not be the same as another existing class in the list.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"    public void setClass(Classes target, Classes editedClass) {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        requireAllNonNull(target, editedClass);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"        //      if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"        //      throw new CcNotFoundException()","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        //      }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"        //      if (!target.isSamePerson(editedClass) \u0026\u0026 contains(editedClass) {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        //      throw new DuplicateClassException();","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        //      }","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        internalList.set(index, editedClass);","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"    public void setClasses(UniqueClassList replacement) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"    public void setClasses(List\u003cClasses\u003e classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"        requireAllNonNull(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"        //      if (!classesAreUnique(classes)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"        //      throw new DuplicateClassException();","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"        //      }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"        internalList.setAll(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"     * Removes the class from the list.","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"    public void remove(Classes toRemove) {","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"        internalList.remove(toRemove);","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"    public ObservableList\u003cClasses\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        if (!(other instanceof UniqueClassList)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList otherUniqueClassList \u003d (UniqueClassList) other;","lastModifiedDate":"2024-03-17"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"        return internalList.equals(otherUniqueClassList.internalList);","lastModifiedDate":"2024-03-17"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"taniatsq"},"content":"     * Returns true if {@code classes} contains only unique classes.","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"    private boolean classesAreUnique(List\u003cClasses\u003e classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"        for (int i \u003d 0; i \u003c classes.size() - 1; i++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"            for (int j \u003d i + 1; j \u003c classes.size(); j++) {","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"                if (classes.get(i).isSameClass(classes.get(j))) {","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"                    return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"                }","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"taniatsq"},"content":"        return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":138}},{"path":"src/main/java/seedu/address/model/tag/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidDate(String)} (String)}","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"public class Attendance {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Attendance date should be in dd-MM-yyyy\";","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALIDATION_REGEX \u003d \"(0[1-9]|[12][0-9]|3[01])-(0[1-9]|1[1,2])-(19|20)\\\\d{2}\";","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALIDATION_REGEX_STATUS \u003d \"[012]\";","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    public final AttendanceStatus attendanceName;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"     * Constructs a {@code aDate}.","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"     * @param attendanceName A valid date.","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    public Attendance(AttendanceStatus attendanceName) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        requireNonNull(attendanceName);","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        checkArgument(isValidDate(attendanceName.getDate()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        this.attendanceName \u003d attendanceName;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        return test.matches(VALIDATION_REGEX_STATUS);","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        if (!(other instanceof Attendance)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance otherAttendance \u003d (Attendance) other;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        return attendanceName.equals(otherAttendance.attendanceName);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"        return attendanceName.hashCode();","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        return \u0027[\u0027 + attendanceName.getDate() + \u0027]\u0027;","lastModifiedDate":"2024-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"AndrewOng2066":27,"-":45}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A1111111D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A2222222D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"Charlotte Oli\"), new Phone(\"93210283\"), new Email(\"char@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A3333333D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A4444444D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A5555555D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"nichee"},"content":"            //            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"nichee"},"content":"            //                new StudentId(\"A6666666D\"),","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"nichee"},"content":"            //                getAttendanceSet(\"02-02-2024\"))","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    public static Set\u003cAttendance\u003e getAttendanceSet(Attendance... strings) {","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e set \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        for (Attendance i : strings) {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            set.add(new Attendance(new AttendanceStatus(i.attendanceName.getDate(), \"1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"        return set;","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    public static Classes[] getSampleClasses() {","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        return new Classes[] {","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"            new Classes(new CourseCode(\"CS2103T\")),","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"            new Classes(new CourseCode(\"CS2101\"))","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        };","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"    public static ReadOnlyClassBook getSampleClassBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"        ClassBook sampleCb \u003d new ClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"        for (Classes sampleClasses : getSampleClasses()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"            sampleCb.createClass(sampleClasses);","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"        return sampleCb;","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"AndrewOng2066":10,"taniatsq":17,"nichee":18,"-":33}},{"path":"src/main/java/seedu/address/storage/ClassBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" * Represents a storage for {@link seedu.address.model.ClassBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"public interface ClassBookStorage {","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    Path getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"     * Returns ClassBook data as a {@link ReadOnlyClassBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    Optional\u003cReadOnlyClassBook\u003e readClassBook() throws DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"     * @see #getClassBookFilePath()","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    Optional\u003cReadOnlyClassBook\u003e readClassBook(Path filePath) throws DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    void createJsonFileForEachCC(Optional\u003cJsonSerializableClassBook\u003e classBook) throws IOException,","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"            IllegalValueException;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    void createJsonFileForEachCC(JsonSerializableClassBook classBook) throws IOException,","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"            IllegalValueException;","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"     * Saves the given {@link ReadOnlyClassBook} to the storage.","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"     * @param classBook cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    void saveClassBook(ReadOnlyClassBook classBook) throws IOException, IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     * @see #saveClassBook(ReadOnlyClassBook)","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    void saveClassBook(ReadOnlyClassBook classBook, Path filePath) throws IOException, IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":" * Jackson-friendly version of {@link Attendance}.","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"class JsonAdaptedAttendance {","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    private final String attendanceDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    private final String status;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public JsonAdaptedAttendance(@JsonProperty(\"date\") String attendanceDate, @JsonProperty(\"status\") String status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        this.attendanceDate \u003d attendanceDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        this.status \u003d status;","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    public JsonAdaptedAttendance(Attendance source) {","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        attendanceDate \u003d source.attendanceName.getDate();","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        status \u003d source.attendanceName.getStatus();","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    @JsonProperty(\"date\")","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    public String getAttendanceDate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        return attendanceDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    @JsonProperty(\"status\")","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    public String getStatus() {","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        return status;","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    public Attendance toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        if (!Attendance.isValidDate(attendanceDate)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            throw new IllegalValueException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        if (!Attendance.isValidStatus(status)) {","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            throw new IllegalValueException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        return new Attendance(new AttendanceStatus(attendanceDate, status));","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AndrewOng2066":28,"-":32}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":" * Jackson-friendly version of {@link Classes}.","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"public class JsonAdaptedClass {","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"CourseCode field is missing!\";","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    private final String courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     * Constructs a {@code JsonAdaptedClass} with the given class details.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public JsonAdaptedClass(@JsonProperty(\"courseCode\") String courseCode) {","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        this.courseCode \u003d courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"     * Converts a given {@code Classes} into this class for Jackson use.","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public JsonAdaptedClass(Classes source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        courseCode \u003d source.getCourseCode().getCourseCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     * Converts this Jackson-friendly adapted classes object into the model\u0027s {@code Classes} object.","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted class.","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    public Classes toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        if (!CourseCode.isValidClass(courseCode)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"            throw new IllegalValueException(CourseCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"        if (courseCode \u003d\u003d null) {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"                    CourseCode.class.getSimpleName()));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        final CourseCode modelCourseCode \u003d new CourseCode(courseCode);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        return new Classes(modelCourseCode);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":53}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    private final String studentid;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    private final List\u003cJsonAdaptedAttendance\u003e attendances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"studentid\") String studentid,","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"                             @JsonProperty(\"attendances\") List\u003cJsonAdaptedAttendance\u003e attendances) {","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        this.studentid \u003d studentid;","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        if (attendances !\u003d null) {","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"            this.attendances.addAll(attendances);","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        studentid \u003d source.getStudentId().value;","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        attendances.addAll(source.getAttendances().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"                .map(attendance -\u003e new JsonAdaptedAttendance(attendance.attendanceName.getDate(),","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"                        attendance.attendanceName.getStatus()))","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        final List\u003cAttendance\u003e personAttendances \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        for (JsonAdaptedAttendance tag : attendances) {","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"            personAttendances.add(tag.toModelType());","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"        if (studentid \u003d\u003d null) {","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"                    StudentId.class.getSimpleName()));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"        if (!StudentId.isValidStudentId(studentid)) {","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"            throw new IllegalValueException(StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"        final StudentId modelStudentId \u003d new StudentId(studentid);","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        final Set\u003cAttendance\u003e modelAttendances \u003d new HashSet\u003c\u003e(personAttendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelStudentId, modelAttendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AndrewOng2066":24,"-":87}},{"path":"src/main/java/seedu/address/storage/JsonClassBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":" * A class to access ClassBook data stored as a json file on the hard disk.","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"public class JsonClassBookStorage implements ClassBookStorage {","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonClassBookStorage.class);","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    private Path filePath;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    public JsonClassBookStorage(Path filePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        return filePath;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    public Optional\u003cReadOnlyClassBook\u003e readClassBook() throws DataLoadingException {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        return readClassBook(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"     * Similar to {@link #readClassBook()}.","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"     * @throws DataLoadingException if loading the data from storage failed.","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    public Optional\u003cReadOnlyClassBook\u003e readClassBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        Optional\u003cJsonSerializableClassBook\u003e jsonClassBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"                filePath, JsonSerializableClassBook.class);","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"        if (!jsonClassBook.isPresent()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"            return Optional.empty();","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        try {","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"            createJsonFileForEachCC(jsonClassBook);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"            return Optional.of(jsonClassBook.get().toModelType());","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"    public void createJsonFileForEachCC(Optional\u003cJsonSerializableClassBook\u003e classBook) throws IOException,","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"            IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"        List\u003cClasses\u003e classList \u003d classBook.get().toModelType().getClassList();","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"        for (Classes classes : classList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"            String cc \u003d classes.getCourseCode().getCourseCode();","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"            String jsonFileName \u003d \"data/classbook/\" + cc + \".json\";","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"            FileUtil.createIfMissing(jsonFileName);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"    public void createJsonFileForEachCC(JsonSerializableClassBook classBook) throws IOException,","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"            IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"        List\u003cClasses\u003e classList \u003d classBook.toModelType().getClassList();","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"        for (Classes classes : classList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"            String cc \u003d classes.getCourseCode().getCourseCode();","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"            String jsonFileName \u003d \"data/classbook/\" + cc + \".json\";","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"            FileUtil.createIfMissing(jsonFileName);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"    public void saveClassBook(ReadOnlyClassBook classBook) throws IOException, IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"        saveClassBook(classBook, filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"     * Similar to {@link #saveClassBook(ReadOnlyClassBook)}.","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"    public void saveClassBook(ReadOnlyClassBook classBook, Path filePath) throws IOException, IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"        createJsonFileForEachCC(new JsonSerializableClassBook(classBook));","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableClassBook(classBook), filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":111}},{"path":"src/main/java/seedu/address/storage/JsonSerializableClassBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"@JsonRootName(value \u003d \"classbook\")","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"class JsonSerializableClassBook {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    public static final String MESSAGE_DUPLICATE_CLASS \u003d \"Class list contains duplicate class(es).\";","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    private final List\u003cJsonAdaptedClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    public JsonSerializableClassBook(@JsonProperty(\"classes\") List\u003cJsonAdaptedClass\u003e classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        this.classes.addAll(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    public JsonSerializableClassBook(ReadOnlyClassBook source) {","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        classes.addAll(source.getClassList().stream().map(JsonAdaptedClass::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    public ClassBook toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        ClassBook classBook \u003d new ClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        for (JsonAdaptedClass jsonAdaptedClass : classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"            Classes classes \u003d jsonAdaptedClass.toModelType();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"            if (classBook.hasClass(classes)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CLASS);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"            classBook.createClass(classes);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        return classBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":43}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, ClassBookStorage {","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException;","lastModifiedDate":"2023-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    Path getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    Optional\u003cReadOnlyClassBook\u003e readClassBook() throws DataLoadingException;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    void saveClassBook(ReadOnlyClassBook classBook) throws IOException, IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"taniatsq":12,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    private ClassBookStorage classBookStorage;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"                          ClassBookStorage classBookStorage) {","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        this.classBookStorage \u003d classBookStorage;","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2023-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"    //classBook methods","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"    public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        return classBookStorage.getClassBookFilePath();","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"    public Optional\u003cReadOnlyClassBook\u003e readClassBook() throws DataLoadingException {","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"        return readClassBook(classBookStorage.getClassBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"    public Optional\u003cReadOnlyClassBook\u003e readClassBook(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"        return classBookStorage.readClassBook(filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"    public void createJsonFileForEachCC(Optional\u003cJsonSerializableClassBook\u003e classBook) throws IOException,","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"            IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"        classBookStorage.createJsonFileForEachCC(classBook);","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"    public void createJsonFileForEachCC(JsonSerializableClassBook classBook) throws IOException, IllegalValueException {","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        classBookStorage.createJsonFileForEachCC(classBook);","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"    public void saveClassBook(ReadOnlyClassBook classBook) throws IOException, IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"        saveClassBook(classBook, classBookStorage.getClassBookFilePath());","lastModifiedDate":"2024-03-17"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"    public void saveClassBook(ReadOnlyClassBook classBook, Path filePath) throws IOException, IllegalValueException {","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"        classBookStorage.saveClassBook(classBook, filePath);","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"taniatsq":46,"-":77}},{"path":"src/main/java/seedu/address/ui/ClassCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":" * An UI component that displays information of a {@code Classes}.","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"public class ClassCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    private static final String FXML \u003d \"ClassListCard.fxml\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"     *","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    public final Classes classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    private Label id;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    private Label courseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    public ClassCard(Classes classes, int displayedIndex) {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        super(FXML);","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        this.classes \u003d classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        courseCode.setText(classes.getCourseCode().getCourseCode());","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":42}},{"path":"src/main/java/seedu/address/ui/ClassListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":" * Panel containing the list of classes.","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"public class ClassListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    private static final String FXML \u003d \"ClassListPanel.fxml\";","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ClassListPanel.class);","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    private ListView\u003cClasses\u003e classListView;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    public ClassListPanel(ObservableList\u003cClasses\u003e classList) {","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        super(FXML);","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        classListView.setItems(classList);","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        classListView.setCellFactory(listView -\u003e new ClassListPanel.ClassListViewCell());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    class ClassListViewCell extends ListCell\u003cClasses\u003e {","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        protected void updateItem(Classes classes, boolean empty) {","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"            super.updateItem(classes, empty);","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"            if (empty || classes \u003d\u003d null) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"                setText(null);","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"            } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"                setGraphic(new ClassCard(classes, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"            }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":48,"nichee":1}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"nichee"},"content":"        executeInitialCommand();","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"nichee"},"content":"     * Executes the \"view\" command upon initialization.","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"    private void executeInitialCommand() {","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-20"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"            commandExecutor.execute(\"view\");","lastModifiedDate":"2024-03-20"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"            // Handle exceptions here","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"nichee":14,"-":85}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    private ClassListPanel classListPanel;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"    @FXML","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"    private StackPane classListPanelPlaceholder;","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"        //classListPanel \u003d new ClassListPanel(logic.getFilteredClassList());","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"taniatsq":2,"nichee":3,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import de.jensd.fx.glyphs.fontawesome.FontAwesomeIcon;","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import de.jensd.fx.glyphs.fontawesome.FontAwesomeIconView;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    private Label studentid;","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    @FXML","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    private FlowPane attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        studentid.setText(person.getStudentId().value);","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        person.getAttendances().stream()","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"                .sorted(Comparator.comparing(attendance -\u003e LocalDate.parse(attendance.attendanceName.getDate(),","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"                        DATE_TIME_FORMATTER)))","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"                .forEach(attendance -\u003e {","lastModifiedDate":"2024-03-20"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"                    FontAwesomeIconView icon \u003d createIconBasedOnStatus(attendance.attendanceName.getStatus());","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"                    // Creating an HBox to hold the label and the icon","lastModifiedDate":"2024-03-20"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"                    HBox hbox \u003d new HBox();","lastModifiedDate":"2024-03-20"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"                    hbox.setSpacing(5); // Set spacing between elements in HBox","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"                    // Creating a label for the date","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"                    Label dateLabel \u003d new Label(attendance.attendanceName.getDate() + \": \");","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"                    hbox.getChildren().add(dateLabel); // Add date label to HBox","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"                    // Add the icon to the HBox, positioning it to the right of the label","lastModifiedDate":"2024-03-20"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"                    hbox.getChildren().add(icon);","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"                    // Wrap the HBox in another HBox or a StackPane for the border","lastModifiedDate":"2024-03-20"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"                    HBox container \u003d new HBox(hbox); // Using HBox as a container","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"                    container.setPadding(new Insets(5)); // Padding inside the container","lastModifiedDate":"2024-03-20"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"                    container.setBorder(new Border(new BorderStroke(Color.BLACK,","lastModifiedDate":"2024-03-20"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"                            BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT)));","lastModifiedDate":"2024-03-20"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"                    container.setBackground(new Background(new BackgroundFill(Color.TRANSPARENT, CornerRadii.EMPTY,","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                            Insets.EMPTY)));","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"                    // Add the container to the attendance FlowPane","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"                    this.attendance.getChildren().add(container);","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"                });","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"     * Create Icon based on the status of the attendance record.","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"     *","lastModifiedDate":"2024-03-20"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"     * @param status of the attendance icon","lastModifiedDate":"2024-03-20"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"     * @return cross icon if the status is 0, tick icon if the status is 1, circle if the status is 2","lastModifiedDate":"2024-03-20"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"    private FontAwesomeIconView createIconBasedOnStatus(String status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        FontAwesomeIconView iconView;","lastModifiedDate":"2024-03-20"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        switch (status) {","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        case \"0\":","lastModifiedDate":"2024-03-20"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"            iconView \u003d new FontAwesomeIconView(FontAwesomeIcon.TIMES);","lastModifiedDate":"2024-03-20"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"            iconView.setFill(Color.RED);","lastModifiedDate":"2024-03-20"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        case \"1\":","lastModifiedDate":"2024-03-20"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"            iconView \u003d new FontAwesomeIconView(FontAwesomeIcon.CHECK);","lastModifiedDate":"2024-03-20"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"            iconView.setFill(Color.GREEN);","lastModifiedDate":"2024-03-20"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        case \"2\":","lastModifiedDate":"2024-03-20"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"            iconView \u003d new FontAwesomeIconView(FontAwesomeIcon.CIRCLE);","lastModifiedDate":"2024-03-20"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"            iconView.setFill(Color.BLUE);","lastModifiedDate":"2024-03-20"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"            break;","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"        default:","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"            iconView \u003d new FontAwesomeIconView(FontAwesomeIcon.QUESTION_CIRCLE);","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"            iconView.setFill(Color.GRAY);","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"        iconView.setSize(\"16\");","lastModifiedDate":"2024-03-20"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"        return iconView;","lastModifiedDate":"2024-03-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AndrewOng2066":79,"-":52}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"nichee"},"content":"     * Updates the list of persons displayed in the panel.","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"nichee"},"content":"     *","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"     * @param updatedList The updated list of persons to display.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"nichee"},"content":"    public void updateList(ObservableList\u003cPerson\u003e updatedList) {","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"nichee"},"content":"        personListView.setItems(updatedList);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nichee":8,"-":49}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"nichee"},"content":"public class UiManager implements Ui, UiUpdateListener {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"nichee"},"content":"     * Updates the UI when a class is selected.","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"nichee"},"content":"     * This method fills the inner parts of the main window based on the selected class.","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"nichee"},"content":"     * @param selectedClass The selected class.","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"nichee"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"nichee"},"content":"    public void updateUiOnClassSelected(Classes selectedClass) {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"nichee"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"nichee"},"content":"            //logic.selectClass(selectedClass); // Update the logic with the selected class","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"nichee"},"content":"            mainWindow.fillInnerParts(); // Fill the inner parts of the main window","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"nichee"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"nichee"},"content":"            logger.severe(\"Error updating UI on class selection: \" + e.getMessage());","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"nichee"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"nichee"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"nichee":17,"-":87}},{"path":"src/main/java/seedu/address/ui/UiUpdateListener.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nichee"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"nichee"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"nichee"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"nichee"},"content":" * Monitors for changes requiring UI to be updated","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"nichee"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"nichee"},"content":"public interface UiUpdateListener {","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"nichee"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"nichee"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"nichee"},"content":"     * Updates Ui when a new class is selected.","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"nichee"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"nichee"},"content":"    void updateUiOnClassSelected(Classes selectedClass);","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"nichee"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"nichee":14}},{"path":"src/main/resources/view/ClassListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"\u003c?import java.lang.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"\u003c?import java.util.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"\u003c!--\u003cAnchorPane xmlns\u003d\"http://javafx.com/javafx\"--\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"\u003c!--            xmlns:fx\u003d\"http://javafx.com/fxml\"--\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"\u003c!--            fx:controller\u003d\"view.ClassListCard\"--\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"\u003c!--            prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"\u003e--\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"\u003c!--\u003c/AnchorPane\u003e--\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"                \u003cLabel fx:id\u003d\"courseCode\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":39}},{"path":"src/main/resources/view/ClassListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"    \u003cListView fx:id\u003d\"classListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"taniatsq":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"      \u003cFlowPane fx:id\u003d\"attendance\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"      \u003cLabel fx:id\u003d\"studentid\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$studentid\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"AndrewOng2066":2,"-":34}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"import seedu.address.storage.JsonClassBookStorage;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        JsonClassBookStorage classBookStorage \u003d new JsonClassBookStorage(temporaryFolder.resolve(\"classBook.json\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, classBookStorage);","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS + \"class1\", model);","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"    //    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"    //    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"    //                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"    //    }","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"    //    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"    //    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"    //                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"    //    }","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"    public void getFilteredClassList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredClassList().remove(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"    public void getAddressBook_returnsAddressBookFromModel() {","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"        ReadOnlyAddressBook actualAddressBook \u003d model.getAddressBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedAddressBook, actualAddressBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"    public void geClassBook_returnsClassBookFromModel() {","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"        ClassBook expectedClassBook \u003d new ClassBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"        ReadOnlyClassBook actualClassBook \u003d model.getClassBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedClassBook, actualClassBook);","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"taniatsq"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"taniatsq"},"content":"        JsonClassBookStorage classBookStorage \u003d new JsonClassBookStorage(prefPath);","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":191,"author":{"gitId":"taniatsq"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, classBookStorage);","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"                + EMAIL_DESC_AMY + STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"AndrewOng2066"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withDate().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"AndrewOng2066":19,"taniatsq":22,"-":162}},{"path":"src/test/java/seedu/address/logic/commands/AddAttendanceRecordCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.Random;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"public class AddAttendanceRecordCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    public void constructor_nullAttendance_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAttendanceRecordCommand((null)));","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    public void execute_addAttendance_success() throws Exception {","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        // Setup your model with a few persons","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        Random random \u003d new Random();","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"        String date \u003d String.format(\"%02d-%02d-202%d\",","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"nichee"},"content":"                random.nextInt(27) + 1, random.nextInt(11) + 1, random.nextInt(9));","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance validAttendance \u003d new Attendance(new AttendanceStatus(date, \"1\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        CommandResult commandResult \u003d new AddAttendanceRecordCommand(validAttendance).execute(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(String.format(AddAttendanceRecordCommand.MESSAGE_SUCCESS, validAttendance),","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        // Further assertions to check if the attendance was correctly added to all persons","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    public void execute_emptyPersonList_throwsCommandException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"        Model model \u003d new ModelManager(); // No persons in the model","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance validAttendance \u003d new Attendance(new AttendanceStatus(\"19-03-2024\", \"1\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand addAttendanceRecordCommand \u003d new AddAttendanceRecordCommand(validAttendance);","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.MESSAGE_NO_PERSON_IN_THE_CLASS, () -\u003e addAttendanceRecordCommand.execute(model));","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance attendance1 \u003d new Attendance(new AttendanceStatus(\"19-03-2024\", \"1\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance attendance2 \u003d new Attendance(new AttendanceStatus(\"20-03-2024\", \"1\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand addAttendance1Command \u003d new AddAttendanceRecordCommand(attendance1);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand addAttendance2Command \u003d new AddAttendanceRecordCommand(attendance2);","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(addAttendance1Command.equals(addAttendance1Command));","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand addAttendance1CommandCopy \u003d new AddAttendanceRecordCommand(attendance1);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(addAttendance1Command.equals(addAttendance1CommandCopy));","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(addAttendance1Command.equals(1));","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(addAttendance1Command.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"        // different attendance -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(addAttendance1Command.equals(addAttendance2Command));","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"        public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"        public void setClassBookFilePath(Path classBookFilePath) {","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-21"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"        public void setClassBook(ReadOnlyClassBook classBook) {","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":170,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":171,"author":{"gitId":"AndrewOng2066"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-21"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"AndrewOng2066"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"AndrewOng2066"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"        public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"        public String getFormattedClassList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":198,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":201,"author":{"gitId":"AndrewOng2066"},"content":"        public void createClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":202,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":203,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"AndrewOng2066"},"content":"        public void removeClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"        public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"AndrewOng2066"},"content":"        public void selectClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":218,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"AndrewOng2066"},"content":"        public String getSelectedClassName() {","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"AndrewOng2066"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"AndrewOng2066"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"AndrewOng2066"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"AndrewOng2066"},"content":"    private class ModelStubAcceptingPersonAdded extends AddAttendanceRecordCommandTest.ModelStub {","lastModifiedDate":"2024-03-21"},{"lineNumber":231,"author":{"gitId":"AndrewOng2066"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-21"},{"lineNumber":232,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":233,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":234,"author":{"gitId":"AndrewOng2066"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":235,"author":{"gitId":"AndrewOng2066"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":236,"author":{"gitId":"AndrewOng2066"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2024-03-21"},{"lineNumber":237,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":238,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":239,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":240,"author":{"gitId":"AndrewOng2066"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-21"},{"lineNumber":241,"author":{"gitId":"AndrewOng2066"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"AndrewOng2066"},"content":"            personsAdded.add(person);","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-21"},{"lineNumber":247,"author":{"gitId":"AndrewOng2066"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":248,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":249,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":250,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":251,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"AndrewOng2066":250,"nichee":1}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    //    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    //    public void execute_newPerson_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    //        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    //        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getClassBook());","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    //        expectedModel.addPerson(validPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    //                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    //                expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    //    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AndrewOng2066":11,"taniatsq":2,"-":33}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"        public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"        public void setClassBookFilePath(Path classBookFilePath) {","lastModifiedDate":"2024-03-17"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":149,"author":{"gitId":"taniatsq"},"content":"        public void setClassBook(ReadOnlyClassBook classBook) {","lastModifiedDate":"2024-03-17"},{"lineNumber":150,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"taniatsq"},"content":"        public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":179,"author":{"gitId":"taniatsq"},"content":"        public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-17"},{"lineNumber":180,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":181,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"        public String getFormattedClassList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":193,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":194,"author":{"gitId":"taniatsq"},"content":"        public void createClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":195,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":196,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":197,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":198,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":199,"author":{"gitId":"taniatsq"},"content":"        public void removeClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":200,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-17"},{"lineNumber":201,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":202,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":203,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"taniatsq"},"content":"        public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-17"},{"lineNumber":205,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":206,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"        public void selectClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":214,"author":{"gitId":"AndrewOng2066"},"content":"        public String getSelectedClassName() {","lastModifiedDate":"2024-03-21"},{"lineNumber":215,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":216,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"AndrewOng2066":15,"taniatsq":42,"-":204}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"taniatsq":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALID_STUDENT_ID_AMY \u003d \"A1111222D\";","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALID_STUDENT_ID_BOB \u003d \"A2222222D\";","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALID_DATE_1 \u003d \"03-05-2024\";","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String VALID_DATE_2 \u003d \"02-05-2024\";","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String STUDENT_ID_DESC_AMY \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String STUDENT_ID_DESC_BOB \u003d \" \" + PREFIX_STUDENTID + VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String DATE_1 \u003d \" \" + PREFIX_ATTENDANCE_RECORD + VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String DATE_2 \u003d \" \" + PREFIX_ATTENDANCE_RECORD + VALID_DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String INVALID_STUDENT_ID_DESC \u003d \" \"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_STUDENTID; // empty string not allowed for addresses","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \"","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"            + PREFIX_ATTENDANCE_RECORD + \"32-02-2024\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withStudentId(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"                .withAttendances(VALID_DATE_2).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"                .withAttendances(VALID_DATE_1, VALID_DATE_2).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    public static final String VALID_CC \u003d \"CS2030S\";","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"    public static final String VALID_CC_DESC \u003d \" \" + PREFIX_CLASS + VALID_CC;","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    public static final String INVALID_CC \u003d \"@3c\u0026\";","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    public static final String INVALID_CC_DESC \u003d \" \" + PREFIX_CLASS + INVALID_CC;","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AndrewOng2066":18,"taniatsq":6,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/CreateClassCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyClassBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"import seedu.address.testutil.ClassBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"public class CreateClassCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    public void constructor_nullClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CreateClassCommand(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    public void execute_classAcceptedByModel_createSuccessful() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        ModelStubAcceptingClassCreated modelStub \u003d new ModelStubAcceptingClassCreated();","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        Classes validClass \u003d new ClassBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        CommandResult commandResult \u003d new CreateClassCommand(validClass).execute(modelStub);","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"        assertEquals(String.format(CreateClassCommand.MESSAGE_SUCCESS, Messages.classFormat(validClass)),","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"        assertEquals(Arrays.asList(validClass), modelStub.classesCreated);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    public void execute_duplicateClass_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        Classes validClass \u003d new ClassBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand createClassCommand \u003d new CreateClassCommand(validClass);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"        ModelStub modelStub \u003d new ModelStubWithClass(validClass);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"        assertThrows(CommandException.class, CreateClassCommand.MESSAGE_DUPLICATE_CLASS, () -\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"                createClassCommand.execute(modelStub));","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"        Classes cs1 \u003d new ClassBuilder().withCC(\"cc123\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"        Classes cs2 \u003d new ClassBuilder().withCC(\"cc789\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand createCs1Command \u003d new CreateClassCommand(cs1);","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand createCs2Command \u003d new CreateClassCommand(cs2);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        assertTrue(createCs1Command.equals(createCs1Command));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand cs1Copy \u003d new CreateClassCommand(cs1);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        assertTrue(createCs1Command.equals(cs1Copy));","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"        assertFalse(createCs1Command.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"        assertFalse(createCs1Command.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        assertFalse(createCs1Command.equals(createCs2Command));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand createClassCommand \u003d new CreateClassCommand(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"        String expected \u003d CreateClassCommand.class.getCanonicalName() + \"{toCreate\u003d\" + TYPICAL_CLASS_1 + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expected, createClassCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"        public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"taniatsq"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"taniatsq"},"content":"        public void setClassBookFilePath(Path classBookFilePath) {","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"taniatsq"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"taniatsq"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"taniatsq"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"taniatsq"},"content":"        public void setClassBook(ReadOnlyClassBook classBook) {","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"taniatsq"},"content":"        public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"taniatsq"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"taniatsq"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"taniatsq"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"taniatsq"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"taniatsq"},"content":"        public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"taniatsq"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"AndrewOng2066"},"content":"        public String getFormattedClassList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"taniatsq"},"content":"        public void createClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"taniatsq"},"content":"        public void removeClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"taniatsq"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"taniatsq"},"content":"        public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"taniatsq"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"AndrewOng2066"},"content":"        public void selectClass(Classes classes) {","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":209,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":210,"author":{"gitId":"AndrewOng2066"},"content":"        public String getSelectedClassName() {","lastModifiedDate":"2024-03-21"},{"lineNumber":211,"author":{"gitId":"AndrewOng2066"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":212,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":213,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"taniatsq"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"taniatsq"},"content":"    private class ModelStubWithClass extends CreateClassCommandTest.ModelStub {","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"taniatsq"},"content":"        private final Classes classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"taniatsq"},"content":"        ModelStubWithClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"taniatsq"},"content":"            requireNonNull(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"taniatsq"},"content":"            this.classes \u003d classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"taniatsq"},"content":"        public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"taniatsq"},"content":"            requireNonNull(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"taniatsq"},"content":"            return this.classes.isSameClass(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"taniatsq"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"taniatsq"},"content":"    private class ModelStubAcceptingClassCreated extends CreateClassCommandTest.ModelStub {","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"taniatsq"},"content":"        final ArrayList\u003cClasses\u003e classesCreated \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"taniatsq"},"content":"        public boolean hasClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"taniatsq"},"content":"            requireNonNull(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":242,"author":{"gitId":"taniatsq"},"content":"            return classesCreated.stream().anyMatch(classes::isSameClass);","lastModifiedDate":"2024-03-18"},{"lineNumber":243,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":245,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":246,"author":{"gitId":"taniatsq"},"content":"        public void createClass(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":247,"author":{"gitId":"taniatsq"},"content":"            requireNonNull(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"taniatsq"},"content":"            classesCreated.add(classes);","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":250,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":251,"author":{"gitId":"taniatsq"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":252,"author":{"gitId":"taniatsq"},"content":"        public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-18"},{"lineNumber":253,"author":{"gitId":"taniatsq"},"content":"            return new ClassBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":254,"author":{"gitId":"taniatsq"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":256,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"AndrewOng2066":15,"taniatsq":241}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetIndex);","lastModifiedDate":"2019-02-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetIndex\u003d\" + targetIndex + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"AndrewOng2066":7,"taniatsq":4,"-":116}},{"path":"src/test/java/seedu/address/logic/commands/EditAttendanceCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"class EditAttendanceCommandTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    private Model model;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"    private Person personToEdit;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    private Attendance updatedAttendance;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"    private EditAttendanceCommand.EditPersonDescriptor descriptor;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    private EditAttendanceCommand editAttendanceCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        // Assuming you have a method that creates a typical address book,","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        // and the typical address book has at least one person","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        AddressBook typicalAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        model \u003d new ModelManager(typicalAddressBook, new UserPrefs(), new ClassBook());","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"        personToEdit \u003d model.getFilteredPersonList().get(0); // Get the first person","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        updatedAttendance \u003d new Attendance(new AttendanceStatus(\"02-05-2024\", \"0\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor \u003d new EditAttendanceCommand.EditPersonDescriptor();","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.setAttendances(updatedAttendance);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        editAttendanceCommand \u003d new EditAttendanceCommand(Index.fromZeroBased(0), descriptor);","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    //    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    //    public void execute_validIndexAndAttendance_success() throws CommandException {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    //        CommandResult commandResult \u003d editAttendanceCommand.execute(model);","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertEquals(String.format(EditAttendanceCommand.MESSAGE_EDIT_PERSON_SUCCESS, personToEdit),","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    //                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    //        // Further assertions can be made here to ensure that the attendance record was edited correctly","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    //    }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"AndrewOng2066":44}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"    //        @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    //        public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    //            Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    //            EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    //            EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"    //            String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    //                    Messages.format(editedPerson));","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"    //            Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"    //                    new ClassBook(model.getClassBook()));","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    //            expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"    //            assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"    //        }","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    //        @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"    //        public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"AndrewOng2066"},"content":"    //            Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"    //            Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"    //            PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"    //            Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    //                    .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"    //            EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"    //                    .withPhone(VALID_PHONE_BOB).withAttendances(VALID_DATE_1).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"    //            EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"    //            String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"    //                    Messages.format(editedPerson));","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"    //            Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"AndrewOng2066"},"content":"    //                    new ClassBook(model.getClassBook()));","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"    //            expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"    //            assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"    //        }","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"                new ClassBook(model.getClassBook()));","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"                new ClassBook(model.getClassBook()));","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"AndrewOng2066":47,"taniatsq":7,"-":144}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAttendances(VALID_DATE_1).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", studentid\u003d\"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"AndrewOng2066":5,"-":65}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"taniatsq":3,"-":89}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), getTypicalClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getClassBook());","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"                ListCommand.MESSAGE_SUCCESS + \"class1\", expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        model.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        expectedModel.selectClass(new Classes(new CourseCode(\"class1\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        assertCommandSuccess(new ListCommand(), model,","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"                ListCommand.MESSAGE_SUCCESS + \"class1\", expectedModel);","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AndrewOng2066":10,"taniatsq":3,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddAttendanceRecordCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.AddAttendanceRecordCommand;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"public class AddAttendanceRecordCommandParserTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    // Reuse the parser object","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"    private AddAttendanceRecordCommandParser parser \u003d new AddAttendanceRecordCommandParser();","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"    public void parse_validArgs_returnsAddAttendanceRecordCommand() {","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        // Assume \"19-03-2024\" is a valid date for attendance and \"ar/\" is the prefix for attendance records","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d \" ar/19-03-2024\";","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"        AddAttendanceRecordCommand expectedCommand \u003d new AddAttendanceRecordCommand(new Attendance(","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"                new AttendanceStatus(\"19-03-2024\", \"1\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"        try {","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"            AddAttendanceRecordCommand command \u003d parser.parse(userInput);","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"Execution of command should not throw ParseException.\", pe);","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d \"\"; // Empty string is invalid","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public void parse_missingAttendanceRecordPrefix_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d \"19-03-2024\"; // Missing \"ar/\" prefix","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"    public void parse_duplicateAttendanceRecordPrefixes_throwsParseException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d \" ar/19-03-2024 ar/20-03-2024\"; // Duplicate \"ar/\" prefixes","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(userInput));","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"AndrewOng2066":48}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"                + STUDENT_ID_DESC_BOB + DATE_1, new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                        new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"AndrewOng2066"},"content":"                NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + STUDENT_ID_DESC_BOB","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"                        + DATE_1 + DATE_2,","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"                + STUDENT_ID_DESC_AMY + DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, STUDENT_ID_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENTID));","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"AndrewOng2066"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"AndrewOng2066"},"content":"                        + STUDENT_ID_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_STUDENTID, PREFIX_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"                        PREFIX_PHONE));","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, INVALID_STUDENT_ID_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENTID));","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_STUDENT_ID_DESC,","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDENTID));","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withDate().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + STUDENT_ID_DESC_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + STUDENT_ID_DESC_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + STUDENT_ID_DESC_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + STUDENT_ID_DESC_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_STUDENT_ID_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_STUDENT_ID_AMY,","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + STUDENT_ID_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"                + DATE_1 + DATE_2, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + STUDENT_ID_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"                + DATE_1 + DATE_2, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + STUDENT_ID_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"                + DATE_1 + DATE_2, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":186,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_STUDENT_ID_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"                + DATE_1 + DATE_2, StudentId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":190,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + STUDENT_ID_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":191,"author":{"gitId":"AndrewOng2066"},"content":"                + INVALID_DATE_DESC + DATE_2, Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_STUDENT_ID_DESC,","lastModifiedDate":"2024-03-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"                + STUDENT_ID_DESC_AMY + DATE_1 + DATE_2,","lastModifiedDate":"2024-03-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"AndrewOng2066":51,"-":151}},{"path":"src/test/java/seedu/address/logic/parser/ClassBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.testutil.ClassBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"public class ClassBookParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"    private final ClassBookParser parser \u003d new ClassBookParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    public void parseCommand_createClass() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"        Classes classes \u003d new ClassBuilder().build();","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"        CreateClassCommand command \u003d (CreateClassCommand) parser.parseCommand(PersonUtil.getClassCommand(classes));","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        assertEquals(new CreateClassCommand(classes), command);","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":22}},{"path":"src/test/java/seedu/address/logic/parser/CreateClassCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_CC_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CC_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"import seedu.address.testutil.ClassBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"public class CreateClassCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    private CreateClassCommandParser parser \u003d new CreateClassCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        Classes expectedClass \u003d new ClassBuilder().withCC(VALID_CC).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + VALID_CC_DESC, new CreateClassCommand(expectedClass));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CreateClassCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        assertParseFailure(parser, VALID_CC, expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        assertParseFailure(parser, INVALID_CC_DESC, CourseCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":40}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDENT_ID_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STUDENT_ID_DESC, StudentId.MESSAGE_CONSTRAINTS); //invalid address","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Attendance.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + DATE_1 + DATE_2 + TAG_EMPTY,","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"                Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + DATE_1 + TAG_EMPTY + DATE_2,","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"AndrewOng2066"},"content":"                Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + DATE_1 + DATE_2,","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"AndrewOng2066"},"content":"                Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_STUDENT_ID_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"                + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":113,"author":{"gitId":"AndrewOng2066"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + DATE_1","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"                + EMAIL_DESC_AMY + STUDENT_ID_DESC_BOB + NAME_DESC_AMY + DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withStudentId(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"                .withAttendances(VALID_DATE_1, VALID_DATE_2).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"        userInput \u003d targetIndex.getOneBased() + STUDENT_ID_DESC_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withStudentId(VALID_STUDENT_ID_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAttendances(VALID_DATE_1).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // valid followed by invalid","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid followed by valid","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // mulltiple valid fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":187,"author":{"gitId":"AndrewOng2066"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-21"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"                + DATE_1 + PHONE_DESC_AMY + STUDENT_ID_DESC_AMY + EMAIL_DESC_AMY + DATE_1","lastModifiedDate":"2024-03-21"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"                + PHONE_DESC_BOB + STUDENT_ID_DESC_AMY + EMAIL_DESC_BOB + DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":192,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STUDENTID));","lastModifiedDate":"2024-03-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + INVALID_STUDENT_ID_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"                + INVALID_PHONE_DESC + INVALID_STUDENT_ID_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_STUDENTID));","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"AndrewOng2066"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withAttendances().build();","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"AndrewOng2066":41,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_STUDENT_ID \u003d \"A1111111D\";","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_DATE_1 \u003d \"02-02-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_DATE_2 \u003d \"05-05-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_STATUS_1 \u003d \"1\";","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_STATUS_2 \u003d \"0\";","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseStudentId_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudentId((String) null));","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseStudentId_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudentId(INVALID_ADDRESS));","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseStudentId_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(VALID_STUDENT_ID));","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseStudentId_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_STUDENT_ID + WHITESPACE;","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId expectedStudentId \u003d new StudentId(VALID_STUDENT_ID);","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(expectedStudentId, ParserUtil.parseStudentId(addressWithWhitespace));","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"    // @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"    // public void parseAttendance_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"    //     assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAttendances(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"    // }","lastModifiedDate":"2024-03-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseAttendance_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendances(INVALID_TAG));","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseAttendance_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance expectedAttendance \u003d new Attendance(new AttendanceStatus(VALID_DATE_1, VALID_STATUS_1));","lastModifiedDate":"2024-03-20"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(expectedAttendance, ParserUtil.parseAttendances(VALID_DATE_1));","lastModifiedDate":"2024-03-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_DATE_1 + WHITESPACE;","lastModifiedDate":"2024-03-20"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"        Attendance expectedAttendance \u003d new Attendance(new AttendanceStatus(VALID_DATE_1, VALID_STATUS_1));","lastModifiedDate":"2024-03-20"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(expectedAttendance, ParserUtil.parseAttendances(tagWithWhitespace));","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"AndrewOng2066"},"content":"    // @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":178,"author":{"gitId":"AndrewOng2066"},"content":"    // public void parseAttendances_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":179,"author":{"gitId":"AndrewOng2066"},"content":"    //    assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAttendances(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":180,"author":{"gitId":"AndrewOng2066"},"content":"    // }","lastModifiedDate":"2024-03-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseAttendances_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":184,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAttendances(Arrays.asList(VALID_DATE_1, INVALID_TAG)));","lastModifiedDate":"2024-03-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseAttendances_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":189,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(ParserUtil.parseAttendances(Collections.emptyList()).isEmpty());","lastModifiedDate":"2024-03-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"AndrewOng2066"},"content":"    public void parseAttendances_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2024-03-19"},{"lineNumber":194,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e actualAttendanceSet \u003d ParserUtil.parseAttendances(Arrays.asList(VALID_DATE_1, VALID_DATE_2));","lastModifiedDate":"2024-03-20"},{"lineNumber":195,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e expectedAttendanceSet \u003d new HashSet\u003cAttendance\u003e(Arrays.asList(new Attendance(","lastModifiedDate":"2024-03-21"},{"lineNumber":196,"author":{"gitId":"AndrewOng2066"},"content":"                new AttendanceStatus(VALID_DATE_1, VALID_STATUS_1)),","lastModifiedDate":"2024-03-21"},{"lineNumber":197,"author":{"gitId":"AndrewOng2066"},"content":"                new Attendance(new AttendanceStatus(VALID_DATE_2, VALID_STATUS_1))));","lastModifiedDate":"2024-03-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"AndrewOng2066"},"content":"        assertEquals(expectedAttendanceSet, actualAttendanceSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"AndrewOng2066":45,"-":156}},{"path":"src/test/java/seedu/address/logic/parser/StudentIdBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"public class StudentIdBookParserTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"AndrewOng2066":1,"-":100}},{"path":"src/test/java/seedu/address/model/ClassBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_1;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalClassBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"public class ClassBookTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    private final ClassBook classBook \u003d new ClassBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public void constructor() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        assertEquals(Collections.emptyList(), classBook.getClassList());","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e classBook.resetData((null)));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    public void resetData_withValidReadOnlyClassBook_replacesData() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"        ClassBook newData \u003d getTypicalClassBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"        classBook.resetData(newData);","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"        assertEquals(newData, classBook);","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    public void hasClass_nullClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e classBook.hasClass(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"    public void hasClass_classNotInClassBook_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"        assertFalse(classBook.hasClass(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    public void hasClass_classInClassBook_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"        classBook.createClass(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"        assertTrue(classBook.hasClass(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        String expected \u003d ClassBook.class.getCanonicalName() + \"{classes\u003d\" + classBook.getClassList() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expected, classBook.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    public void createClass_newClass_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        Classes sampleClass \u003d new Classes(new CourseCode(\"CS101\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"        ClassBook classBook \u003d new ClassBook();","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"        classBook.createClass(sampleClass);","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        assertTrue(classBook.hasClass(sampleClass));","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":68}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.List;","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"    private Logic logicStub;","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    private final Classes class1 \u003d new Classes(new CourseCode(\"class1\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cClasses\u003e classesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        classesList.add(class1);","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"        logicStub \u003d new LogicManagerStub(classesList);","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        ObservableList\u003cClasses\u003e classList \u003d logicStub.getFilteredClassList();","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        Classes firstclass \u003d classList.get(0);","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"AndrewOng2066"},"content":"        modelManager.selectClass(firstclass);","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"AndrewOng2066"},"content":"        if (!modelManager.hasPerson(ALICE)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"AndrewOng2066"},"content":"    public void addPerson_existingPerson_throwsDataLoadingException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"AndrewOng2066"},"content":"        ObservableList\u003cClasses\u003e classList \u003d logicStub.getFilteredClassList();","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"AndrewOng2066"},"content":"        Classes firstclass \u003d classList.get(0);","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"AndrewOng2066"},"content":"        modelManager.selectClass(firstclass);","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"AndrewOng2066"},"content":"        if (!modelManager.hasPerson(ALICE)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"AndrewOng2066"},"content":"            modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":124,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e modelManager.addPerson(ALICE));","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":126,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"AndrewOng2066"},"content":"    public void addPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.addPerson(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":132,"author":{"gitId":"AndrewOng2066"},"content":"    //    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":133,"author":{"gitId":"AndrewOng2066"},"content":"    //    public void setPerson_personExists_personIsUpdated() {","lastModifiedDate":"2024-03-23"},{"lineNumber":134,"author":{"gitId":"AndrewOng2066"},"content":"    //        ObservableList\u003cClasses\u003e classList \u003d logicStub.getFilteredClassList();","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"AndrewOng2066"},"content":"    //        Classes firstclass \u003d classList.get(0);","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"AndrewOng2066"},"content":"    //        modelManager.selectClass(firstclass);","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"AndrewOng2066"},"content":"    //        Person originalPerson \u003d new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"AndrewOng2066"},"content":"    //                .withPhone(\"98798798\").withEmail(\"alice@gmail.com\").withStudentID(\"A1111111D\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"AndrewOng2066"},"content":"    //        Person editedPerson \u003d new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"AndrewOng2066"},"content":"    //                .withPhone(\"999988888\").withEmail(\"alice@gmail.com\").withStudentID(\"A1111111D\").build();","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"AndrewOng2066"},"content":"    //        if (!modelManager.hasPerson(originalPerson)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"AndrewOng2066"},"content":"    //            modelManager.addPerson(originalPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":145,"author":{"gitId":"AndrewOng2066"},"content":"    //        }","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"AndrewOng2066"},"content":"    //        if (modelManager.hasPerson(editedPerson)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"AndrewOng2066"},"content":"    //            modelManager.deletePerson(editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":148,"author":{"gitId":"AndrewOng2066"},"content":"    //        }","lastModifiedDate":"2024-03-23"},{"lineNumber":149,"author":{"gitId":"AndrewOng2066"},"content":"    //        modelManager.addPerson(originalPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":150,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertTrue(modelManager.hasPerson(originalPerson));","lastModifiedDate":"2024-03-23"},{"lineNumber":151,"author":{"gitId":"AndrewOng2066"},"content":"    //","lastModifiedDate":"2024-03-23"},{"lineNumber":152,"author":{"gitId":"AndrewOng2066"},"content":"    //        modelManager.setPerson(originalPerson, editedPerson);","lastModifiedDate":"2024-03-23"},{"lineNumber":153,"author":{"gitId":"AndrewOng2066"},"content":"    //        assertTrue(modelManager.hasPerson(editedPerson));","lastModifiedDate":"2024-03-23"},{"lineNumber":154,"author":{"gitId":"AndrewOng2066"},"content":"    //    }","lastModifiedDate":"2024-03-23"},{"lineNumber":155,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":156,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":157,"author":{"gitId":"AndrewOng2066"},"content":"    public void createClass_addNewClass_returnSuccess() {","lastModifiedDate":"2024-03-23"},{"lineNumber":158,"author":{"gitId":"AndrewOng2066"},"content":"        ObservableList\u003cClasses\u003e classList \u003d logicStub.getFilteredClassList();","lastModifiedDate":"2024-03-23"},{"lineNumber":159,"author":{"gitId":"AndrewOng2066"},"content":"        if (classList.contains(class1)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":160,"author":{"gitId":"AndrewOng2066"},"content":"            modelManager.removeClass(class1);","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":162,"author":{"gitId":"AndrewOng2066"},"content":"        modelManager.createClass(class1);","lastModifiedDate":"2024-03-23"},{"lineNumber":163,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(modelManager.hasClass(class1));","lastModifiedDate":"2024-03-23"},{"lineNumber":164,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":165,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":167,"author":{"gitId":"AndrewOng2066"},"content":"    public void removeClass_removeExistingClass_returnSuccess() {","lastModifiedDate":"2024-03-23"},{"lineNumber":168,"author":{"gitId":"AndrewOng2066"},"content":"        ObservableList\u003cClasses\u003e classList \u003d logicStub.getFilteredClassList();","lastModifiedDate":"2024-03-23"},{"lineNumber":169,"author":{"gitId":"AndrewOng2066"},"content":"        if (!classList.contains(class1)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"AndrewOng2066"},"content":"            modelManager.createClass(class1);","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":172,"author":{"gitId":"AndrewOng2066"},"content":"        modelManager.removeClass(class1);","lastModifiedDate":"2024-03-23"},{"lineNumber":173,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(!modelManager.hasClass(class1));","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"taniatsq"},"content":"        ClassBook classBook \u003d new ClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"taniatsq"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"taniatsq"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, classBook);","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"taniatsq"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, classBook)));","lastModifiedDate":"2024-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":208,"author":{"gitId":"taniatsq"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, classBook)));","lastModifiedDate":"2024-03-17"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":216,"author":{"gitId":"taniatsq"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, classBook)));","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":219,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":220,"author":{"gitId":"AndrewOng2066"},"content":"    private class LogicManagerStub implements Logic {","lastModifiedDate":"2024-03-23"},{"lineNumber":221,"author":{"gitId":"AndrewOng2066"},"content":"        private final ObservableList\u003cPerson\u003e filteredPersonList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-23"},{"lineNumber":222,"author":{"gitId":"AndrewOng2066"},"content":"        private final ObservableList\u003cClasses\u003e filteredClassList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-23"},{"lineNumber":223,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":224,"author":{"gitId":"AndrewOng2066"},"content":"        public LogicManagerStub(List\u003cClasses\u003e classList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":225,"author":{"gitId":"AndrewOng2066"},"content":"            // Populate the filtered class list with provided classes","lastModifiedDate":"2024-03-23"},{"lineNumber":226,"author":{"gitId":"AndrewOng2066"},"content":"            filteredClassList.setAll(classList);","lastModifiedDate":"2024-03-23"},{"lineNumber":227,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":228,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":229,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":230,"author":{"gitId":"AndrewOng2066"},"content":"        public CommandResult execute(String commandText) {","lastModifiedDate":"2024-03-23"},{"lineNumber":231,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":232,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":233,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":234,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":235,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-23"},{"lineNumber":236,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":237,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":238,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":239,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":240,"author":{"gitId":"AndrewOng2066"},"content":"        public ReadOnlyClassBook getClassBook() {","lastModifiedDate":"2024-03-23"},{"lineNumber":241,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":242,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":243,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":244,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":245,"author":{"gitId":"AndrewOng2066"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":246,"author":{"gitId":"AndrewOng2066"},"content":"            return filteredPersonList;","lastModifiedDate":"2024-03-23"},{"lineNumber":247,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":248,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":249,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":250,"author":{"gitId":"AndrewOng2066"},"content":"        public ObservableList\u003cClasses\u003e getFilteredClassList() {","lastModifiedDate":"2024-03-23"},{"lineNumber":251,"author":{"gitId":"AndrewOng2066"},"content":"            return filteredClassList;","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":253,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":254,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":255,"author":{"gitId":"AndrewOng2066"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-23"},{"lineNumber":256,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":257,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":258,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":259,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":260,"author":{"gitId":"AndrewOng2066"},"content":"        public Path getClassBookFilePath() {","lastModifiedDate":"2024-03-23"},{"lineNumber":261,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":262,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":263,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":264,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":265,"author":{"gitId":"AndrewOng2066"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-23"},{"lineNumber":266,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":267,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":268,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":269,"author":{"gitId":"AndrewOng2066"},"content":"        @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":270,"author":{"gitId":"AndrewOng2066"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-23"},{"lineNumber":271,"author":{"gitId":"AndrewOng2066"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-23"},{"lineNumber":272,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":273,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":274,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":275,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"AndrewOng2066":143,"taniatsq":6,"-":127}},{"path":"src/test/java/seedu/address/model/StudentIdBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"public class StudentIdBookTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"AndrewOng2066":9,"-":103}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    public void constructor_defaultValues_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        assertEquals(new GuiSettings(), userPrefs.getGuiSettings());","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        assertEquals(Paths.get(\"data\", \"addressbook.json\"), userPrefs.getAddressBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        assertEquals(Paths.get(\"data\", \"classbook.json\"), userPrefs.getClassBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    public void constructor_withReadOnlyUserPrefs_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        ReadOnlyUserPrefs readOnlyUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs(readOnlyUserPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        assertEquals(new GuiSettings(), userPrefs.getGuiSettings());","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"        assertEquals(readOnlyUserPrefs.getAddressBookFilePath(), userPrefs.getAddressBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        assertEquals(readOnlyUserPrefs.getClassBookFilePath(), userPrefs.getClassBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    public void setAddressBookFilePath_validPath_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        Path newPath \u003d Paths.get(\"new\", \"path\", \"to\", \"addressbook.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"        userPrefs.setAddressBookFilePath(newPath);","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"        assertEquals(newPath, userPrefs.getAddressBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"    public void setClassBookFilePath_validPath_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"        Path newPath \u003d Paths.get(\"new\", \"path\", \"to\", \"classbook.json\");","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"        userPrefs.setClassBookFilePath(newPath);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"        assertEquals(newPath, userPrefs.getClassBookFilePath());","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    public void equals_sameObject_true() {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"        assertEquals(userPrefs, userPrefs);","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"    public void equals_equalContents_true() {","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs1 \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"        assertEquals(userPrefs1, userPrefs2);","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    public void equals_differentContents_false() {","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs1 \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"        userPrefs2.setAddressBookFilePath(Paths.get(\"different\", \"path\", \"to\", \"addressbook.json\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"        assertNotEquals(userPrefs1, userPrefs2);","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"    public void toString_correctFormat_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"        String expectedString \u003d \"Gui Settings : \" + userPrefs.getGuiSettings() + \"\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"                + \"Local data file location : \" + userPrefs.getAddressBookFilePath() + \"\\n\"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"                + \"Local data file location: \" + userPrefs.getClassBookFilePath();","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedString, userPrefs.toString());","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"taniatsq":68,"-":22}},{"path":"src/test/java/seedu/address/model/person/ClassesTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_2;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import seedu.address.testutil.ClassBuilder;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"public class ClassesTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    public void isSameClass() {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"        assertTrue(TYPICAL_CLASS_1.isSameClass(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        assertFalse(TYPICAL_CLASS_1.isSameClass(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        Classes copy \u003d new ClassBuilder(TYPICAL_CLASS_1).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        assertTrue(TYPICAL_CLASS_1.equals(copy));","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        assertTrue(TYPICAL_CLASS_2.equals(TYPICAL_CLASS_2));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        assertFalse(TYPICAL_CLASS_2.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        assertFalse(TYPICAL_CLASS_2.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        assertFalse(TYPICAL_CLASS_2.equals(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"        String expected \u003d Classes.class.getCanonicalName() + \"{courseCode\u003d\" + TYPICAL_CLASS_1.getCourseCode() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expected, TYPICAL_CLASS_1.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":42}},{"path":"src/test/java/seedu/address/model/person/CourseCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public class CourseCodeTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CourseCode(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    public void constructor_invalidCC_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"        String invalidCC \u003d \"\";","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CourseCode(invalidCC));","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"    public void isValidClass() {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e CourseCode.isValidClass(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        assertFalse(CourseCode.isValidClass(\"\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        assertFalse(CourseCode.isValidClass(\" \"));","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"        assertFalse(CourseCode.isValidClass(\"^\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        assertFalse(CourseCode.isValidClass(\"cs21$$\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        assertTrue(CourseCode.isValidClass(\"CS2103\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        assertTrue(CourseCode.isValidClass(\"abcd\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"        assertTrue(CourseCode.isValidClass(\"1234\"));","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"        CourseCode cc \u003d new CourseCode(\"CS2103\");","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"        assertTrue(cc.equals(new CourseCode(\"CS2103\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        assertTrue(cc.equals(cc));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"        assertFalse(cc.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"        assertFalse(cc.equals(5));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"        assertFalse(cc.equals(new CourseCode(\"nhs2062\")));","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":51}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"AndrewOng2066"},"content":"                .withEmail(\"alice@email.com\").withStudentID(\"A1111111D\").build()));","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"AndrewOng2066":1,"-":84}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getAttendances().remove(0));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"                .withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"AndrewOng2066"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStudentID(VALID_STUDENT_ID_AMY).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"        editedAlice \u003d new PersonBuilder(ALICE)","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", studentid\u003d\" + ALICE.getStudentId()","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"                + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"AndrewOng2066":11,"-":92}},{"path":"src/test/java/seedu/address/model/person/StudentIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"AndrewOng2066"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"public class StudentIdTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e new StudentId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new StudentId(invalidAddress));","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"AndrewOng2066"},"content":"    public void isValidAddress() {","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"AndrewOng2066"},"content":"        // null address","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e StudentId.isValidStudentId(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        // invalid addresses","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(StudentId.isValidStudentId(\"\")); // empty string","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(StudentId.isValidStudentId(\" \")); // spaces only","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"AndrewOng2066"},"content":"        // valid addresses","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(StudentId.isValidStudentId(\"A1111111D\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(StudentId.isValidStudentId(\"A3333333D\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(StudentId","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"                .isValidStudentId(\"A2222222D\"));","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"    public void equals() {","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"        StudentId studentId \u003d new StudentId(\"A1111111D\");","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"AndrewOng2066"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(studentId.equals(new StudentId(\"A1111111D\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        assertTrue(studentId.equals(studentId));","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(studentId.equals(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(studentId.equals(5.0f));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"        assertFalse(studentId.equals(new StudentId(\"A2222222D\")));","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"AndrewOng2066":57}},{"path":"src/test/java/seedu/address/model/person/UniqueClassListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_2;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"public class UniqueClassListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    private final UniqueClassList uniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.contains(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    public void contains_classNotInList_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        assertFalse(uniqueClassList.contains(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public void contains_classInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        assertTrue(uniqueClassList.contains(TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"taniatsq"},"content":"    public void create_nullClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.add(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"taniatsq"},"content":"    public void setClass_nullTargetClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClass(null, TYPICAL_CLASS_1));","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"taniatsq"},"content":"    public void setClass_nullEditedClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClass(TYPICAL_CLASS_1, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"taniatsq"},"content":"    public void setClass_editedClassIsTheSameClass_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.setClass(TYPICAL_CLASS_1, TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"taniatsq"},"content":"        expectedUniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"taniatsq"},"content":"    public void remove_nullClass_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.remove(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"taniatsq"},"content":"    public void remove_existingClass_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.remove(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"taniatsq"},"content":"    public void setClasses_nullUniqueClassList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((UniqueClassList) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"taniatsq"},"content":"    public void setClasses_uniqueClassList_replaceSuccessful() {","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"taniatsq"},"content":"        expectedUniqueClassList.add(TYPICAL_CLASS_2);","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.setClasses(expectedUniqueClassList);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"taniatsq"},"content":"    public void setClasses_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"taniatsq"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueClassList.setClasses((List\u003cClasses\u003e) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"taniatsq"},"content":"    public void setClasses_list_replaces() {","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"taniatsq"},"content":"        List\u003cClasses\u003e classList \u003d Collections.singletonList(TYPICAL_CLASS_2);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.setClasses(classList);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList expectedUniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"taniatsq"},"content":"        expectedUniqueClassList.add(TYPICAL_CLASS_2);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"taniatsq"},"content":"        assertEquals(expectedUniqueClassList, uniqueClassList);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"taniatsq"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"taniatsq"},"content":"        assertEquals(uniqueClassList.asUnmodifiableObservableList().toString(), uniqueClassList.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"    public void add_validClass_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"        Classes sampleClass \u003d new Classes(new CourseCode(\"CS101\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"        UniqueClassList uniqueClassList \u003d new UniqueClassList();","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"        uniqueClassList.add(sampleClass);","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"taniatsq"},"content":"        assertTrue(uniqueClassList.contains(sampleClass));","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":115}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"AndrewOng2066"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"AndrewOng2066"},"content":"                .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"AndrewOng2066":7,"-":171}},{"path":"src/test/java/seedu/address/model/tag/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"AndrewOng2066"},"content":"public class AttendanceTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Attendance(null));","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"    public void constructor_invalidAttendanceDate_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"AndrewOng2066"},"content":"        String invalidAttendanceDate \u003d \"32-02-2024\";","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"        String invalidAttendanceStatus \u003d \"3\";","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Attendance(","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"                new AttendanceStatus(invalidAttendanceDate, invalidAttendanceStatus)));","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    public void isValidDate() {","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"        assertThrows(NullPointerException.class, () -\u003e Attendance.isValidDate(null));","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"AndrewOng2066":11,"-":19}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedClassTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.testutil.TypicalPersons.TYPICAL_CLASS_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"public class JsonAdaptedClassTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"    private static final String INVALID_CC \u003d \"cs@1234\";","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"    public void toModelType_validClass_returnsClass() throws Exception {","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"        JsonAdaptedClass classes \u003d new JsonAdaptedClass(TYPICAL_CLASS_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"        assertEquals(TYPICAL_CLASS_1, classes.toModelType());","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    public void toModelType_invalidCC_throwsIllegalValueException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"        JsonAdaptedClass classes \u003d new JsonAdaptedClass(INVALID_CC);","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"        String expectedMessage \u003d CourseCode.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, classes::toModelType);","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String INVALID_STUDENT_ID \u003d \" \";","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String INVALID_DATE \u003d \"30-02-2024\";","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String INVALID_STATUS \u003d \"3\";","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getStudentId().toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"AndrewOng2066"},"content":"    private static final List\u003cJsonAdaptedAttendance\u003e VALID_DATE \u003d BENSON.getAttendances().stream()","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"AndrewOng2066"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"AndrewOng2066"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"AndrewOng2066"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_STUDENT_ID, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"        String expectedMessage \u003d StudentId.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"AndrewOng2066"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"AndrewOng2066"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, StudentId.class.getSimpleName());","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"AndrewOng2066"},"content":"        List\u003cJsonAdaptedAttendance\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_DATE);","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"AndrewOng2066"},"content":"        invalidTags.add(new JsonAdaptedAttendance(new Attendance(new AttendanceStatus(INVALID_DATE, INVALID_STATUS))));","lastModifiedDate":"2024-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AndrewOng2066":21,"-":92}},{"path":"src/test/java/seedu/address/storage/JsonClassBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"public class JsonClassBookStorageTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":6}},{"path":"src/test/java/seedu/address/storage/JsonSerializableClassBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"public class JsonSerializableClassBookTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":4}},{"path":"src/test/java/seedu/address/storage/JsonSerializableStudentIdBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"AndrewOng2066"},"content":"public class JsonSerializableStudentIdBookTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AndrewOng2066":1,"-":46}},{"path":"src/test/java/seedu/address/storage/JsonStudentIdBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"public class JsonStudentIdBookStorageTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"AndrewOng2066":1,"-":109}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"        JsonClassBookStorage classBookStorage \u003d new JsonClassBookStorage(getTempFilePath(\"cb\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, classBookStorage);","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"taniatsq":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/ClassBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"taniatsq"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"taniatsq"},"content":"/**","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"taniatsq"},"content":" * A utility class to help with building Classes objects.","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"taniatsq"},"content":" */","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"taniatsq"},"content":"public class ClassBuilder {","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"taniatsq"},"content":"    public static final String DEFAULT_CC \u003d \"cs1101s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"    private CourseCode cc;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"    public ClassBuilder() {","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"taniatsq"},"content":"        cc \u003d new CourseCode(DEFAULT_CC);","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"taniatsq"},"content":"    public ClassBuilder(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"taniatsq"},"content":"        cc \u003d classes.getCourseCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"     * Sets the {@code cc} of the {@code Classes} that we are building.","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"taniatsq"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"taniatsq"},"content":"    public ClassBuilder withCC(String cc) {","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"taniatsq"},"content":"        this.cc \u003d new CourseCode(cc);","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"taniatsq"},"content":"        return this;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"taniatsq"},"content":"    public Classes build() {","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"        return new Classes(cc);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"taniatsq":33}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.setStudentId(person.getStudentId());","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.setAttendances(person.getAttendances());","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"    public EditPersonDescriptorBuilder withStudentId(String address) {","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.setStudentId(new StudentId(address));","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"AndrewOng2066"},"content":"    public EditPersonDescriptorBuilder withAttendances(String... attendances) {","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-20"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"        for (String i : attendances) {","lastModifiedDate":"2024-03-20"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"            attendanceSet.add(new Attendance(new AttendanceStatus(i, \"1\")));","lastModifiedDate":"2024-03-20"},{"lineNumber":82,"author":{"gitId":"AndrewOng2066"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":83,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.setAttendances(attendanceSet);","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"AndrewOng2066":14,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.StudentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"AndrewOng2066"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"A1111111D\";","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"AndrewOng2066"},"content":"    private StudentId studentId;","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"AndrewOng2066"},"content":"    private Set\u003cAttendance\u003e attendances;","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"AndrewOng2066"},"content":"        studentId \u003d new StudentId(DEFAULT_ADDRESS);","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"        attendances \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"        studentId \u003d personToCopy.getStudentId();","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"        attendances \u003d new HashSet\u003c\u003e(personToCopy.getAttendances());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"    public PersonBuilder withDate(Attendance ... dates) {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"AndrewOng2066"},"content":"        this.attendances \u003d SampleDataUtil.getAttendanceSet(dates);","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"    public PersonBuilder withStudentID(String studentID) {","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"AndrewOng2066"},"content":"        this.studentId \u003d new StudentId(studentID);","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"AndrewOng2066"},"content":"        return new Person(name, phone, email, studentId, attendances);","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"AndrewOng2066":14,"-":82}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE_RECORD;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"taniatsq"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASS;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTID;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"taniatsq"},"content":"import seedu.address.logic.commands.CreateClassCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"taniatsq"},"content":"    public static String getClassCommand(Classes classes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"taniatsq"},"content":"        return CreateClassCommand.COMMAND_WORD + \" \" + PREFIX_CLASS + classes.getCourseCode();","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"        sb.append(PREFIX_STUDENTID + person.getStudentId().value + \" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"        person.getAttendances().stream().forEach(","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"            s -\u003e sb.append(PREFIX_ATTENDANCE_RECORD + s.attendanceName.getDate() + \", \"","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"AndrewOng2066"},"content":"                    + s.attendanceName.getStatus() + \" \")","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"        descriptor.getStudentId().ifPresent(address -\u003e sb.append(PREFIX_STUDENTID).append(address.value).append(\" \"));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"            Set\u003cAttendance\u003e attendances \u003d descriptor.getTags().get();","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"AndrewOng2066"},"content":"            if (attendances.isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"AndrewOng2066"},"content":"                sb.append(PREFIX_ATTENDANCE_RECORD);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"                attendances.forEach(s -\u003e sb.append(PREFIX_ATTENDANCE_RECORD).append(s.attendanceName).append(\" \"));","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"AndrewOng2066":12,"taniatsq":7,"-":51}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"AndrewOng2066"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_2;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"AndrewOng2066"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDENT_ID_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.ClassBook;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.person.AttendanceStatus;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.Classes;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"taniatsq"},"content":"import seedu.address.model.person.CourseCode;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"AndrewOng2066"},"content":"import seedu.address.model.tag.Attendance;","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"AndrewOng2066"},"content":"            .withStudentID(\"A1111111D\").withEmail(\"alice@example.com\")","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"AndrewOng2066"},"content":"            .withStudentID(\"A3333333D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"heinz@example.com\").withStudentID(\"A4444444D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"cornelia@example.com\").withStudentID(\"A6666666D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"werner@example.com\").withStudentID(\"A7777777D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"lydia@example.com\").withStudentID(\"A8888888D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"anna@example.com\").withStudentID(\"A9999999D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"stefan@example.com\").withStudentID(\"A9516234E\")","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(\"hans@example.com\").withStudentID(\"A9876336D\")","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(VALID_EMAIL_AMY).withStudentID(VALID_STUDENT_ID_AMY)","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\"))).build();","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"AndrewOng2066"},"content":"            .withEmail(VALID_EMAIL_BOB).withStudentID(VALID_STUDENT_ID_BOB)","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"AndrewOng2066"},"content":"            .withDate(new Attendance(new AttendanceStatus(VALID_DATE_1, \"1\")),","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"AndrewOng2066"},"content":"                    new Attendance(new AttendanceStatus(VALID_DATE_2, \"1\")))","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":84,"author":{"gitId":"taniatsq"},"content":"    public static final Classes TYPICAL_CLASS_1 \u003d new ClassBuilder().withCC(\"CS2103T\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"taniatsq"},"content":"    public static final Classes TYPICAL_CLASS_2 \u003d new ClassBuilder().withCC(\"CS2103\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":105,"author":{"gitId":"taniatsq"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"taniatsq"},"content":"    public static ClassBook getTypicalClassBook() {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"taniatsq"},"content":"        ClassBook cb \u003d new ClassBook();","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"taniatsq"},"content":"        cb.createClass(new Classes(new CourseCode(\"cs2103\")));","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"taniatsq"},"content":"        return cb;","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"taniatsq"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"AndrewOng2066":40,"taniatsq":12,"-":59}}]
