[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"[![CI Status](https://github.com/AY2324S2-CS2103T-T10-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2324S2-CS2103T-T10-1/tp/actions)","lastModifiedDate":"2024-02-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-T10-1/tp/graph/badge.svg?token\u003d6NGZ4VS4VC)](https://app.codecov.io/gh/AY2324S2-CS2103T-T10-1/tp)","lastModifiedDate":"2024-02-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"## Avengers Assemble","lastModifiedDate":"2024-02-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"Avengers Assemble is a contact management app, meant for use with a Command Line Interface (CLI) while still maintaining the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"The application is designed for Head Tutors of the CS1101S Programming Methodology course but its use cases can be extended to Head Tutors of other courses.","lastModifiedDate":"2024-02-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"### Project Links","lastModifiedDate":"2024-02-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"[Project Website](https://ay2324s2-cs2103t-t10-1.github.io/tp/)","lastModifiedDate":"2024-02-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"[User Guide](https://ay2324s2-cs2103t-t10-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"[Developer Guide](https://ay2324s2-cs2103t-t10-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2024-02-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"[About Us](https://ay2324s2-cs2103t-t10-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2024-02-27"}],"authorContributionMap":{"delishad21":16}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-07-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"    implementation group: \u0027com.fasterxml.jackson.dataformat\u0027, name: \u0027jackson-dataformat-csv\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"Pughal77"},"content":"    implementation \u0027com.opencsv:opencsv:5.5.2\u0027","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    testImplementation(\u0027org.junit.platform:junit-platform-launcher:1.5.2\u0027)","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"    testImplementation \"org.mockito:mockito-core:3.+\"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"    testImplementation group: \u0027org.powermock\u0027, name: \u0027powermock-api-mockito2\u0027, version: \u00272.0.9\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"    testImplementation group: \u0027org.powermock\u0027, name: \u0027powermock-module-junit4\u0027, version: \u00271.6.4\u0027","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"    archiveFileName \u003d \u0027avengersassemble.jar\u0027","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"run {","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"danielleloh":1,"delishad21":1,"Pughal77":2,"Zer0Legion":3,"jayllo-c":3,"-":73}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"### Johan Soo","lastModifiedDate":"2024-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"\u003cimg src\u003d\"images/delishad21.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"[[github](https://github.com/delishad21)]","lastModifiedDate":"2024-02-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"* Role: Developer","lastModifiedDate":"2024-02-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"* Responsibilities: Develop Code","lastModifiedDate":"2024-02-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"### Ang Leng Khai","lastModifiedDate":"2024-02-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"images/zer0legion.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"[[github](http://github.com/zer0legion)] ","lastModifiedDate":"2024-02-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"* Role: Developer","lastModifiedDate":"2024-02-26"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"* Responsibilities: Develop code","lastModifiedDate":"2024-02-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"### Loh Sze Han, Danielle","lastModifiedDate":"2024-02-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"\u003cimg src\u003d\"images/danielleloh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"[[github](http://github.com/danielleloh)] [[portfolio](team/johndoe.md)]","lastModifiedDate":"2024-02-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-26"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"* Responsibilities: Develop code","lastModifiedDate":"2024-02-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"### Pughal Raj","lastModifiedDate":"2024-02-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"\u003cimg src\u003d\"images/pughal77.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"[[github](http://github.com/Pughal77)]","lastModifiedDate":"2024-02-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-26"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"* Responsibilities: Develop code","lastModifiedDate":"2024-02-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"### Castillo James","lastModifiedDate":"2024-02-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"\u003cimg src\u003d\"images/jayllo-c.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-02-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"[[github](http://github.com/jayllo-c)]","lastModifiedDate":"2024-02-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2024-02-26"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"* Responsibilities: Develop Code","lastModifiedDate":"2024-02-26"}],"authorContributionMap":{"danielleloh":4,"delishad21":4,"Pughal77":3,"Zer0Legion":4,"jayllo-c":7,"-":35}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"# Avengers Assemble Developer Guide","lastModifiedDate":"2024-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-02-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2024-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2024-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2024-02-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"2. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2024-03-20"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-03-20"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2024-03-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking a simple `execute(\"delete 1\")` API call as an example.","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete 1` Command\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"The sequence diagram below illustrates a more in-depth view of the interactions within the \u0027Logic\u0027 component.","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"It takes a user input into the UI, `add n/Dohn Joe p/98765432 a/123 e/dohn@gm.com m/A1234567X s/S1 r/R1`, as an example.","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"\u003cpuml src\u003d\"diagrams/AddSequenceDiagram.puml\" alt\u003d\"Detailed Interactions Inside the Logic Component for the `add n/Dohn Joe p/98765432 a/123 e/dohn@gm.com m/A1234567X s/S1 r/R1` User Input\" /\u003e","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":123,"author":{"gitId":"Zer0Legion"},"content":"**Note:** Similar to the above sequence diagram, the lifeline for `AddCommandParser` and `AddCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"The parsing is detailed as follows:","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"\u003cpuml src\u003d\"diagrams/AddCommandParsing.puml\" alt\u003d\"Detailed Interactions for Parsing Fields of the Add command.\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2024-02-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2024-02-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2024-02-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"### **Export Feature**","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"The `export` command allows users to export the details of each person currently displayed in the `PersonListPanel` to a CSV file. The CSV file is generated in the file `./addressbookdata/avengersassemble.csv`.","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"The user uses the `find` feature to filter out the relevant persons, which will be displayed in the `PersonListPanel`. ","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"The `export` feature utilizes the `filteredPersons` list stored in `Model` to retrieve the relavant data displayed in `PersonListPanel`.","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"The `export` feature also relies the Jackson Dataformat CSV module and the Jackson Databind module write the details of persons to the CSV file `./addressbookdata/avengersassemble.csv`.","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"#### Parsing User Input","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"The `ExportCommand` class is instantiated directly by the `AddressBookParser` class when the user inputs the `export` command as the `export` command does not require any additional arguments.","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"#### Executing the Command","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"When the user inputs an `export` command, it is passed to an `AddressBookParser` which creates an `ExportCommand` object. The `LogicManager` then calls the `execute` method in the `ExportCommand` class.","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"#### Data Retrieval","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"The `excute` method calls the `Model#getFilteredPersonList()` to retrieve the `filteredPersons` list stored in `Model`. This lists stores the relevant persons currently displayed in the `PersonListPanel`.","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"It then creates a temporary `AddressBook` object and iterates through the `filteredPerons` list to add each person from the list into the AddressBook.","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"#### JSON Serialization","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"The information in the temporary `AddressBook` is written into a JSON file, `filteredaddressbook.json` using the `JsonAddressBookStorage#writeToJsonFile()` method.","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"#### CSV Conversion","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"The `export` feature relies on the Jackson Dataformat CSV module and the Jackson Databind module to read the JSON file and write the information into a CSV file.","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"Given below is are the steps taken to convert the JSON-formatted data to CSV:","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"danielleloh"},"content":"* The JSON data is read from the JSON file and converted into a JSON tree using Jackson\u0027s `ObjectMapper`.","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"danielleloh"},"content":"* The JSON tree is processed to extract the array of persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"danielleloh"},"content":"* A CSV schema is dynamically built based on the structure of the JSON array.","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"danielleloh"},"content":"* The CSV schema and JSON data are used to write to the CSV file using Jackson\u0027s `CsvMapper`.","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"danielleloh"},"content":"The following sequence diagram shows the interactions within the different classes when the user inputs an `export` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"danielleloh"},"content":"\u003cpuml src\u003d\"diagrams/ExportSequenceDiagram.puml\" alt\u003d\"Sequence Diagram for the `export` Command\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"danielleloh"},"content":"#### Alternative Implementations","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"danielleloh"},"content":"* **Alternative 1 (current choice):** Exports the details of persons displayed in `PersonListPanel`.","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"danielleloh"},"content":"    * Pros: Users do not have to go through the extra step of filtering through the persons in the CSV file in an external software.","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"danielleloh"},"content":"    * Cons: The extent to which users can filter the persons displayed is highly dependent on the `find` feature.","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"danielleloh"},"content":"* **Alternative 2:** Exports **all** contacts stored in the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"danielleloh"},"content":"    * Pros: ","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"danielleloh"},"content":"      * Easy to implement.","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"danielleloh"},"content":"      * The `export` feature is not reliant on the `find` feature to update the `filteredPersons` list.","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"danielleloh"},"content":"    * Cons: Users need to manually filter and sort through the CSV file if they require certain data which may be less efficient.","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"jayllo-c"},"content":"### **Copy feature**","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"jayllo-c"},"content":"The `copy` command enables users to quickly copy the email addresses of the persons currently displayed to them in the","lastModifiedDate":"2024-03-27"},{"lineNumber":229,"author":{"gitId":"jayllo-c"},"content":"`PersonListPanel`. The copied emails are stored in the users\u0027 clipboard and can be pasted into an email client.","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"jayllo-c"},"content":"This feature is useful when users need to send emails to a group of persons.","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"jayllo-c"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-27"},{"lineNumber":233,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":234,"author":{"gitId":"jayllo-c"},"content":"The copy command is a child of the `command` class and relies on the `filteredPersons` list in the `Model` component, ","lastModifiedDate":"2024-03-27"},{"lineNumber":235,"author":{"gitId":"jayllo-c"},"content":"as well as the `java.awt` package to copy the emails of all currently displayed persons to the users\u0027 clipboard.","lastModifiedDate":"2024-03-27"},{"lineNumber":236,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":237,"author":{"gitId":"jayllo-c"},"content":"#### Parsing User Input","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"jayllo-c"},"content":"The `CopyCommand` class is instantiated directly by the `AddressBookParser` class when the user inputs the `copy` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":240,"author":{"gitId":"jayllo-c"},"content":"This is because the `copy` command does not require any additional arguments from the user.","lastModifiedDate":"2024-03-27"},{"lineNumber":241,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"jayllo-c"},"content":"#### Executing the Command","lastModifiedDate":"2024-03-27"},{"lineNumber":243,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":244,"author":{"gitId":"jayllo-c"},"content":"The `CopyCommand` class is created by the `AddressBookParser` class and passed to the `Logic` component for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"jayllo-c"},"content":"The `Logic` component then executes the command by calling the `execute` method in the `CopyCommand` class.","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":247,"author":{"gitId":"jayllo-c"},"content":"#### Copying Emails:","lastModifiedDate":"2024-03-27"},{"lineNumber":248,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"jayllo-c"},"content":"The `CopyCommand` class is responsible for executing the command for obtaining the emails of the filtered persons and copying them to the clipboard.","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"jayllo-c"},"content":"It iterates through the `filteredPersons` list in the `Model` component and extracts the email addresses of each person.","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"jayllo-c"},"content":"The email addresses are then concatenated into a single string, separated by commas, and copied to the clipboard using the `java.awt` package.","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"jayllo-c"},"content":"#### User Interface Interaction","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"jayllo-c"},"content":"After the `CopyCommand` is executed, the `UI` component updates the `ResultDisplay` to show a message indicating that the emails have been copied to the clipboard.","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"jayllo-c"},"content":"The following activity diagram summarizes the steps involved in executing the `copy` command:","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"jayllo-c"},"content":"\u003cpuml src\u003d\"diagrams/CopyImplementationActivityDiagram.puml\" width\u003d\"1000\" /\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"jayllo-c"},"content":"#### **Considerations**","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"jayllo-c"},"content":"##### Reliance on `find` Command","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"jayllo-c"},"content":"The `copy` command is designed to be used with the find command, which filters the persons displayed in the `PersonListPanel`.","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"jayllo-c"},"content":"Consequently, the flexibility of the `copy` command relies heavily on the implementation of the `find` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"jayllo-c"},"content":"Due to this dependency, any changes to the `find` command may affect the functionality of the `copy` command.","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"jayllo-c"},"content":"##### Extensibility","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"jayllo-c"},"content":"Due to the simplicity of the `copy` command, there are limited opportunities for extending its functionality. ","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"jayllo-c"},"content":"However, future enhancements could include the ability to copy other details of persons, such as phone numbers or addresses.","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"jayllo-c"},"content":"##### Alternative Implementations","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"jayllo-c"},"content":"**Alternative 1: Copying emails of all persons**","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"jayllo-c"},"content":"Copies the emails of all persons in the address book, regardless of whether they are currently displayed in the `PersonListPanel`.","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"jayllo-c"},"content":"However, this approach may lead to users copying a large number of emails unintentionally, which could be overwhelming.","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"jayllo-c"},"content":"Furthermore, it may not be clear to users which emails are being copied.","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"jayllo-c"},"content":"**Alternative 2: Copying emails into a file**","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"jayllo-c"},"content":"Instead of copying the emails to the clipboard, the emails could be saved into a file.","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"jayllo-c"},"content":"This approach would allow users to access the emails at a later time and would prevent the loss of copied emails if the clipboard is cleared.","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"jayllo-c"},"content":"However, it may be less convenient for users who want to paste the emails directly into an email client.","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":288,"author":{"gitId":"Zer0Legion"},"content":"### Addition of fields: Matriculation Number (Matric)","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"Zer0Legion"},"content":"The optional `Matric` field enables the user to store the matriculation number of a person. The field is stored as a `Matric` in the `Person` object.","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"Zer0Legion"},"content":"The `Studio` and `Reflection` fields are similarly implemented.","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"Zer0Legion"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"Zer0Legion"},"content":"The `Matric` class is a simple wrapper class that ensures it is valid according to NUS matriculation number format and is not empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"Zer0Legion"},"content":"The `Matric` field is used by the `add` and `edit` commands.","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"Zer0Legion"},"content":"#### Parsing User Input: `add`","lastModifiedDate":"2024-03-24"},{"lineNumber":298,"author":{"gitId":"Zer0Legion"},"content":"For the `add` command, as opposed to the `name` and other fields, the parser does not check if a prefix for `Matric` is present. This is because we define the `Matric` field to be optional as contacts (e.g. professors) do not need to have a matriculation number.","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":300,"author":{"gitId":"Zer0Legion"},"content":"Then, the parser verifies that there are no duplicate prefixes for `Matric` in a single `add` command.","lastModifiedDate":"2024-03-24"},{"lineNumber":301,"author":{"gitId":"Zer0Legion"},"content":"A new Person is then created with the `Matric` field set to the parsed `Matric` object.","lastModifiedDate":"2024-03-24"},{"lineNumber":302,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":303,"author":{"gitId":"Zer0Legion"},"content":"#### Parsing User Input: `edit`","lastModifiedDate":"2024-03-24"},{"lineNumber":304,"author":{"gitId":"Zer0Legion"},"content":"For the `edit` command, the parser will add or update the `Matric` field of the person being edited.","lastModifiedDate":"2024-03-24"},{"lineNumber":305,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":306,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":307,"author":{"gitId":"Zer0Legion"},"content":"### Automatic Tagging of Persons","lastModifiedDate":"2024-03-24"},{"lineNumber":308,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":309,"author":{"gitId":"Zer0Legion"},"content":"Tags are automatically added during the parsing of the `add` command. The tags are based on the `Matric`, `Studio` and `Reflection` fields of the person being added.","lastModifiedDate":"2024-03-24"},{"lineNumber":310,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":311,"author":{"gitId":"Zer0Legion"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-24"},{"lineNumber":312,"author":{"gitId":"Zer0Legion"},"content":"During the parsing of the `add` command, the parser will check if the `Matric`, `Studio` or `Reflection` fields match a pattern that corresponds to them being a student, teaching assistant (TA), or course instructor.","lastModifiedDate":"2024-03-24"},{"lineNumber":313,"author":{"gitId":"Zer0Legion"},"content":"The parser also generates `Tag` objects based on the user input. The existing tags are updated with the new automatically generated tag.","lastModifiedDate":"2024-03-24"},{"lineNumber":314,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":315,"author":{"gitId":"Zer0Legion"},"content":"The activity diagram is as follows:","lastModifiedDate":"2024-03-24"},{"lineNumber":316,"author":{"gitId":"Zer0Legion"},"content":"\u003cpuml src\u003d\"diagrams/AutomaticTaggingActivityDiagram.puml\" alt\u003d\"Activity Diagram for Auto Tagging Feature\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":317,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":318,"author":{"gitId":"Pughal77"},"content":"### Import contacts from CSV file","lastModifiedDate":"2024-03-25"},{"lineNumber":319,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":320,"author":{"gitId":"Pughal77"},"content":"#### Implementation","lastModifiedDate":"2024-03-25"},{"lineNumber":321,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":322,"author":{"gitId":"Pughal77"},"content":"The `ImportCommand` class is responsible for importing contacts from a CSV file. ","lastModifiedDate":"2024-03-25"},{"lineNumber":323,"author":{"gitId":"Pughal77"},"content":"The `ImportCommandParser` class is responsible for parsing the user input and creating an `ImportCommand` object. The `ImportCommand` class then reads the CSV file and add the contacts to the `Model`.","lastModifiedDate":"2024-03-25"},{"lineNumber":324,"author":{"gitId":"Pughal77"},"content":"The import process is done using a series of addCommands, which are executed in the same order as the rows in the CSV file.","lastModifiedDate":"2024-03-25"},{"lineNumber":325,"author":{"gitId":"Pughal77"},"content":"It uses the addCommand so as to take advantage of the validation and error handling that is already implemented in the addCommand.","lastModifiedDate":"2024-03-25"},{"lineNumber":326,"author":{"gitId":"Pughal77"},"content":"The import process is done in the following steps:","lastModifiedDate":"2024-03-25"},{"lineNumber":327,"author":{"gitId":"Pughal77"},"content":"- ImportCommand reads the CSV file with the given file path.","lastModifiedDate":"2024-03-25"},{"lineNumber":328,"author":{"gitId":"Pughal77"},"content":"- The CSV file is parsed and converts each row into the input a user would give to add the person (uses addCommand).","lastModifiedDate":"2024-03-25"},{"lineNumber":329,"author":{"gitId":"Pughal77"},"content":"- The addCommand is then executed passing the same model as import command.","lastModifiedDate":"2024-03-25"},{"lineNumber":330,"author":{"gitId":"Pughal77"},"content":"- The addCommand then adds the person to the model.","lastModifiedDate":"2024-03-25"},{"lineNumber":331,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":332,"author":{"gitId":"Pughal77"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component when the user issues the command `import`. ","lastModifiedDate":"2024-03-25"},{"lineNumber":333,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":334,"author":{"gitId":"Pughal77"},"content":"\u003cpuml src\u003d\"diagrams/ImportSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `import` Command\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":335,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":336,"author":{"gitId":"Pughal77"},"content":"Reference Diagram for each addCommand in importCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":337,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":338,"author":{"gitId":"Pughal77"},"content":"\u003cpuml src\u003d\"diagrams/ImportSequenceDiagramRef.puml\" alt\u003d\"Interactions Inside the Add Component for the `import` Command\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":339,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":340,"author":{"gitId":"Pughal77"},"content":"### Design Considerations","lastModifiedDate":"2024-03-25"},{"lineNumber":341,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":342,"author":{"gitId":"Pughal77"},"content":"**Aspect: How to handle duplicate persons**","lastModifiedDate":"2024-03-25"},{"lineNumber":343,"author":{"gitId":"Pughal77"},"content":" ","lastModifiedDate":"2024-03-25"},{"lineNumber":344,"author":{"gitId":"Pughal77"},"content":"Handled by addCommand, which will check if the person already exists in the model. If the person already exists, the addCommand will not add the person and will return an error message.","lastModifiedDate":"2024-03-25"},{"lineNumber":345,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":346,"author":{"gitId":"Pughal77"},"content":"**Aspect: How to handle invalid CSV files**","lastModifiedDate":"2024-03-25"},{"lineNumber":347,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":348,"author":{"gitId":"Pughal77"},"content":"Handled by ImportCommand, which will check if the CSV file is valid.","lastModifiedDate":"2024-03-25"},{"lineNumber":349,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":350,"author":{"gitId":"Pughal77"},"content":"The validities checked are:","lastModifiedDate":"2024-03-25"},{"lineNumber":351,"author":{"gitId":"Pughal77"},"content":"- The file exists","lastModifiedDate":"2024-03-25"},{"lineNumber":352,"author":{"gitId":"Pughal77"},"content":"- The file is a CSV file","lastModifiedDate":"2024-03-25"},{"lineNumber":353,"author":{"gitId":"Pughal77"},"content":"- **The first row of the file is the header row. In which all compulsory fields are present. Headers that are not recognized will be ignored.**","lastModifiedDate":"2024-03-25"},{"lineNumber":354,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":355,"author":{"gitId":"Pughal77"},"content":"If the file is not valid, an error message will be returned.","lastModifiedDate":"2024-03-25"},{"lineNumber":356,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":357,"author":{"gitId":"delishad21"},"content":"### **Find feature**","lastModifiedDate":"2024-03-24"},{"lineNumber":358,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":359,"author":{"gitId":"delishad21"},"content":"The `find` command lets users search for persons by substring matching. The user can select any parameter to search under: `NAME`, `EMAIL`, `TAG`, `MATRIC`, `REFLECTION`, `STUDIO`, and `TAGS` can all be used. E.g. to search for all persons under studio `S2`, the user can use `find s/s2`.","lastModifiedDate":"2024-03-24"},{"lineNumber":360,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":361,"author":{"gitId":"delishad21"},"content":"#### Implementation Details","lastModifiedDate":"2024-03-24"},{"lineNumber":362,"author":{"gitId":"delishad21"},"content":"The `find` feature makes use of the predicate class `PersonDetailContainsKeywordPredicate` and the method `updateFilteredPersonList` to update the model to show only persons that fufill the criteria that the user has keyed in.","lastModifiedDate":"2024-03-24"},{"lineNumber":363,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":364,"author":{"gitId":"delishad21"},"content":"##### Parsing User Input","lastModifiedDate":"2024-03-24"},{"lineNumber":365,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":366,"author":{"gitId":"delishad21"},"content":"The `FindCommandParser` class is responsible for parsing user input to extract search criteria. It uses the `ArgumentTokenizer` to tokenize the input string, extracting prefixes and their associated values. Following that, the `extractPrefixForFindCommand` method ensures that only one valid, non-empty prefix is provided in the input.","lastModifiedDate":"2024-03-24"},{"lineNumber":367,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":368,"author":{"gitId":"delishad21"},"content":"##### Predicate Creation","lastModifiedDate":"2024-03-24"},{"lineNumber":369,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":370,"author":{"gitId":"delishad21"},"content":"The `PersonDetailContainsKeywordPredicate` class implements the `Predicate` interface to filter contacts based on search criteria. It takes a prefix and keyword as parameters, allowing it to filter contacts based on specific details like name, phone number, etc.","lastModifiedDate":"2024-03-24"},{"lineNumber":371,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":372,"author":{"gitId":"delishad21"},"content":"With the prefix and the value extracted from parsing the user input, a `PersonDetailContainsKeywordPredicate` is created.","lastModifiedDate":"2024-03-24"},{"lineNumber":373,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":374,"author":{"gitId":"delishad21"},"content":"##### Executing the Command","lastModifiedDate":"2024-03-24"},{"lineNumber":375,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":376,"author":{"gitId":"delishad21"},"content":"The `FindCommand` class is responsible for executing the command for filtering the list in the application. It takes in a `PersonDetailContainsKeywordPredicate` as a parameter and has a `execute` method inherited from its parent class of `Command`","lastModifiedDate":"2024-03-24"},{"lineNumber":377,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"delishad21"},"content":"Using the `PersonDetailContainsKeywordPredicate` created from parsing user input, a `FindCommand` is created. the `execute` method is then called by the `LogicManager`.","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":380,"author":{"gitId":"delishad21"},"content":"##### Updating Filtered Person List:","lastModifiedDate":"2024-03-24"},{"lineNumber":381,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":382,"author":{"gitId":"delishad21"},"content":"The `ModelManager` class implements the `Model` interface and manages the application\u0027s data. It maintains a `filteredPersons` list, which is a FilteredList of contacts based on the applied predicate. The `updateFilteredPersonList` method implemented in `ModelManager` updates the filtered list based on the provided predicate.","lastModifiedDate":"2024-03-24"},{"lineNumber":383,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":384,"author":{"gitId":"delishad21"},"content":"When the `FindCommand` is executed, the `updateFilteredPersonList` method is called with the `PersonDetailContainsKeywordPredicate` as a parameter. This updates the `filteredPersons` list to show only persons that fufill the predicate.","lastModifiedDate":"2024-03-24"},{"lineNumber":385,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":386,"author":{"gitId":"delishad21"},"content":"##### User Interface Interaction","lastModifiedDate":"2024-03-24"},{"lineNumber":387,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":388,"author":{"gitId":"delishad21"},"content":"After the `filteredPersons` list is updated, the user interface is updated such that the `PersonListPanel` now shows persons the fufill the predicate generated by the original user input.","lastModifiedDate":"2024-03-24"},{"lineNumber":389,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":390,"author":{"gitId":"delishad21"},"content":"The following sequence diagram illustrates the `find` command with the user input `find n/Alice`","lastModifiedDate":"2024-03-24"},{"lineNumber":391,"author":{"gitId":"delishad21"},"content":"\u003cpuml src\u003d\"diagrams/FindImplementationSequenceDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":392,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":393,"author":{"gitId":"delishad21"},"content":"The following activity Diagram illustrates the user execution of the `find` command","lastModifiedDate":"2024-03-24"},{"lineNumber":394,"author":{"gitId":"delishad21"},"content":"\u003cpuml src\u003d\"diagrams/FindImplementationActivityDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":395,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":396,"author":{"gitId":"delishad21"},"content":"#### **Considerations**","lastModifiedDate":"2024-03-24"},{"lineNumber":397,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":398,"author":{"gitId":"delishad21"},"content":"##### User Interface Consistency","lastModifiedDate":"2024-03-24"},{"lineNumber":399,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":400,"author":{"gitId":"delishad21"},"content":"The choice of implementing the command to use prefixes to determine the filter criteria ensures consistency with other commands in the application. As this command follows a similar structure to all other commands, it is easier for users to learn and use the application.","lastModifiedDate":"2024-03-24"},{"lineNumber":401,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":402,"author":{"gitId":"delishad21"},"content":"##### Flexibility in Search Criteria","lastModifiedDate":"2024-03-24"},{"lineNumber":403,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":404,"author":{"gitId":"delishad21"},"content":"By allowing users to specify search criteria using different prefixes (name, phone, email, etc.), the implementation offers flexibility.","lastModifiedDate":"2024-03-24"},{"lineNumber":405,"author":{"gitId":"delishad21"},"content":"Users can search for contacts based on various details, enhancing the usability of the feature. In the context of our potential users, we considered that users would likely have to sometimes filter students by their classes, or filter people by their roles (student, tutor, professor). So we opted to implement this feature with the flexibility of using all prefixes to account for all these potential use cases.","lastModifiedDate":"2024-03-24"},{"lineNumber":406,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":407,"author":{"gitId":"delishad21"},"content":"##### Predicate-based Filtering","lastModifiedDate":"2024-03-24"},{"lineNumber":408,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":409,"author":{"gitId":"delishad21"},"content":"As the `Model` class was built prior to the implementation of this feature, we did our best to re-use available methods instead of unnecessarily re-programing already exisiting logic. Hence, we decided to craft the command around the idea of a custom predicate as the `Model` class already had a `updateFilteredPersonList` method implemented that would filter persons using a predicate.","lastModifiedDate":"2024-03-24"},{"lineNumber":410,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":411,"author":{"gitId":"delishad21"},"content":"##### Extensibility","lastModifiedDate":"2024-03-24"},{"lineNumber":412,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":413,"author":{"gitId":"delishad21"},"content":"This design allows for easy extension to accommodate future enhancements or additional search criteria. New prefixes can be added to support additional search criteria without significant changes as we merely need to update our `Predicate` logic. This ensures that the implementation remains adaptable to evolving requirements and we can upgrade and improve the feature whenever required.","lastModifiedDate":"2024-03-24"},{"lineNumber":414,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":415,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2024-03-03"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2024-03-03"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":445,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2024-03-03"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":452,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":455,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":458,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":460,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":467,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":471,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":473,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":477,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":489,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":492,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"delishad21"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2024-03-03"},{"lineNumber":504,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":518,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":519,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":520,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":521,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"Zer0Legion"},"content":"* Name: Sarah Johnson","lastModifiedDate":"2024-02-27"},{"lineNumber":532,"author":{"gitId":"Zer0Legion"},"content":"* Age: 23","lastModifiedDate":"2024-02-27"},{"lineNumber":533,"author":{"gitId":"Zer0Legion"},"content":"* Occupation: Head Tutor for CS1101S","lastModifiedDate":"2024-02-27"},{"lineNumber":534,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":535,"author":{"gitId":"Zer0Legion"},"content":"* head tutor for CS1101S course","lastModifiedDate":"2024-02-27"},{"lineNumber":536,"author":{"gitId":"Zer0Legion"},"content":"* has a need to manage various aspects of course administration","lastModifiedDate":"2024-02-27"},{"lineNumber":537,"author":{"gitId":"Zer0Legion"},"content":"* has a need to schedule classes","lastModifiedDate":"2024-02-27"},{"lineNumber":538,"author":{"gitId":"Zer0Legion"},"content":"* has a need to coordinate with teaching assistants","lastModifiedDate":"2024-02-27"},{"lineNumber":539,"author":{"gitId":"Zer0Legion"},"content":"* has a need to effectively communicate with students","lastModifiedDate":"2024-02-27"},{"lineNumber":540,"author":{"gitId":"delishad21"},"content":"* has a need to manage a significant number of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":541,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":544,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"Zer0Legion"},"content":"**Value proposition**:","lastModifiedDate":"2024-02-27"},{"lineNumber":547,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":548,"author":{"gitId":"delishad21"},"content":"* manage persons faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-03"},{"lineNumber":549,"author":{"gitId":"delishad21"},"content":"* Centralised platform to store and manage person details for all relevant individuals involved in course administration","lastModifiedDate":"2024-03-03"},{"lineNumber":550,"author":{"gitId":"delishad21"},"content":"* Easier access to information through organising relevant persons into different subgroups","lastModifiedDate":"2024-03-03"},{"lineNumber":551,"author":{"gitId":"Zer0Legion"},"content":"* Direct linkages to students’ schoolwork for easier tracking","lastModifiedDate":"2024-02-27"},{"lineNumber":552,"author":{"gitId":"Zer0Legion"},"content":"* Able to set up the address book through different data-loading options","lastModifiedDate":"2024-02-27"},{"lineNumber":553,"author":{"gitId":"Zer0Legion"},"content":"* Able to assist with management of large scale communication","lastModifiedDate":"2024-02-27"},{"lineNumber":554,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":555,"author":{"gitId":"Zer0Legion"},"content":"**Problem Scope**:","lastModifiedDate":"2024-02-27"},{"lineNumber":556,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":557,"author":{"gitId":"Zer0Legion"},"content":"* The CS1101S Head Tutor will face challenges in effectively organising and managing contact information within the department due to the large scale the course has to operate on. Existing methods, such as paper-based lists or basic digital spreadsheets, lack the necessary functionality to efficiently handle the diverse needs of proper contact management. There is a need for a user-friendly and offline-capable address book solution tailored specifically to the needs of a single user. This address book system should provide features such as easy contact entry and editing, quick search functionality, customizable categorization options, and the ability to add notes for each contact. Additionally, it should operate offline without requiring an internet connection and should not rely on complex database management systems.","lastModifiedDate":"2024-02-27"},{"lineNumber":558,"author":{"gitId":"Zer0Legion"},"content":"* While the address book system will greatly improve contact management and organisation for the CS1101S Head Tutor, it will not address broader departmental communication or collaboration needs beyond individual contact management since the address book is designed to be a single-user system. It will not facilitate communication between users or provide collaboration tools for group projects or tasks. Additionally, the address book system will not handle complex data analysis or reporting functions beyond basic contact information management. Finally, while the system will provide offline functionality, it will not offer real-time synchronisation with online databases or cloud storage solutions.","lastModifiedDate":"2024-02-27"},{"lineNumber":559,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"| Priority | As a …​                                      | I want to …​                            | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"Zer0Legion"},"content":"|----------|---------------------------------------------|----------------------------------------|-------------------------------------------------------------------------|","lastModifiedDate":"2024-02-28"},{"lineNumber":568,"author":{"gitId":"Zer0Legion"},"content":"| `* * *`  | potential user exploring the app            | see the app populated with sample data | immediately see an example of the app in use                            |","lastModifiedDate":"2024-02-27"},{"lineNumber":569,"author":{"gitId":"Zer0Legion"},"content":"| `* * *`  | new user                                    | easily clear the example data          | start using the app with real-life data                                 |","lastModifiedDate":"2024-02-27"},{"lineNumber":570,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                    | see usage instructions                 | refer to instructions when I forget how to use the App                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"delishad21"},"content":"| `* * *`  | new user                                    | add persons with their details         | start populating the address book                                       |","lastModifiedDate":"2024-03-03"},{"lineNumber":572,"author":{"gitId":"Zer0Legion"},"content":"| `* * *`  | new user                                    | save the data I input into the app     | don\u0027t lose the information I\u0027ve entered                                 |","lastModifiedDate":"2024-02-27"},{"lineNumber":573,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | add a new person                       |                                                                         |","lastModifiedDate":"2024-03-03"},{"lineNumber":574,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | delete a person                        | remove entries that I no longer need                                    |","lastModifiedDate":"2024-03-03"},{"lineNumber":575,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | update and edit person details         | keep my address book accurate                                           |","lastModifiedDate":"2024-03-03"},{"lineNumber":576,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | find a person by name                  | locate details of persons without having to go through the entire list  |","lastModifiedDate":"2024-03-03"},{"lineNumber":577,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | find a person by name                  | locate details of persons without having to go through the entire list  |","lastModifiedDate":"2024-03-03"},{"lineNumber":578,"author":{"gitId":"delishad21"},"content":"| `* * *`  | head tutor using the app                    | categorise my persons into groups      | manage different tutorial groups effectively                            |","lastModifiedDate":"2024-03-03"},{"lineNumber":579,"author":{"gitId":"Zer0Legion"},"content":"| `* * *`  | head tutor using the app                    | copy email addresses of a group        | effectively communicate with target groups                              |","lastModifiedDate":"2024-02-27"},{"lineNumber":580,"author":{"gitId":"delishad21"},"content":"| `* * *`  | user                                        | find a person by name                  | locate details of persons without having to go through the entire list  |","lastModifiedDate":"2024-03-03"},{"lineNumber":581,"author":{"gitId":"delishad21"},"content":"| `* *`    | user                                        | hide private person details            | minimize chance of someone else seeing them by accident                 |","lastModifiedDate":"2024-03-03"},{"lineNumber":582,"author":{"gitId":"Zer0Legion"},"content":"| `* *`    | experienced user                            | use the address book offline           | update and interact with it anywhere                                    |","lastModifiedDate":"2024-02-27"},{"lineNumber":583,"author":{"gitId":"delishad21"},"content":"| `*`      | user with many persons in the address book  | sort persons by name                   | locate a person easily                                                  |","lastModifiedDate":"2024-03-03"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"delishad21"},"content":"**Use case: UC01 — Delete a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"delishad21"},"content":"1.  User !!requests to list persons (UC04)!!","lastModifiedDate":"2024-03-03"},{"lineNumber":596,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2024-03-03"},{"lineNumber":597,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2024-03-03"},{"lineNumber":598,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2024-03-03"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"danielleloh"},"content":"**Use case: UC02 — Help**","lastModifiedDate":"2024-02-29"},{"lineNumber":615,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":616,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":617,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":618,"author":{"gitId":"Zer0Legion"},"content":"1.  User requests help information.","lastModifiedDate":"2024-02-27"},{"lineNumber":619,"author":{"gitId":"Zer0Legion"},"content":"2.  AddressBook displays help information.","lastModifiedDate":"2024-02-27"},{"lineNumber":620,"author":{"gitId":"Zer0Legion"},"content":"3.  User reads the help information.","lastModifiedDate":"2024-02-27"},{"lineNumber":621,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":622,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":623,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":624,"author":{"gitId":"delishad21"},"content":"**Use case: UC03 — Add a person**","lastModifiedDate":"2024-03-03"},{"lineNumber":625,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":626,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":627,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":628,"author":{"gitId":"delishad21"},"content":"1.  User requests to add a new person and inputs details for the new person.","lastModifiedDate":"2024-03-03"},{"lineNumber":629,"author":{"gitId":"delishad21"},"content":"2.  AddressBook saves the new person\u0027s information.","lastModifiedDate":"2024-03-03"},{"lineNumber":630,"author":{"gitId":"delishad21"},"content":"3.  AddressBook confirms the addition of the new person.","lastModifiedDate":"2024-03-03"},{"lineNumber":631,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":632,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":633,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":634,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":635,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":636,"author":{"gitId":"delishad21"},"content":"*  1a. User does not input all compulsory parameters along with the person.","lastModifiedDate":"2024-03-03"},{"lineNumber":637,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":638,"author":{"gitId":"Zer0Legion"},"content":"    *  1a1. AddressBook prompts the user on the proper usage of the command.","lastModifiedDate":"2024-02-27"},{"lineNumber":639,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":640,"author":{"gitId":"Zer0Legion"},"content":"        Step 1a1 is repeated until the data entered is correct.","lastModifiedDate":"2024-02-27"},{"lineNumber":641,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":642,"author":{"gitId":"danielleloh"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":643,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":644,"author":{"gitId":"delishad21"},"content":"*  1b. User tries to add a person with an existing email address.","lastModifiedDate":"2024-03-03"},{"lineNumber":645,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":646,"author":{"gitId":"danielleloh"},"content":"    *  1b1. AddressBook displays an error message informing the user that the email address already exists.","lastModifiedDate":"2024-03-11"},{"lineNumber":647,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":648,"author":{"gitId":"danielleloh"},"content":"        Step 1b1 is repeated until a valid email address is entered.","lastModifiedDate":"2024-03-11"},{"lineNumber":649,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":650,"author":{"gitId":"danielleloh"},"content":"        Use case resumes at step 2.","lastModifiedDate":"2024-03-11"},{"lineNumber":651,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":652,"author":{"gitId":"delishad21"},"content":"**Use case: UC04 — List all persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":653,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":654,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":655,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":656,"author":{"gitId":"delishad21"},"content":"1.  User requests to list persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":657,"author":{"gitId":"delishad21"},"content":"2.  AddressBook shows the list of persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":658,"author":{"gitId":"delishad21"},"content":"3.  User views the list of persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":659,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":660,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":661,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":662,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":663,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":664,"author":{"gitId":"Zer0Legion"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":665,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":666,"author":{"gitId":"Zer0Legion"},"content":"    * 2a1. AddressBook displays a message indicating that the list is empty.","lastModifiedDate":"2024-02-27"},{"lineNumber":667,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":668,"author":{"gitId":"Zer0Legion"},"content":"      Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":669,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":670,"author":{"gitId":"delishad21"},"content":"**Use case: UC05 — Edit a person\u0027s details**","lastModifiedDate":"2024-03-03"},{"lineNumber":671,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":672,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":673,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":674,"author":{"gitId":"delishad21"},"content":"1.  User requests to edit a specific person with updated details.","lastModifiedDate":"2024-03-03"},{"lineNumber":675,"author":{"gitId":"Zer0Legion"},"content":"2.  AddressBook saves the updated details.","lastModifiedDate":"2024-02-27"},{"lineNumber":676,"author":{"gitId":"Zer0Legion"},"content":"3.  AddressBook confirms the successful update.","lastModifiedDate":"2024-02-27"},{"lineNumber":677,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":678,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":679,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":680,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":681,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":682,"author":{"gitId":"delishad21"},"content":"*   1a. User does not input enough parameters along with the person.","lastModifiedDate":"2024-03-03"},{"lineNumber":683,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":684,"author":{"gitId":"Zer0Legion"},"content":"    *  1a1. AddressBook prompts the user on the proper usage of the command.","lastModifiedDate":"2024-02-27"},{"lineNumber":685,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":686,"author":{"gitId":"Zer0Legion"},"content":"       Step 1a1 is repeated until the data entered is correct.","lastModifiedDate":"2024-02-27"},{"lineNumber":687,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":688,"author":{"gitId":"delishad21"},"content":"*   1b. The selected person does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":689,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":690,"author":{"gitId":"delishad21"},"content":"    *  1b1. AddressBook displays an error message indicating that the person does not exist.","lastModifiedDate":"2024-03-03"},{"lineNumber":691,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":692,"author":{"gitId":"Zer0Legion"},"content":"      Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":693,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":694,"author":{"gitId":"delishad21"},"content":"**Use case: UC06 — Find persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":695,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":696,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":697,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":698,"author":{"gitId":"delishad21"},"content":"1.  User requests to find a specific person matching the search criteria.","lastModifiedDate":"2024-03-03"},{"lineNumber":699,"author":{"gitId":"delishad21"},"content":"2.  AddressBook displays a list of persons matching the criteria.","lastModifiedDate":"2024-03-03"},{"lineNumber":700,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":701,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":702,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":703,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":704,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":705,"author":{"gitId":"delishad21"},"content":"*    1a. No persons match the search criteria.","lastModifiedDate":"2024-03-03"},{"lineNumber":706,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":707,"author":{"gitId":"delishad21"},"content":"     *   1a1. AddressBook displays a message indicating that no persons match the criteria.","lastModifiedDate":"2024-03-03"},{"lineNumber":708,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":709,"author":{"gitId":"Zer0Legion"},"content":"     Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":710,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":711,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":712,"author":{"gitId":"delishad21"},"content":"**Use case: UC07 — Import persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":713,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":714,"author":{"gitId":"Pughal77"},"content":"**MSS**","lastModifiedDate":"2024-02-29"},{"lineNumber":715,"author":{"gitId":"delishad21"},"content":"1. User requests to import persons from a csv file.","lastModifiedDate":"2024-03-03"},{"lineNumber":716,"author":{"gitId":"delishad21"},"content":"2. AddressBook displays a message that all persons have been imported.","lastModifiedDate":"2024-03-03"},{"lineNumber":717,"author":{"gitId":"delishad21"},"content":"3. User is able to see all the persons imported when a list of persons is requested.","lastModifiedDate":"2024-03-03"},{"lineNumber":718,"author":{"gitId":"danielleloh"},"content":"   Use case ends.","lastModifiedDate":"2024-03-01"},{"lineNumber":719,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":720,"author":{"gitId":"Pughal77"},"content":"**Extension**","lastModifiedDate":"2024-02-29"},{"lineNumber":721,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":722,"author":{"gitId":"danielleloh"},"content":"*   1a. AddressBook cannot find file to be imported.","lastModifiedDate":"2024-03-01"},{"lineNumber":723,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":724,"author":{"gitId":"danielleloh"},"content":"    *   1a1. AddressBook displays a message indicating that the file is not recognised.","lastModifiedDate":"2024-03-01"},{"lineNumber":725,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":726,"author":{"gitId":"Pughal77"},"content":"    Use case ends.","lastModifiedDate":"2024-02-29"},{"lineNumber":727,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":728,"author":{"gitId":"danielleloh"},"content":"*   1b. The file to be imported is not a csv file.","lastModifiedDate":"2024-03-01"},{"lineNumber":729,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":730,"author":{"gitId":"Pughal77"},"content":"    *  1b1. AddressBook displays an error message indicating that the file type is not recognised and should be a csv file","lastModifiedDate":"2024-02-29"},{"lineNumber":731,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":732,"author":{"gitId":"Pughal77"},"content":"    Use case ends.","lastModifiedDate":"2024-02-29"},{"lineNumber":733,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":734,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-01"},{"lineNumber":735,"author":{"gitId":"danielleloh"},"content":"**Use case: UC08 — Copy email addresses**","lastModifiedDate":"2024-03-01"},{"lineNumber":736,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":737,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-03-01"},{"lineNumber":738,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":739,"author":{"gitId":"delishad21"},"content":"1.  User requests to copy emails of currently displayed persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":740,"author":{"gitId":"delishad21"},"content":"2.  AddressBook copies the emails of currently displayed persons","lastModifiedDate":"2024-03-03"},{"lineNumber":741,"author":{"gitId":"jayllo-c"},"content":"into user\u0027s clipboard.","lastModifiedDate":"2024-02-28"},{"lineNumber":742,"author":{"gitId":"jayllo-c"},"content":"3.  AddressBook notifies the user that emails have been copied.","lastModifiedDate":"2024-02-28"},{"lineNumber":743,"author":{"gitId":"jayllo-c"},"content":"4.  User can paste emails when composing emails.","lastModifiedDate":"2024-02-28"},{"lineNumber":744,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":745,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":746,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":747,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-03-01"},{"lineNumber":748,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":749,"author":{"gitId":"delishad21"},"content":"*   2a. No persons currently displayed.","lastModifiedDate":"2024-03-03"},{"lineNumber":750,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":751,"author":{"gitId":"jayllo-c"},"content":"    * 2a1. AddressBook displays a message indicating that","lastModifiedDate":"2024-02-28"},{"lineNumber":752,"author":{"gitId":"delishad21"},"content":"    no persons are currently displayed.","lastModifiedDate":"2024-03-03"},{"lineNumber":753,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":754,"author":{"gitId":"jayllo-c"},"content":"    Use case ends.","lastModifiedDate":"2024-02-28"},{"lineNumber":755,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-28"},{"lineNumber":756,"author":{"gitId":"delishad21"},"content":"**Use case: UC09 — Clear all persons**","lastModifiedDate":"2024-03-03"},{"lineNumber":757,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":758,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":759,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":760,"author":{"gitId":"delishad21"},"content":"1.  User requests to clear all persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":761,"author":{"gitId":"delishad21"},"content":"2.  AddressBook clears all persons.","lastModifiedDate":"2024-03-03"},{"lineNumber":762,"author":{"gitId":"delishad21"},"content":"3.  AddressBook displays a message indicating that all persons have been cleared.","lastModifiedDate":"2024-03-03"},{"lineNumber":763,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":764,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":765,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":766,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":767,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":768,"author":{"gitId":"Zer0Legion"},"content":"*    1a. User inputs extraneous parameters.","lastModifiedDate":"2024-02-27"},{"lineNumber":769,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":770,"author":{"gitId":"Zer0Legion"},"content":"     *   1a1. AddressBook displays a message indicating that an extraneous parameter was found, and confirms User\u0027s intention.","lastModifiedDate":"2024-02-27"},{"lineNumber":771,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":772,"author":{"gitId":"Zer0Legion"},"content":"         Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":773,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":774,"author":{"gitId":"danielleloh"},"content":"**Use case: UC10 — Export listed persons to CSV**","lastModifiedDate":"2024-03-23"},{"lineNumber":775,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":776,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":777,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":778,"author":{"gitId":"danielleloh"},"content":"1.  User !!requests to filter persons (UC06)!! by desired requirements","lastModifiedDate":"2024-03-23"},{"lineNumber":779,"author":{"gitId":"danielleloh"},"content":"2. User requests to export all listed persons and details to a CSV file.","lastModifiedDate":"2024-03-23"},{"lineNumber":780,"author":{"gitId":"danielleloh"},"content":"3. AddressBook exports the persons to a CSV file.","lastModifiedDate":"2024-03-23"},{"lineNumber":781,"author":{"gitId":"danielleloh"},"content":"4. AddressBook displays a message to confirm that all listed persons have been exported to a CSV file.","lastModifiedDate":"2024-03-23"},{"lineNumber":782,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":783,"author":{"gitId":"danielleloh"},"content":"    Use case ends.","lastModifiedDate":"2024-03-23"},{"lineNumber":784,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":785,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-03-23"},{"lineNumber":786,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":787,"author":{"gitId":"danielleloh"},"content":"* 2a. No persons are listed.","lastModifiedDate":"2024-03-23"},{"lineNumber":788,"author":{"gitId":"danielleloh"},"content":"  * 2a2. AddressBook displays a message indicating that there is no persons to export.","lastModifiedDate":"2024-03-23"},{"lineNumber":789,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":790,"author":{"gitId":"danielleloh"},"content":"    Use case ends.","lastModifiedDate":"2024-02-29"},{"lineNumber":791,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-02-29"},{"lineNumber":792,"author":{"gitId":"Zer0Legion"},"content":"**Use case: UC11 - Delete shown persons**","lastModifiedDate":"2024-03-24"},{"lineNumber":793,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":794,"author":{"gitId":"Zer0Legion"},"content":"**MSS:**","lastModifiedDate":"2024-03-24"},{"lineNumber":795,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":796,"author":{"gitId":"Zer0Legion"},"content":"1. User !!requests to filter persons (UC06)!! by desired requirements","lastModifiedDate":"2024-03-24"},{"lineNumber":797,"author":{"gitId":"Zer0Legion"},"content":"2. User requests to delete all listed persons.","lastModifiedDate":"2024-03-24"},{"lineNumber":798,"author":{"gitId":"Zer0Legion"},"content":"3. AddressBook deletes all listed persons.","lastModifiedDate":"2024-03-24"},{"lineNumber":799,"author":{"gitId":"Zer0Legion"},"content":"4. AddressBook displays a message to confirm that all listed persons have been deleted.","lastModifiedDate":"2024-03-24"},{"lineNumber":800,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":801,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-03-24"},{"lineNumber":802,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":803,"author":{"gitId":"Zer0Legion"},"content":"**Extensions:**","lastModifiedDate":"2024-03-24"},{"lineNumber":804,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":805,"author":{"gitId":"Zer0Legion"},"content":"* 2a. No persons are listed.","lastModifiedDate":"2024-03-24"},{"lineNumber":806,"author":{"gitId":"Zer0Legion"},"content":"    * 2a1. AddressBook displays a message indicating that there is no persons to delete.","lastModifiedDate":"2024-03-24"},{"lineNumber":807,"author":{"gitId":"Zer0Legion"},"content":"  ","lastModifiedDate":"2024-03-24"},{"lineNumber":808,"author":{"gitId":"Zer0Legion"},"content":"        Use case ends.","lastModifiedDate":"2024-03-24"},{"lineNumber":809,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":810,"author":{"gitId":"Zer0Legion"},"content":"* 2b. User has a filtered view that contains all existing persons.","lastModifiedDate":"2024-03-24"},{"lineNumber":811,"author":{"gitId":"Zer0Legion"},"content":"     * 2b1. AddressBook displays a message indicating that all persons cannot be deleted at once.","lastModifiedDate":"2024-03-24"},{"lineNumber":812,"author":{"gitId":"Zer0Legion"},"content":"    ","lastModifiedDate":"2024-03-24"},{"lineNumber":813,"author":{"gitId":"Zer0Legion"},"content":"        Use case ends.","lastModifiedDate":"2024-03-24"},{"lineNumber":814,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":815,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":816,"author":{"gitId":"Zer0Legion"},"content":"**Use case: UC12 — Exit application**","lastModifiedDate":"2024-03-24"},{"lineNumber":817,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":818,"author":{"gitId":"danielleloh"},"content":"**MSS:**","lastModifiedDate":"2024-02-29"},{"lineNumber":819,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":820,"author":{"gitId":"Zer0Legion"},"content":"1.  User requests to exit the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":821,"author":{"gitId":"Zer0Legion"},"content":"2.  AddressBook exits the application.","lastModifiedDate":"2024-02-27"},{"lineNumber":822,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":823,"author":{"gitId":"Zer0Legion"},"content":"    Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":824,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":825,"author":{"gitId":"danielleloh"},"content":"**Extensions:**","lastModifiedDate":"2024-02-29"},{"lineNumber":826,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":827,"author":{"gitId":"Zer0Legion"},"content":"*    1a. User inputs extraneous parameters.","lastModifiedDate":"2024-02-27"},{"lineNumber":828,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":829,"author":{"gitId":"Zer0Legion"},"content":"     *   1a1. AddressBook displays a message indicating that an extraneous parameter was found, and confirms User\u0027s intention.","lastModifiedDate":"2024-02-27"},{"lineNumber":830,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":831,"author":{"gitId":"Zer0Legion"},"content":"         Use case ends.","lastModifiedDate":"2024-02-27"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"1.   Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"delishad21"},"content":"2.   Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":837,"author":{"gitId":"-"},"content":"3.   A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"delishad21"},"content":"4.   A user should be able to import up to 1000 persons from an external source without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-03"},{"lineNumber":839,"author":{"gitId":"Zer0Legion"},"content":"5.   The application should provide comprehensive documentation and help resources to assist users in understanding how to use the software effectively.","lastModifiedDate":"2024-02-27"},{"lineNumber":840,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":847,"author":{"gitId":"delishad21"},"content":"* **Private person detail**: A person detail that is not meant to be shared with others","lastModifiedDate":"2024-03-03"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":857,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":858,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"delishad21"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample persons. The window size may not be optimum.","lastModifiedDate":"2024-03-03"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2024-03-03"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2024-03-03"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"delishad21"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2024-03-03"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"delishad21"},"content":"       Expected: First person is deleted from the list. Details of the deleted person shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2024-03-03"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"delishad21"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2024-03-03"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"danielleloh":113,"delishad21":113,"Pughal77":53,"Zer0Legion":184,"jayllo-c":70,"-":369}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"# Avengers Assemble User Guide","lastModifiedDate":"2024-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"Avengers Assemble (AA) is a **desktop app for managing contacts**, meant for use with a Command Line Interface (CLI)","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"The application is designed for **Head Tutors** of the NUS CS1101S Programming Methodology course, who intend to simplify their administrative tasks relating to contact management between students, other teaching assistants, and course instructors.","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"However, its functions can also be extended to you if you are a head tutor of another course.","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"Our user guide aims to help you understand how to get started with the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"We will cover the features in a chronological order, from:","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"1. Installation, to","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"2. Simple commands like adding and editing, followed by","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"3. More advanced commands like filtering and exporting data.","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"## Quick Start","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"1. Ensure you have `Java 11` or above installed in your computer.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"1. Download the latest `avengersassemble.jar` [here](https://github.com/AY2324S2-CS2103T-T10-1/tp/releases/tag/v1.2).","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for our application.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar avengersassemble.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"   ```dtd","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"    cd \u003cpath_to_the_folder_containing_the_jar_file\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"    java -jar avengersassemble.jar","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"    ```","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"   You should see this when the app starts up. Note how it contains some sample data.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"### Legend","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"These boxes might offer you additional information of different types:","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"\u003e**Good to know:**","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"\u003eI provide you with supporting information.","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"**Important:**","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"I provide you with more important information that you should know.","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"**Tip:**","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"I provide you with tips to use our app more effectively.","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"**Caution:**","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"I provide you with warnings about potential issues you might face.","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"### Getting Help : `help`","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"Shows you a link to guide you on how to use the application. Click on the link to access the user guide.","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The application ignores any extraneous parameters as we assume they are typos.","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"Before we proceed with the commands, here are some important points to note on their formatting. These points will also be repeated in the [command format summary](#command-format-summary) for you to refer to easily at any point in time.","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"**Important:** \u003c/br\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"  \u003e e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"* Prefixes encased with \u0027[ ]\u0027 are optional.","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"  \u003e e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"* Prefixes with \u0027…\u0027 after them can be used multiple times.","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"  \u003e e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend` (i.e 1 time), `t/friend t/family` etc.","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"  \u003e e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help` , `list`, `exit`, `copy`, `export` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Zer0Legion"},"content":"  \u003e e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"**Caution:** \u003c/br\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"### Adding a Person: `add`","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"Adds a person to your contact list. The person\u0027s details are now stored in the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Zer0Legion"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [m/MATRICULATION_NUMBER] [s/STUDIO] [r/REFLECTION]​`","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"**Important:** Each person should have a unique email address. AA does not allow for duplicate email addresses to be added.","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-02-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"**Tip:** A person can have any number of tags (including 0)","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"Zer0Legion"},"content":"**Example:**","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"Zer0Legion"},"content":"`add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 m/A1234567Z s/S1 r/R2`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"Zer0Legion"},"content":"* Adds a contact John Doe with the respective phone number, email and physical addresses, matriculation number, studio group and recitation group.","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The following tags will be automatically added to the person if the following conditions are met:","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"Zer0Legion"},"content":"\u003e 1. `student`: If matriculation number, studio, and reflection fields are present;","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"Zer0Legion"},"content":"\u003e 2. `TA`: If matriculation number and one of either studio or reflection fields are present;","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"Zer0Legion"},"content":"\u003e 3. `instructor`: If none of the three fields are present.","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"Zer0Legion"},"content":"\u003e You are free to edit or remove the tags after the person is added.","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully add a person, indicating their details:","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Zer0Legion"},"content":"\u003e![add success message](images/success_images/add_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"jayllo-c"},"content":"For more details on each parameter, [click here](#command-format-summary).","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":156,"author":{"gitId":"Zer0Legion"},"content":"### Listing All Persons : `list`","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Zer0Legion"},"content":"Displays all the persons in your contact list.","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The application ignores any extraneous parameters as we assume they are typos.","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully list all contacts, with the app showing all existing persons in the contact list:","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Zer0Legion"},"content":"\u003e![list success message](images/success_images/list_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":167,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Zer0Legion"},"content":"### Editing a Person : `edit`","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Zer0Legion"},"content":"Edits the details of an existing person in your contact list.","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":173,"author":{"gitId":"Zer0Legion"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]… [m/MATRICULATION_NUMBER] [s/STUDIO] [r/REFLECTION]​`","lastModifiedDate":"2024-03-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"Zer0Legion"},"content":"**Information:** \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"Zer0Legion"},"content":"* The person at the specified `INDEX` will be edited. The index **must be a positive integer** (1, 2, 3, …)​","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"Zer0Legion"},"content":"* Existing values will be updated to the new values.","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"Zer0Legion"},"content":"* Editing tags will replace all existing tags i.e. adding of tags is **not cumulative**.","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"Zer0Legion"},"content":"* You can remove optional fields by typing `t/`, `m/`, `r/` or `s/` respectively without any values.","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"Zer0Legion"},"content":"**Examples:**","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Zer0Legion"},"content":"1. `edit 2 n/Betsy Crower t/`: \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"Zer0Legion"},"content":"* Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"Zer0Legion"},"content":"2. `edit 1 p/91234567 e/johndoe@example.com`: \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"Zer0Legion"},"content":"* Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":194,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully edit a person, indicating their updated details:","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"Zer0Legion"},"content":"\u003e![edit_success_message](images/success_images/edit_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"Zer0Legion"},"content":"**Important:**","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"Zer0Legion"},"content":"Updating a matriculation number, studio, or reflection field will not automatically update the tags of the person. You will need to manually update the tags if necessary.","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":207,"author":{"gitId":"jayllo-c"},"content":"For more details on each parameter, [click here](#command-format-summary).","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"Zer0Legion"},"content":"### Filtering Persons: `find`","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"Zer0Legion"},"content":"Filters your contacts based on specific criteria you set.","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"delishad21"},"content":"Format: `find PREFIX/KEYWORD`","lastModifiedDate":"2024-03-03"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"Zer0Legion"},"content":"**Information:** \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"Zer0Legion"},"content":"* Use this command to search for persons using a specific aspect of their details, as specified by the prefix.","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"Zer0Legion"},"content":"* The search will return any result that contains the keyword you have specified.","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. `find e/john` will find any person that contains `john` in their email.","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"Zer0Legion"},"content":"* The search is **case-insensitive**.","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"Zer0Legion"},"content":"* Only one prefix can be used at a time.","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":227,"author":{"gitId":"Zer0Legion"},"content":"**Example:**","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"Zer0Legion"},"content":"`find n/John` returns `john` and `John Doe` if they exist in your contact book.","lastModifiedDate":"2024-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully find a person, with the app showing all persons that match your search criteria:","lastModifiedDate":"2024-03-27"},{"lineNumber":232,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"Zer0Legion"},"content":"\u003e![find success message](images/success_images/find_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"jayllo-c"},"content":"For more details on each parameter, [click here](#command-format-summary).","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":238,"author":{"gitId":"Zer0Legion"},"content":"### Copying Contact Details: `copy`","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":240,"author":{"gitId":"delishad21"},"content":"Copies the emails of currently displayed persons into your clipboard.","lastModifiedDate":"2024-03-03"},{"lineNumber":241,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":242,"author":{"gitId":"jayllo-c"},"content":"Format: `copy`","lastModifiedDate":"2024-02-27"},{"lineNumber":243,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The application ignores any extraneous parameters as we assume they are typos.","lastModifiedDate":"2024-03-24"},{"lineNumber":244,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":245,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully copy the contact details shown to you, indicating that they have been copied to the clipboard:","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"Zer0Legion"},"content":"\u003e![copy success message](images/success_images/copy_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"Zer0Legion"},"content":"**Tip:** \u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"jayllo-c"},"content":"* Use `list` or `find` to get the list of people you would like to email.","lastModifiedDate":"2024-02-27"},{"lineNumber":254,"author":{"gitId":"jayllo-c"},"content":"* The emails are copied into your clipboard such that you may easily broadcast emails","lastModifiedDate":"2024-02-27"},{"lineNumber":255,"author":{"gitId":"jayllo-c"},"content":"  to specific groups of people.","lastModifiedDate":"2024-02-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"Zer0Legion"},"content":"### Deleting a Person : `delete`","lastModifiedDate":"2024-03-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"Zer0Legion"},"content":"Deletes the specified person from your contact list.","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":264,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":265,"author":{"gitId":"delishad21"},"content":"**Important:** \u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"delishad21"},"content":"The person at the specified `INDEX` will be deleted. The index **must be a positive integer** (1, 2, 3, …)​","lastModifiedDate":"2024-03-29"},{"lineNumber":268,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":269,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":270,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"**Examples**:","lastModifiedDate":"2024-03-29"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"1. `list` followed by `delete 2` deletes the 2nd person stored in the app.","lastModifiedDate":"2024-03-29"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"2. `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2024-03-29"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":275,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully delete a person from your list, indicating the details of the deleted person:","lastModifiedDate":"2024-03-29"},{"lineNumber":276,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":277,"author":{"gitId":"delishad21"},"content":"\u003e![delete success message](images/success_images/delete_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"Zer0Legion"},"content":"### Deleting filtered persons : `deleteshown`","lastModifiedDate":"2024-03-24"},{"lineNumber":281,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":282,"author":{"gitId":"Zer0Legion"},"content":"Deletes the current filtered list of persons. Requires a `find` command to be run first.","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"Zer0Legion"},"content":"Format: `deleteshown`","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully delete the shown persons from your list.","lastModifiedDate":"2024-03-29"},{"lineNumber":286,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":287,"author":{"gitId":"delishad21"},"content":"\u003e![deleteShown success message](images/success_images/deleteShown_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":288,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The application ignores any extraneous parameters as we assume they are typos.","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":291,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":292,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":293,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":294,"author":{"gitId":"Zer0Legion"},"content":"* Deletes all persons in the current filtered list of persons.","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"Zer0Legion"},"content":"* The list of persons is filtered using the most recent `find` command.","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"Zer0Legion"},"content":"* The remaining list of persons is shown after the `find` command is executed.","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":298,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":299,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":300,"author":{"gitId":"delishad21"},"content":"### Adding an Exam : `addExam`","lastModifiedDate":"2024-03-29"},{"lineNumber":301,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":302,"author":{"gitId":"delishad21"},"content":"Adds an exam into your exam list.","lastModifiedDate":"2024-03-29"},{"lineNumber":303,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":304,"author":{"gitId":"delishad21"},"content":"Format: `addExam n/NAME s/MAX_SCORE`","lastModifiedDate":"2024-03-29"},{"lineNumber":305,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":306,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":307,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":308,"author":{"gitId":"delishad21"},"content":"**Important:** Each exam should have a unique name. AA does not allow for exams with duplicate names to be added","lastModifiedDate":"2024-03-29"},{"lineNumber":309,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":310,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":311,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":312,"author":{"gitId":"delishad21"},"content":"Example: `addExam n/Midterm s/100`","lastModifiedDate":"2024-03-29"},{"lineNumber":313,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":314,"author":{"gitId":"delishad21"},"content":"* Adds an exam with the name of \"Midterm\" and a max score of \"100\"","lastModifiedDate":"2024-03-29"},{"lineNumber":315,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":316,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully add an exam, including the details of the exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":317,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":318,"author":{"gitId":"delishad21"},"content":"\u003e![addExam success message](images/success_images/addExam_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":319,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":320,"author":{"gitId":"delishad21"},"content":"### Selecting an Exam : `selectExam`","lastModifiedDate":"2024-03-29"},{"lineNumber":321,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":322,"author":{"gitId":"delishad21"},"content":"Selects an exam in your exam list.","lastModifiedDate":"2024-03-29"},{"lineNumber":323,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":324,"author":{"gitId":"delishad21"},"content":"Format: `selectExam INDEX`","lastModifiedDate":"2024-03-29"},{"lineNumber":325,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":326,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":327,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":328,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":329,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":330,"author":{"gitId":"delishad21"},"content":"* Selects the exam at the specified INDEX.","lastModifiedDate":"2024-03-29"},{"lineNumber":331,"author":{"gitId":"delishad21"},"content":"* On selection, the exam will become highlighted on the user Interface.","lastModifiedDate":"2024-03-29"},{"lineNumber":332,"author":{"gitId":"delishad21"},"content":"* Selecting an exam will display all scores of persons associated with that exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":333,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":334,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":335,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":336,"author":{"gitId":"delishad21"},"content":"Example: `selectExam 1`","lastModifiedDate":"2024-03-29"},{"lineNumber":337,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":338,"author":{"gitId":"delishad21"},"content":"* Selects the first exam displayed on the exam list.","lastModifiedDate":"2024-03-29"},{"lineNumber":339,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":340,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully select an exam, including the details of the exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":341,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":342,"author":{"gitId":"delishad21"},"content":"\u003e![addExam success message](images/success_images/selectExam_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":343,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":344,"author":{"gitId":"delishad21"},"content":"### Adding an Exam Score : `addScore`","lastModifiedDate":"2024-03-29"},{"lineNumber":345,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":346,"author":{"gitId":"delishad21"},"content":"Adds an exam score to a person.","lastModifiedDate":"2024-03-29"},{"lineNumber":347,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":348,"author":{"gitId":"delishad21"},"content":"Format: `addScore s/SCORE`","lastModifiedDate":"2024-03-29"},{"lineNumber":349,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":350,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":351,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":352,"author":{"gitId":"delishad21"},"content":"**Important: An exam must be selected for this command to work!**","lastModifiedDate":"2024-03-29"},{"lineNumber":353,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":354,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":355,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":356,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":357,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":358,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":359,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":360,"author":{"gitId":"delishad21"},"content":"* Adds an exam score to the person at the specific INDEX.","lastModifiedDate":"2024-03-29"},{"lineNumber":361,"author":{"gitId":"delishad21"},"content":"* The exam score added will correspond to the currently selected exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":362,"author":{"gitId":"delishad21"},"content":"* The exam score added **cannot** be greater than the max score of the currently selected exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":363,"author":{"gitId":"delishad21"},"content":"* The exam score will be displayed on the user interface only when the corresponding exam is selected.","lastModifiedDate":"2024-03-29"},{"lineNumber":364,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":365,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":366,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":367,"author":{"gitId":"delishad21"},"content":"Example: `addScore 1 s/34`","lastModifiedDate":"2024-03-29"},{"lineNumber":368,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":369,"author":{"gitId":"delishad21"},"content":"* Adds a score of 34 to the person currently displayed at index 1.","lastModifiedDate":"2024-03-29"},{"lineNumber":370,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":371,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":372,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully add a score, including the name of the person you added the score for.","lastModifiedDate":"2024-03-29"},{"lineNumber":373,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":374,"author":{"gitId":"delishad21"},"content":"\u003e![addScore success message](images/success_images/addScore_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":375,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":376,"author":{"gitId":"delishad21"},"content":"### Editing an Exam Score : `editScore`","lastModifiedDate":"2024-03-29"},{"lineNumber":377,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":378,"author":{"gitId":"delishad21"},"content":"Edits a person\u0027s exam score.","lastModifiedDate":"2024-03-29"},{"lineNumber":379,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":380,"author":{"gitId":"delishad21"},"content":"Format: `editScore INDEX s/SCORE`","lastModifiedDate":"2024-03-29"},{"lineNumber":381,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":382,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":383,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":384,"author":{"gitId":"delishad21"},"content":"**Important: An exam must be selected for this command to work!**","lastModifiedDate":"2024-03-29"},{"lineNumber":385,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":386,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":387,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":388,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":389,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":390,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":391,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":392,"author":{"gitId":"delishad21"},"content":"* Edits the exam score of the person at the specific INDEX.","lastModifiedDate":"2024-03-29"},{"lineNumber":393,"author":{"gitId":"delishad21"},"content":"* A person **must** have an exam score for the currently selected exam for this command to work.","lastModifiedDate":"2024-03-29"},{"lineNumber":394,"author":{"gitId":"delishad21"},"content":"* The exam score edited corresponds to the currently selected exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":395,"author":{"gitId":"delishad21"},"content":"* The exam score **cannot** be edited to be greater than the max score of the currently selected exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":396,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":397,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":398,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":399,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":400,"author":{"gitId":"delishad21"},"content":"Example: `editScore 1 s/43`","lastModifiedDate":"2024-03-29"},{"lineNumber":401,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":402,"author":{"gitId":"delishad21"},"content":"* Edits the score of the person currently displayed at index 1 to 43.","lastModifiedDate":"2024-03-29"},{"lineNumber":403,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":404,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully edit a score, including some details of the person you added the score for.","lastModifiedDate":"2024-03-29"},{"lineNumber":405,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":406,"author":{"gitId":"delishad21"},"content":"\u003e![editScore success message](images/success_images/editScore_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":407,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":408,"author":{"gitId":"delishad21"},"content":"### Deleting an Exam Score : `deleteScore`","lastModifiedDate":"2024-03-29"},{"lineNumber":409,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":410,"author":{"gitId":"delishad21"},"content":"Deletes a person\u0027s exam score.","lastModifiedDate":"2024-03-29"},{"lineNumber":411,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":412,"author":{"gitId":"delishad21"},"content":"Format: `deleteScore INDEX`","lastModifiedDate":"2024-03-29"},{"lineNumber":413,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":414,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":415,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":416,"author":{"gitId":"delishad21"},"content":"**Important: An exam must be selected for this command to work!**","lastModifiedDate":"2024-03-29"},{"lineNumber":417,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":418,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":419,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":420,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":421,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":422,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":423,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":424,"author":{"gitId":"delishad21"},"content":"* Deletes the exam score of the person at the specific INDEX.","lastModifiedDate":"2024-03-29"},{"lineNumber":425,"author":{"gitId":"delishad21"},"content":"* A person **must** have an exam score for the currently selected exam for this command to work.","lastModifiedDate":"2024-03-29"},{"lineNumber":426,"author":{"gitId":"delishad21"},"content":"* The exam score deleted corresponds to the currently selected exam.","lastModifiedDate":"2024-03-29"},{"lineNumber":427,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":428,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":429,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":430,"author":{"gitId":"delishad21"},"content":"Example: `deleteScore 1`","lastModifiedDate":"2024-03-29"},{"lineNumber":431,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":432,"author":{"gitId":"delishad21"},"content":"* deletes the score of the person currently displayed at index 1.","lastModifiedDate":"2024-03-29"},{"lineNumber":433,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":434,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully delete a score, including some details of the person you added the score for.","lastModifiedDate":"2024-03-29"},{"lineNumber":435,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":436,"author":{"gitId":"delishad21"},"content":"\u003e![deleteScore success message](images/success_images/deleteScore_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":437,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":438,"author":{"gitId":"delishad21"},"content":"### Deleting an Exam : `deleteExam`","lastModifiedDate":"2024-03-29"},{"lineNumber":439,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":440,"author":{"gitId":"delishad21"},"content":"Removes an exam from your exam list.","lastModifiedDate":"2024-03-29"},{"lineNumber":441,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":442,"author":{"gitId":"delishad21"},"content":"Format: `deleteExam INDEX`","lastModifiedDate":"2024-03-29"},{"lineNumber":443,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":444,"author":{"gitId":"delishad21"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":445,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":446,"author":{"gitId":"delishad21"},"content":"**Information:**","lastModifiedDate":"2024-03-29"},{"lineNumber":447,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":448,"author":{"gitId":"delishad21"},"content":"* Deletes the exam at the specified `INDEX`.","lastModifiedDate":"2024-03-29"},{"lineNumber":449,"author":{"gitId":"delishad21"},"content":"* When an Exam is deleted, all corresponding records of scores associated with that Exam will also be deleted.","lastModifiedDate":"2024-03-29"},{"lineNumber":450,"author":{"gitId":"delishad21"},"content":"* If the currently selected exam is deleted, it will be deselected.","lastModifiedDate":"2024-03-29"},{"lineNumber":451,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":452,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":453,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":454,"author":{"gitId":"delishad21"},"content":"Example: `deleteExam 2`","lastModifiedDate":"2024-03-29"},{"lineNumber":455,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":456,"author":{"gitId":"delishad21"},"content":"* Removes the 2nd exam displayed in AA.","lastModifiedDate":"2024-03-29"},{"lineNumber":457,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":458,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully delete an exam, including some details of the exam you are deleting","lastModifiedDate":"2024-03-29"},{"lineNumber":459,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":460,"author":{"gitId":"delishad21"},"content":"\u003e![deleteExam success message](images/success_images/deleteExam_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":461,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":462,"author":{"gitId":"Zer0Legion"},"content":"### Clearing All Entries : `clear`","lastModifiedDate":"2024-03-26"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"Zer0Legion"},"content":"Deletes **all** entries from your contact list.","lastModifiedDate":"2024-03-27"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"Zer0Legion"},"content":"\u003eYou will see this message once you successfully delete all contacts from your list, indicating all entries have been cleared:","lastModifiedDate":"2024-03-27"},{"lineNumber":469,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":470,"author":{"gitId":"Zer0Legion"},"content":"\u003e![clear success message](images/success_images/clear_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":472,"author":{"gitId":"Zer0Legion"},"content":"### Exporting Data to a CSV File : `export`","lastModifiedDate":"2024-03-26"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":474,"author":{"gitId":"Zer0Legion"},"content":"Exports currently listed persons and their details to a CSV file of your specification.","lastModifiedDate":"2024-03-27"},{"lineNumber":475,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":476,"author":{"gitId":"danielleloh"},"content":"Format: `export`","lastModifiedDate":"2024-03-13"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":478,"author":{"gitId":"Zer0Legion"},"content":"\u003e By default, the file will be stored in `addressbookdata/avengersassemble.csv`.","lastModifiedDate":"2024-03-27"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":480,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":482,"author":{"gitId":"Zer0Legion"},"content":"**Tip:**\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":483,"author":{"gitId":"Zer0Legion"},"content":"You can specify the groups of contacts you want to export using the [`find`](#filtering-persons--find) or [`list`](#listing-all-persons--list) commands before you use this command.","lastModifiedDate":"2024-03-27"},{"lineNumber":484,"author":{"gitId":"danielleloh"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":486,"author":{"gitId":"Zer0Legion"},"content":"\u003e You will see this message once you successfully export the data:","lastModifiedDate":"2024-03-27"},{"lineNumber":487,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":488,"author":{"gitId":"Zer0Legion"},"content":"\u003e ![export success message](images/success_images/export_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":490,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":492,"author":{"gitId":"Zer0Legion"},"content":"**Caution:**\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":493,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":494,"author":{"gitId":"Zer0Legion"},"content":"When performing an export, the current information will overwrite any existing CSV files with the same name.","lastModifiedDate":"2024-03-27"},{"lineNumber":495,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":496,"author":{"gitId":"Zer0Legion"},"content":"If you want to preserve the exported data, you should rename it or save it in a separate location.","lastModifiedDate":"2024-03-27"},{"lineNumber":497,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":498,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-13"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":500,"author":{"gitId":"delishad21"},"content":"### Importing Persons from a CSV File : `import`","lastModifiedDate":"2024-03-29"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":502,"author":{"gitId":"Zer0Legion"},"content":"Imports all persons and their details from a CSV file of your specification.","lastModifiedDate":"2024-03-27"},{"lineNumber":503,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":504,"author":{"gitId":"Pughal77"},"content":"Format: `import i/FILEPATH`","lastModifiedDate":"2024-03-20"},{"lineNumber":505,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":506,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":507,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":508,"author":{"gitId":"Zer0Legion"},"content":"**Important:**\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":509,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":510,"author":{"gitId":"delishad21"},"content":"* The file path should be **absolute**.","lastModifiedDate":"2024-03-29"},{"lineNumber":511,"author":{"gitId":"delishad21"},"content":"* This command will only import persons\u0027 particulars. To import exam scores, take a look at [importexam](#importing-exam-scores-from-a-csv-file--importexam)","lastModifiedDate":"2024-03-29"},{"lineNumber":512,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":513,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":514,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":515,"author":{"gitId":"Zer0Legion"},"content":"**Example:**","lastModifiedDate":"2024-03-27"},{"lineNumber":516,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":517,"author":{"gitId":"Zer0Legion"},"content":"`import i/C:/Users/alk/Downloads/avengersassemble.csv` imports the data from the CSV file located at `C:/Users/alk/Downloads/avengersassemble.csv`.","lastModifiedDate":"2024-03-27"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"Zer0Legion"},"content":"\u003e You will see this message once you successfully import the data, with the app showing the details of the imported persons:","lastModifiedDate":"2024-03-27"},{"lineNumber":520,"author":{"gitId":"Zer0Legion"},"content":"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":521,"author":{"gitId":"Zer0Legion"},"content":"\u003e ![import success message](images/success_images/import_success.png)","lastModifiedDate":"2024-03-26"},{"lineNumber":522,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":523,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":524,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-02-27"},{"lineNumber":525,"author":{"gitId":"jayllo-c"},"content":"For more details on the input parameter, [click here](#command-format-summary).","lastModifiedDate":"2024-03-25"},{"lineNumber":526,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":527,"author":{"gitId":"delishad21"},"content":"### Importing Exam Scores from a CSV File : `importExam`","lastModifiedDate":"2024-03-29"},{"lineNumber":528,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":529,"author":{"gitId":"delishad21"},"content":"Imports all exam results from a CSV file","lastModifiedDate":"2024-03-29"},{"lineNumber":530,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":531,"author":{"gitId":"delishad21"},"content":"Format: `import i/FILEPATH`","lastModifiedDate":"2024-03-29"},{"lineNumber":532,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":533,"author":{"gitId":"delishad21"},"content":"**Important:**\u003cbr\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":534,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":535,"author":{"gitId":"delishad21"},"content":"* The file path should be **absolute**.","lastModifiedDate":"2024-03-29"},{"lineNumber":536,"author":{"gitId":"delishad21"},"content":"* This command will only import persons\u0027 exam scores. To import persons\u0027 particulars, take a look at [import](#importing-persons-from-a-csv-file--import)","lastModifiedDate":"2024-03-29"},{"lineNumber":537,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":538,"author":{"gitId":"delishad21"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":539,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":540,"author":{"gitId":"delishad21"},"content":"**Example:**","lastModifiedDate":"2024-03-29"},{"lineNumber":541,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":542,"author":{"gitId":"delishad21"},"content":"`import i/C:/Users/alk/Downloads/examresults.csv` imports exam results from the CSV file located at `C:/Users/alk/Downloads/examresults.csv`.","lastModifiedDate":"2024-03-29"},{"lineNumber":543,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":544,"author":{"gitId":"delishad21"},"content":"\u003eYou will see this message once you successfully import exam results.","lastModifiedDate":"2024-03-29"},{"lineNumber":545,"author":{"gitId":"delishad21"},"content":"\u003e","lastModifiedDate":"2024-03-29"},{"lineNumber":546,"author":{"gitId":"delishad21"},"content":"\u003e![importExam success message](images/success_images/importExam_success.png)","lastModifiedDate":"2024-03-29"},{"lineNumber":547,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":548,"author":{"gitId":"Zer0Legion"},"content":"### Exiting the Program : `exit`","lastModifiedDate":"2024-03-26"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"Zer0Legion"},"content":"Exits the program. The app will close automatically.","lastModifiedDate":"2024-03-27"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"Zer0Legion"},"content":"\u003eNote: The application ignores any extraneous parameters as we assume they are typos.","lastModifiedDate":"2024-03-24"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"danielleloh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-24"},{"lineNumber":556,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":557,"author":{"gitId":"danielleloh"},"content":"## Additional Information","lastModifiedDate":"2024-03-24"},{"lineNumber":558,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":559,"author":{"gitId":"Zer0Legion"},"content":"### Saving the Data","lastModifiedDate":"2024-03-26"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"danielleloh"},"content":"All data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-24"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"Zer0Legion"},"content":"### Editing the Data File","lastModifiedDate":"2024-03-26"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":565,"author":{"gitId":"Zer0Legion"},"content":"All data are saved automatically as a JSON file located at `[JAR file location]/data/avengersassemble.json` by default. You can update data directly by editing that data file if you are an advanced user.","lastModifiedDate":"2024-03-27"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":567,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":569,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":570,"author":{"gitId":"danielleloh"},"content":"If your changes to the data file makes its format invalid, Avengers Assemble will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr/\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":571,"author":{"gitId":"danielleloh"},"content":"Furthermore, certain edits can cause the Avengers Assemble application to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-24"},{"lineNumber":572,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":574,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"Zer0Legion"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":579,"author":{"gitId":"Zer0Legion"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AA home folder.","lastModifiedDate":"2024-03-04"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"Zer0Legion"},"content":"## Known Issues","lastModifiedDate":"2024-03-26"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":585,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":587,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":589,"author":{"gitId":"Zer0Legion"},"content":"## Command Summary","lastModifiedDate":"2024-03-26"},{"lineNumber":590,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":591,"author":{"gitId":"Zer0Legion"},"content":"Below is a summary of the commands available in Avengers Assemble. Some examples are included for your convenience.","lastModifiedDate":"2024-03-26"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"Zer0Legion"},"content":"| Action            | Format, Examples                                                                                                                                                                                                                         |","lastModifiedDate":"2024-03-24"},{"lineNumber":594,"author":{"gitId":"Zer0Legion"},"content":"|-------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-26"},{"lineNumber":595,"author":{"gitId":"Zer0Legion"},"content":"| **Add**           | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]… [m/MATRICULATION_NUMBER] [s/STUDIO] [r/REFLECTION]​` \u003cbr\u003e\u003cbr\u003e• e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague m/A1234567X` |","lastModifiedDate":"2024-03-26"},{"lineNumber":596,"author":{"gitId":"Pughal77"},"content":"| **Clear**         | `clear`                                                                                                                                                                                                                                  |","lastModifiedDate":"2024-02-27"},{"lineNumber":597,"author":{"gitId":"Zer0Legion"},"content":"| **Delete**        | `delete INDEX` \u003cbr\u003e\u003cbr\u003e• e.g. `delete 3`                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-26"},{"lineNumber":598,"author":{"gitId":"Zer0Legion"},"content":"| **Edit**          | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]… [m/MATRICULATION_NUMBER] [s/STUDIO] [r/REFLECTION]​` \u003cbr\u003e\u003cbr\u003e• e.g.`edit 2 n/James Lee e/jameslee@example.com m/A1234567X`                                          |","lastModifiedDate":"2024-03-26"},{"lineNumber":599,"author":{"gitId":"Zer0Legion"},"content":"| **Find**          | `find PREFIX/KEYWORD` \u003cbr\u003e\u003cbr\u003e• e.g. `find n/James`                                                                                                                                                                                      |","lastModifiedDate":"2024-03-26"},{"lineNumber":600,"author":{"gitId":"Pughal77"},"content":"| **Copy**          | `copy`                                                                                                                                                                                                                                   |","lastModifiedDate":"2024-02-27"},{"lineNumber":601,"author":{"gitId":"Pughal77"},"content":"| **List**          | `list`                                                                                                                                                                                                                                   |","lastModifiedDate":"2024-02-27"},{"lineNumber":602,"author":{"gitId":"Pughal77"},"content":"| **Help**          | `help`                                                                                                                                                                                                                                   |","lastModifiedDate":"2024-02-27"},{"lineNumber":603,"author":{"gitId":"danielleloh"},"content":"| **Export to CSV** | `export`                                                                                                                                                                                                                                 |","lastModifiedDate":"2024-03-23"},{"lineNumber":604,"author":{"gitId":"Zer0Legion"},"content":"| **Import**        | `import i/FILEPATH` \u003cbr\u003e\u003cbr\u003e• e.g. `import i/C:/Users/alk/Downloads/avengersassemble.csv`                                                                                                                                                |","lastModifiedDate":"2024-03-26"},{"lineNumber":605,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":606,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":607,"author":{"gitId":"Zer0Legion"},"content":"## Command Format Summary","lastModifiedDate":"2024-03-26"},{"lineNumber":608,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":609,"author":{"gitId":"Zer0Legion"},"content":"Some commands require you to include parameters. These parameters are identified by prefixes. Here are a list of valid prefixes and what they each refer to.","lastModifiedDate":"2024-03-26"},{"lineNumber":610,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":611,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":612,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":613,"author":{"gitId":"Zer0Legion"},"content":"**Important:** \u003c/br\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":614,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":615,"author":{"gitId":"Zer0Legion"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":616,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":617,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":618,"author":{"gitId":"Zer0Legion"},"content":"* Prefixes encased with \u0027[ ]\u0027 are optional.","lastModifiedDate":"2024-03-26"},{"lineNumber":619,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":620,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":621,"author":{"gitId":"Zer0Legion"},"content":"* Prefixes with \u0027…\u0027 after them can be used multiple times.","lastModifiedDate":"2024-03-26"},{"lineNumber":622,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend` (i.e 1 time), `t/friend t/family` etc.","lastModifiedDate":"2024-03-27"},{"lineNumber":623,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":624,"author":{"gitId":"Zer0Legion"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":625,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2024-03-27"},{"lineNumber":626,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":627,"author":{"gitId":"Zer0Legion"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help` , `list`, `exit`, `copy`, `export` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":628,"author":{"gitId":"Zer0Legion"},"content":"    \u003e e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2024-03-27"},{"lineNumber":629,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":630,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":631,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":632,"author":{"gitId":"Zer0Legion"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":633,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":634,"author":{"gitId":"Zer0Legion"},"content":"**Caution:** \u003c/br\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":635,"author":{"gitId":"Zer0Legion"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2024-03-27"},{"lineNumber":636,"author":{"gitId":"delishad21"},"content":"* Note the same prefix may be used for different purposes such as in the case of `/s` for studios and for scores. In these cases, we ensure no command would have to use the same prefix for multiple purposes.","lastModifiedDate":"2024-03-29"},{"lineNumber":637,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":638,"author":{"gitId":"Zer0Legion"},"content":"\u003c/box\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":639,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":640,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":641,"author":{"gitId":"Zer0Legion"},"content":"| Prefix | What it refers to          | Constraints|","lastModifiedDate":"2024-03-26"},{"lineNumber":642,"author":{"gitId":"Zer0Legion"},"content":"|--------|----------------------------||","lastModifiedDate":"2024-03-26"},{"lineNumber":643,"author":{"gitId":"Zer0Legion"},"content":"| n/     | Name                       | Should only contain alphanumeric characters and spaces.                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |","lastModifiedDate":"2024-03-26"},{"lineNumber":644,"author":{"gitId":"Zer0Legion"},"content":"| p/     | Phone Number               | Should only contain numbers, and it should be at least 3 digits long.                                                                                                                                                                                                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2024-03-26"},{"lineNumber":645,"author":{"gitId":"Zer0Legion"},"content":"| e/     | Email                      | **Format:** local-part@domain\u003cbr/\u003e **Constraints for local part:**\u003cbr/\u003e • Should only contain alphanumeric characters, and the characters `+`, `_`, `.` and `-`\u003cbr/\u003e • Should not start with special characters\u003cbr/\u003e **Constraints for domain:**\u003cbr/\u003e • Made up of domain labels followed by periods\u003cbr/\u003e • Must end with a domain label of at least 2 characters long\u003cbr/\u003e • Should start and end with alphanumeric characters\u003cbr/\u003e • Domain label should consists of alphanumeric characters separated only by hyphens, if any |","lastModifiedDate":"2024-03-26"},{"lineNumber":646,"author":{"gitId":"Zer0Legion"},"content":"| a/     | Address                    | Can take any values.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2024-03-26"},{"lineNumber":647,"author":{"gitId":"Zer0Legion"},"content":"| i/     | Path of CSV file to import | Should be the absolute file path of the CSV file.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2024-03-26"},{"lineNumber":648,"author":{"gitId":"Zer0Legion"},"content":"| [m/]   | Matriculation ID           | The first letter must be an uppercase \u0027A\u0027, followed by 7 numbers, and end with an uppercase letter.                                                                                                                                                                                                                                                                                                                                                                                                                              |","lastModifiedDate":"2024-03-26"},{"lineNumber":649,"author":{"gitId":"Zer0Legion"},"content":"| [r/]   | Recitation Group           | The first letter must be an uppercase \u0027R\u0027, followed by any number.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2024-03-26"},{"lineNumber":650,"author":{"gitId":"Zer0Legion"},"content":"| [s/]   | Studio Group               | The first letter must be an uppercase \u0027S\u0027, followed by any number.                                                                                                                                                                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2024-03-26"},{"lineNumber":651,"author":{"gitId":"delishad21"},"content":"| [s/]   | Score                      | For Exam Max Scores: the input must be a positive integer \u003cbr/\u003e For Persons\u0027 Exam Scores: the input must be an integer greater than or equal to zero                                                                                                                                                                                                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2024-03-29"},{"lineNumber":652,"author":{"gitId":"Zer0Legion"},"content":"| [t/]…  | Tags                       | Should be alphanumeric, and should not contain spaces.                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"danielleloh":20,"delishad21":215,"Pughal77":15,"Zer0Legion":238,"jayllo-c":13,"-":151}},{"path":"docs/diagrams/AddCommandParsing.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"!include style.puml","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"participant \"multi:ArgumentMultimap\" as ArgumentMultimap LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"end box","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"mainFrame sd parse fields","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ParserUtil : parseName(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"ParserUtil --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ParserUtil : parsePhone(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"ParserUtil --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ParserUtil : parseEmail(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"ParserUtil --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ParserUtil : parseAddress(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"ParserUtil --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ParserUtil : parseTags(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"ParserUtil --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"\u0027 Callback","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e AddCommandParser : handleOptionalMatric(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e AddCommandParser : handleOptionalReflection(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e AddCommandParser : handleOptionalStudio(...)","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Zer0Legion":47}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"participant \"multi:ArgumentMultimap\" as ArgumentMultimap LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"[-\u003e LogicManager : execute(...)","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(...)","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"AddressBookParser -\u003e AddCommandParser : parse(...)","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"\u0027Tokenizer and ParserUtil dont have constructors, how?","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ArgumentTokenizer : tokenize(...)","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"create ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"ArgumentTokenizer -\u003e ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"activate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"ArgumentMultimap --\u003e ArgumentTokenizer","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"deactivate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"ArgumentTokenizer --\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e AddCommandParser : arePrefixesPresent(...)","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ArgumentMultimap : getPreamble()","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"activate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"ArgumentMultimap --\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"deactivate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e ArgumentMultimap : verifyNoDuplicatePrefixesFor(...)","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"activate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"ArgumentMultimap --\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"deactivate ArgumentMultimap","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"ref over AddCommandParser, ParserUtil : parse fields","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"create Person","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e Person","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"activate Person","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"Person --\u003e AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"deactivate Person","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"create AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"AddCommand --\u003e AddCommandParser","lastModifiedDate":"2024-03-20"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"LogicManager -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"activate AddCommand","lastModifiedDate":"2024-03-20"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"AddCommand -\u003e Model : addPerson(p)","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Zer0Legion"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Zer0Legion"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Zer0Legion"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Zer0Legion"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"AddCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"AddCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"destroy AddCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Zer0Legion"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Zer0Legion":119}},{"path":"docs/diagrams/AutomaticTaggingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"start","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":":User adds a new person;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"if () then ([has Matric])","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"  if () is ([has both Studio and Reflection]) then","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"    :Add new \"student\" tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"  else ([else])","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"    if () is ([has either Studio \\n or Reflection \\n but not both]) then","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"      :Add new \"TA\" tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"    else ([else])","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"    endif","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"  endif","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"else ([else])","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"  if () is ([No Studio and Reflection]) then","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"    :Add new \"instructor\" tag;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"  else ([else])","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"  endif","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"endif","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"stop","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Zer0Legion":21}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"Person *--\u003e \"0..1\" Matric","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"Person *--\u003e \"0..1\" Studio","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"Person *--\u003e \"0..1\" Reflection","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"Email -[hidden]down-\u003e Matric","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"Matric -[hidden]right-\u003e Studio","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"Studio -[hidden]right-\u003e Reflection","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jayllo-c":12,"-":21}},{"path":"docs/diagrams/CopyImplementationActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"@startuml","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"start","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":":User executes copy command;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"if () then ([persons are displayed])","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"    :Get emails of the displayed persons;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"    if ()","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"    :Copy emails to clipboard;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"    else ([no clipboard available])","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"    endif","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"else ([no persons displayed])","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    :throw new CommandException(\"No person currently displayed\");","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"endif","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"stop","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"@enduml","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jayllo-c":16}},{"path":"docs/diagrams/ExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"@startuml","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"!include style.puml","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"participant \"e:ExportCommand\" as ExportCommand LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"participant \"a:AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"end box","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"box Storage STORAGE_COLOR_T1","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"participant \"j:JsonAddressBookStorage\" as JsonAddressBookStorage STORAGE_COLOR","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"end box","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"[-\u003e LogicManager : execute(\"export\")","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"activate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"export\")","lastModifiedDate":"2024-03-19"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"create ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"AddressBookParser -\u003e ExportCommand : new ExportCommand()","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e AddressBookParser : e","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"AddressBookParser --\u003e LogicManager : e","lastModifiedDate":"2024-03-19"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"LogicManager -\u003e ExportCommand : execute(m)","lastModifiedDate":"2024-03-19"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"activate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"Model --\u003e ExportCommand : l","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"deactivate Model","lastModifiedDate":"2024-03-19"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"create AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e AddressBook : new AddressBook()","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"activate AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"AddressBook --\u003e ExportCommand : a","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"deactivate AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : addToAddressBook(a, l);","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"loop for each person in l","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"    ExportCommand -\u003e AddressBook : addPerson(person)","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"    activate AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"    AddressBook --\u003e ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"    deactivate AddressBook","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"end","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"create JsonAddressBookStorage","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e JsonAddressBookStorage : new JsonAddressBookStorage();","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"activate JsonAddressBookStorage","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"JsonAddressBookStorage --\u003e ExportCommand : j","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"deactivate JsonAddressBookStorage","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : writeToJsonFile(j, a);","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e JsonAddressBookStorage : saveAddressBook(a)","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"activate JsonAddressBookStorage","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"JsonAddressBookStorage --\u003e ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"deactivate JsonAddressBookStorage","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : readJsonFile(jsonFile)","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand : jsonTree","lastModifiedDate":"2024-03-19"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : readPersonsArray(jsonTree)","lastModifiedDate":"2024-03-19"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand : readPersonsArray","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : createCsvDirectory(csvFile)","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e ExportCommand : writeToCsvFile(csvFile, personsArray)","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"activate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"create CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"ExportCommand -\u003e CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"activate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"CommandResult --\u003e ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"ExportCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"deactivate ExportCommand","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"@enduml","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"danielleloh":124}},{"path":"docs/diagrams/FindImplementationActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"start","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":":User executes find command;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"if () then ([command is in invalid format])","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"    :Show invalid command format as error message;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"else ([else])","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    : Displays the students that match the search criteria;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"endif","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"stop","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"delishad21":15}},{"path":"docs/diagrams/FindImplementationSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"@startuml","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"!include style.puml","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"participant \"p:PersonDetailContainsKeywordPredicate\" as Predicate LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"participant \"f:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"end box","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"end box","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"[-\u003e LogicManager : execute(\"find n/Alice\")","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"activate LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/Alice\")","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"create FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"create Predicate","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"FindCommandParser -\u003e Predicate","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"activate Predicate","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"Predicate --\u003e FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"deactivate Predicate","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"n/Alice\")","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"activate FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"create FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(p)","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"activate FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"FindCommand --\u003e FindCommandParser :","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"FindCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"deactivate FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"destroy FindCommandParser","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"LogicManager -\u003e FindCommand : execute(m)","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"activate FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(p)","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"activate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"deactivate Model","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"create CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"activate CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"FindCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"deactivate FindCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"@enduml","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"delishad21":78}},{"path":"docs/diagrams/ImportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"participant \":ImportCommandParser\" as ImportCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"participant \":ArgumentTokenizer\" as ArgumentTokenizer LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"participant \"multi:ArgumentMultimap\" as ArgumentMultimap LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"participant \"a:AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"[-\u003e LogicManager : execute(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"activate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"activate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"create ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"AddressBookParser -\u003e ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"activate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser --\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"AddressBookParser -\u003e ImportCommandParser : parse(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"activate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"\u0027Tokenizer and ParserUtil dont have constructors, how?","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -\u003e ArgumentTokenizer : tokenize(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"activate ArgumentTokenizer","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pughal77"},"content":"create ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"ArgumentTokenizer -\u003e ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"activate ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pughal77"},"content":"ArgumentMultimap --\u003e ArgumentTokenizer","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Pughal77"},"content":"deactivate ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pughal77"},"content":"ArgumentTokenizer --\u003e ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pughal77"},"content":"deactivate ArgumentTokenizer","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -\u003e ImportCommandParser : isPrefixPresent(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"Pughal77"},"content":"activate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser --\u003e ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -\u003e ArgumentMultimap : getPreamble()","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"Pughal77"},"content":"activate ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"Pughal77"},"content":"ArgumentMultimap --\u003e ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"Pughal77"},"content":"deactivate ArgumentMultimap","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -\u003e ParserUtil : parseFilePath(...)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"Pughal77"},"content":"activate ParserUtil","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"Pughal77"},"content":"ParserUtil --\u003e ImportCommandParser : filePath","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Pughal77"},"content":"deactivate ParserUtil","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"Pughal77"},"content":"create ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -\u003e ImportCommand : ImportCommand(filePath)","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"Pughal77"},"content":"activate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"Pughal77"},"content":"create AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"Pughal77"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"Pughal77"},"content":"AddCommandParser -\u003e ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"Pughal77"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"Pughal77"},"content":"ImportCommand --\u003e ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser --\u003e AddressBookParser : i","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"Pughal77"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"Pughal77"},"content":"ImportCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"Pughal77"},"content":"destroy ImportCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Pughal77"},"content":"AddressBookParser --\u003e LogicManager : i","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Pughal77"},"content":"deactivate AddressBookParser","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"Pughal77"},"content":"LogicManager -\u003e ImportCommand : execute(m)","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Pughal77"},"content":"activate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e ImportCommand : readCsvfile()","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"Pughal77"},"content":"activate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Pughal77"},"content":"ImportCommand --\u003e ImportCommand : personsData","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"Pughal77"},"content":"loop personData in personsData","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e ImportCommand : convertToAddCommandInput(personData)","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"Pughal77"},"content":"activate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"Pughal77"},"content":"ImportCommand --\u003e ImportCommand : addCommandInput","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e AddCommandParser : parseAddCommandInput(addCommandInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"Pughal77"},"content":"activate AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"Pughal77"},"content":"create AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"Pughal77"},"content":"AddCommandParser --\u003e AddCommand : parse(addCommandInput)","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"Pughal77"},"content":"deactivate AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"Pughal77"},"content":"activate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"Pughal77"},"content":"AddCommand --\u003e ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"Pughal77"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"Pughal77"},"content":"activate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"Pughal77"},"content":"ref over AddCommand, Person, Model : addCommand.execute(m)","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"Pughal77"},"content":"AddCommand --\u003e ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"Pughal77"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"Pughal77"},"content":"end","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"Pughal77"},"content":"destroy AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"Pughal77"},"content":"destroy AddCommandParser","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"Pughal77"},"content":"create CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"Pughal77"},"content":"activate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"Pughal77"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"Pughal77"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Pughal77"},"content":"ImportCommand --\u003e LogicManager : r","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"Pughal77"},"content":"deactivate ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Pughal77"},"content":"ImportCommand -[hidden]-\u003e LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"Pughal77"},"content":"destroy ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"Pughal77"},"content":"[\u003c--LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"Pughal77"},"content":"deactivate LogicManager","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"Pughal77"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Pughal77":144}},{"path":"docs/diagrams/ImportSequenceDiagramRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"@startuml","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"!include style.puml","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"participant \"i:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"participant \"p:Person\" as Person MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"end box","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"group sd addCommand.execute(m) in importCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"ImportCommand -\u003e AddCommand : execute(m)","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"activate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"AddCommand -\u003e Model : addPerson(p)","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"activate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"deactivate Model","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"create CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"activate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"deactivate CommandResult","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"AddCommand --\u003e ImportCommand : r","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"deactivate AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"AddCommand -[hidden]-\u003e ImportCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"destroy AddCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"end","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"@enduml","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Pughal77":39}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"Class Matric","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"Class Studio","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"Class Reflection","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"Person *-l-\u003e Name","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"Person *--\u003e \"0..1\" Matric","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"Person *--\u003e \"0..1\" Studio","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"Person *--\u003e \"0..1\" Reflection","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"Person *-r-\u003e \"*\" Tag","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"Name -[hidden]down-\u003e Phone","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"Email -[hidden]right-\u003e Matric","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"Matric -[hidden]right-\u003e Studio","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"Studio -[hidden]right-\u003e Reflection","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"Reflection -[hidden]up-\u003e Tag","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"delishad21":14,"-":51}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"!define STORAGE_COLOR #674EA7","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"!define STORAGE_COLOR_T1 #8E7CC3","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam Package {","lastModifiedDate":"2023-07-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    BackgroundColor #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2023-07-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    FontSize 16","lastModifiedDate":"2023-07-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-07-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    FontSize 15","lastModifiedDate":"2023-07-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle bold","lastModifiedDate":"2023-07-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"danielleloh":2,"-":77}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"# Avengers Assemble","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"**Avengers Assemble is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* If you are interested in using AddressBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* If you are interested about developing AddressBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zer0Legion":2,"-":19}},{"path":"docs/release_1.2/release_notes_1.2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"# Avengers Assemble v1.2 Release Notes","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"With our additions, we are confident that Avengers Assemble has a MVP. Although some features require refinement, we have implemented enough features with sufficient quality to ensure a working product for head TAs for CS1101S.","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"## What\u0027s New","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"### 1. Export Feature","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"Avengers Assemble now supports exporting data of up to 500 contacts to a CSV file!","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"1. Simply type `export` to export a CSV file of the contacts. ","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"export_1.png\" alt\u003d\"Typing in the `export` command.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"2. Once this message shows, the CSV is available for external use by the head TA.","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"export_2.png\" alt\u003d\"The CSV will be exported.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"3. An example of the exported CSV file.","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"export_csv_result.png\" alt\u003d\"The CSV file.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"### 2. Import Feature","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"Avengers Assemble now supports importing data of up to 500 contacts stored in a csv file","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"1. Simply type `import i/\u003cfilePath\u003e` where filePath is the absolute path of your csv file.","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"2. Once this message shows, imported contacts will be reflected in addressBook","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"import_1.png\" alt\u003d\"Import Success\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"\u003e Note: There might be some issues importing outside of IDEs for Mac users due to privacy setting issues. We recommend users testing on Mac to use the IDE to run the .jar file and import the csv file.","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"### 3. Find Feature","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"Avengers Assemble now supports finding contacts by their various details, and not just their names!","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"1. Simply type `find` to find a contact by their details, followed by the field you want to search up. For example, the screenshot below shows finding contacts with an address containing `30`.","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"find_1.png\" alt\u003d\"Typing in the `find` command.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"2. The result will show all contacts with an address containing `30`.","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"find_2.png\" alt\u003d\"The result of the `find` command.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"### 4. Copy Feature","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"Avengers Assemble also supports copying the emails of any specific group of contacts in the list into your clipboard!","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"1. Use the `find` command to search for the people whose emails you would like to copy.","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"2. Type `copy` to copy all the emails of currently displayed contacts into your clipboard.","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"copy_1.png\" alt\u003d\"Type in the copy command.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"3. All emails will be copied into your clipboard!","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"copy.png\" alt\u003d\"The result of the `copy` command.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"### 5. New Fields Added","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"To further support head TAs keeping track of the various reflections and studios happening in the ever hectic CS1101S, Avengers Assemble now supports adding the reflection `r/` and studio `s/` fields to contacts!","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"\u003cimg src\u003d\"screenshot_1.2.png\" alt\u003d\"The new fields added.\"\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"### 6. Bug Fixes","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"Previously, the existing codebase checked for duplicate contacts by their name. However, this was not sufficient as there could be multiple contacts with the same name which is especially likely for a large course like CS1101S. This has been fixed by checking for the duplicates by their email.","lastModifiedDate":"2024-03-20"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Zer0Legion":50}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"# Tutorial: Adding a command","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/RemarkClass.puml\" alt\u003d\"The relationship between RemarkCommand and Command\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"../diagrams/add-remark/ParserClass.puml\" alt\u003d\"The relationship between Parser and RemarkCommandParser\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2023-09-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2023-09-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"Zer0Legion"},"content":"You must delete AddressBook’s storage file located at `/data/avengersassemble.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2024-03-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":350,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":379,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":402,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"Zer0Legion":1,"-":401}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.info(\"Using data file : \" + storage.getAddressBookFilePath());","lastModifiedDate":"2023-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Creating a new data file \" + storage.getAddressBookFilePath()","lastModifiedDate":"2023-05-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                        + \" populated with a sample AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file at \" + storage.getAddressBookFilePath() + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                    + \" Will be starting with an empty AddressBook.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (!configOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new config file \" + configFilePathUsed);","lastModifiedDate":"2023-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \" Using default config properties.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using preference file : \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            if (!prefsOptional.isPresent()) {","lastModifiedDate":"2023-01-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                logger.info(\"Creating new preference file \" + prefsFilePath);","lastModifiedDate":"2023-05-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2023-06-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"Preference file at \" + prefsFilePath + \" could not be loaded.\"","lastModifiedDate":"2023-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \" Using default preferences.\");","lastModifiedDate":"2023-05-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zer0Legion":1,"-":185}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    private static final double DEFAULT_HEIGHT \u003d 1000;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    private static final double DEFAULT_WIDTH \u003d 1500;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings otherGuiSettings \u003d (GuiSettings) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d otherGuiSettings.windowWidth","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d otherGuiSettings.windowHeight","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, otherGuiSettings.windowCoordinates);","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .add(\"windowWidth\", windowWidth)","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .add(\"windowHeight\", windowHeight)","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .add(\"windowCoordinates\", windowCoordinates)","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":2,"-":80}},{"path":"src/main/java/seedu/address/commons/util/CsvUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import java.io.FileReader;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"import com.opencsv.CSVReader;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"import com.opencsv.CSVReaderBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"import com.opencsv.exceptions.CsvException;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":" * Utility class for reading csv files. Used in import Command","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"public class CsvUtil {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"     * Reads the csv file and returns a list of maps,","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"     * where each map represents a row of person\u0027s data in the csv file.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"     * @throws DataLoadingException","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"    public static List\u003cMap\u003cString, String\u003e\u003e readCsvFile(Path filePath) throws DataLoadingException {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"            CSVReader reader \u003d new CSVReaderBuilder(new FileReader(filePath.toString())).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"            List\u003cString[]\u003e rows \u003d reader.readAll();","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"            return parseData(rows);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"        } catch (IOException | CsvException e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"            throw new DataLoadingException(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"     * Parses the data from the csv file into a list of maps. Each map represents a person\u0027s data.","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"     * @param rows","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"     * @return","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"    public static List\u003cMap\u003cString, String\u003e\u003e parseData(List\u003cString[]\u003e rows) {","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"        List\u003cMap\u003cString, String\u003e\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"        String[] header \u003d rows.get(0);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"        for (int i \u003d 1; i \u003c rows.size(); i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"            String[] row \u003d rows.get(i);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"Pughal77"},"content":"            Map\u003cString, String\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"            for (int j \u003d 0; j \u003c header.length; j++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"                map.put(header[j], row[j]);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"Pughal77"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"Pughal77"},"content":"            data.add(map);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"Pughal77"},"content":"        return data;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"Pughal77":54}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     *   Ignores case, and a full match is not required.","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"     *       containsSubstringIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     * @param subString cannot be null, cannot be empty","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public static boolean containsSubstringIgnoreCase(String sentence, String subString) {","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        requireNonNull(subString);","lastModifiedDate":"2024-03-03"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        String preppedString \u003d subString.trim();","lastModifiedDate":"2024-03-03"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        checkArgument(!preppedString.isEmpty(), \"Substring parameter cannot be empty\");","lastModifiedDate":"2024-03-03"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        return sentence.toLowerCase().contains(preppedString.toLowerCase());","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"     * Returns true if the {@code sentence} is equal to the {@code word}.","lastModifiedDate":"2024-03-30"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"     *  Ignores case.","lastModifiedDate":"2024-03-30"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"     *  \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"     *      equalsIgnoreCase(\"ABc def\", \"abc def\") \u003d\u003d true","lastModifiedDate":"2024-03-30"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"     *      equalsIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d false","lastModifiedDate":"2024-03-30"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"     *      equalsIgnoreCase(\"ABc def\", \"ABc de\") \u003d\u003d false","lastModifiedDate":"2024-03-30"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"     *      \u003c/pre\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"     * @param word cannot be null","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"     * @return true if the {@code sentence} is equal to the {@code word}","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"    public static boolean equalsIgnoreCase(String sentence, String word) {","lastModifiedDate":"2024-03-30"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2024-03-30"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"        requireNonNull(word);","lastModifiedDate":"2024-03-30"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"        String preppedString \u003d word.trim();","lastModifiedDate":"2024-03-30"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"        checkArgument(!preppedString.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2024-03-30"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"        return sentence.toLowerCase().equals(preppedString.toLowerCase());","lastModifiedDate":"2024-03-30"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":21,"jayllo-c":22,"-":68}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ScoreStatistics;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    /** Returns an unmodifiable view of the list of exams */","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    ObservableList\u003cExam\u003e getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"     * Returns the selected exam in the exam list.","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    ObservableValue\u003cExam\u003e getSelectedExam();","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"     * Returns the exam score statistics for the given exam.","lastModifiedDate":"2024-03-30"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    ScoreStatistics getExamScoreStatistics(Exam exam);","lastModifiedDate":"2024-03-30"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"delishad21":16,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ScoreStatistics;","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cExam\u003e getExamList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        return model.getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"    public ObservableValue\u003cExam\u003e getSelectedExam() {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        return model.getSelectedExam();","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    public ScoreStatistics getExamScoreStatistics(Exam exam) {","lastModifiedDate":"2024-03-30"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        return model.getExamScoreStatistics(exam);","lastModifiedDate":"2024-03-30"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"delishad21":18,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"    public static final String MESSAGE_EMPTY_PERSON_LIST \u003d \"No person currently displayed\";","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_INVALID_EXAM_DISPLAYED_INDEX \u003d \"The exam index provided is invalid\";","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_NO_EXAM_SELECTED \u003d \"No exam selected. Please select an exam first.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"                .append(\"; Matriculation Number: \")","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"                .append(person.getMatric())","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"                .append(\"; Reflection: \")","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"                .append(person.getReflection())","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"                .append(\"; Studio: \")","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"                .append(person.getStudio())","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        builder.append(\"; Scores: \");","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        person.getScores().forEach((exam, score) -\u003e builder.append(exam).append(\": \").append(score).append(\", \"));","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"     * Formats the {@code exam} for display to the user.","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"     * @param exam","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"     * @return","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    public static String format(Exam exam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        builder.append(\"Exam Name: \")","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"                .append(exam.getName())","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"                .append(\"; Maximum Score: \")","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"                .append(exam.getMaxScore());","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"delishad21":21,"Zer0Legion":2,"jayllo-c":3,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"            + \"[\" + PREFIX_MATRIC_NUMBER + \"MATRICULATION NUMBER] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"            + \"[\" + PREFIX_REFLECTION + \"REFLECTION] \"","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            + \"[\" + PREFIX_STUDIO + \"STUDIO] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"            + PREFIX_MATRIC_NUMBER + \"A1234567X \"","lastModifiedDate":"2024-02-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_DUPLICATE_EMAIL \u003d \"This email already exists in the address book\";","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"danielleloh":2,"delishad21":2,"Zer0Legion":3,"jayllo-c":2,"-":82}},{"path":"src/main/java/seedu/address/logic/commands/AddExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":" * Adds an exam to the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"public class AddExamCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public static final String COMMAND_WORD \u003d \"addExam\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an exam to the address book. \"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"            + \"Parameters: EXAM_NAME n/EXAM_DETAILS s/MAXIMUM_SCORE\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            + PREFIX_NAME + \"Midterm \" + PREFIX_SCORE + \"100\";","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New exam added: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_DUPLICATE_EXAM \u003d \"This exam already exists in the address book\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    private final Exam toAdd;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * Creates an AddExamCommand to add the specified {@code Exam}","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public AddExamCommand(Exam exam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        requireNonNull(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        toAdd \u003d exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        if (model.hasExam(toAdd)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EXAM);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        model.addExam(toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof AddExamCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        AddExamCommand otherAddExamCommand \u003d (AddExamCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        return toAdd.equals(otherAddExamCommand.toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":70,"Zer0Legion":1}},{"path":"src/main/java/seedu/address/logic/commands/AddScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.CollectionUtil.isAnyNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":" * Adds a score to a person in the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"public class AddScoreCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    public static final String COMMAND_WORD \u003d \"addScore\";","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"            + \": Adds a score to the person identified by the index number used in the last person listing. \"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            + \"s/SCORE\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"            + \"s/85\";","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_ADD_SCORE_SUCCESS \u003d \"Added score %s for %s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_SCORE_EXISTS \u003d \"This person already has a score for this exam.\"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            + \" Use editScore instead.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_SCORE_GREATER_THAN_MAX \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"            \"Score for %s cannot be greater than the maximum score.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    private final Score score;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * Creates an AddScoreCommand to add the specified {@code Score} to the person at the specified {@code Index}.","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    public AddScoreCommand(Index targetIndex, Score score) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        requireAllNonNull(targetIndex, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        this.score \u003d score;","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e updatedScores \u003d new HashMap\u003c\u003e(personToEdit.getScores());","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        Exam selectedExam \u003d model.getSelectedExam().getValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        if (!isAnyNonNull(selectedExam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        if (selectedExam.getMaxScore().getScore() \u003c score.getScore()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"            throw new CommandException(String.format(MESSAGE_SCORE_GREATER_THAN_MAX, selectedExam.getName()));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        if (updatedScores.containsKey(selectedExam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(MESSAGE_SCORE_EXISTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        model.addExamScoreToPerson(personToEdit, selectedExam, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        return new CommandResult(String.format(\"Added score %s for %s\", score, personToEdit.getName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"                || (other instanceof AddScoreCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 targetIndex.equals(((AddScoreCommand) other).targetIndex)","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 score.equals(((AddScoreCommand) other).score));","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":86,"Zer0Legion":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        model.deselectExam();","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"delishad21":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"     * @return feedback message of the operation result for display.","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jayllo-c":1,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CopyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-11"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import java.awt.GraphicsEnvironment;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2024-03-11"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import java.util.List;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-11"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-11"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":" * Copies the emails of all persons in the address book to the clipboard.","lastModifiedDate":"2024-03-11"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"public class CopyCommand extends Command {","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"    public static final String COMMAND_WORD \u003d \"copy\";","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Copied emails of all listed persons to clipboard\";","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-11"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"        if (lastShownList.isEmpty()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"            throw new CommandException(\"No person currently displayed\");","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"        StringSelection emails \u003d getEmails(lastShownList);","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"        // only copies to clipboard if the environment is not headless","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"        if (!GraphicsEnvironment.isHeadless()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"            copyToClipboard(emails);","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"     * Returns a StringSelection containing the emails of all persons in {@code lastShownList}.","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"     * @param lastShownList list of persons to get emails from.","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"     * @return StringSelection containing the emails of all persons in {@code lastShownList}.","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"    public StringSelection getEmails(List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"        StringBuilder emails \u003d new StringBuilder();","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"        for (Person person : lastShownList) {","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"            emails.append(person.getEmail().value).append(\"; \");","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"        return new StringSelection(emails.toString().trim());","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"     * Copies the emails of all persons in {@code lastShownList} to the clipboard.","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"    private void copyToClipboard(StringSelection stringSelection) {","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(stringSelection, stringSelection);","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"jayllo-c":60}},{"path":"src/main/java/seedu/address/logic/commands/DeleteExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * Deletes an exam identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class DeleteExamCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public static final String COMMAND_WORD \u003d \"deleteExam\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            + \": Deletes the exam identified by the index number used in the displayed exam list.\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_DELETE_EXAM_SUCCESS \u003d \"Deleted Exam: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public DeleteExamCommand(Index targetIndex) {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e examList \u003d model.getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d examList.size()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        Exam examToDelete \u003d examList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        model.deleteExam(examToDelete);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EXAM_SUCCESS, Messages.format(examToDelete)));","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof DeleteExamCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand otherDeleteExamCommand \u003d (DeleteExamCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        return targetIndex.equals(otherDeleteExamCommand.targetIndex);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.commons.util.CollectionUtil.isAnyNonNull;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":" * Deletes a score of currently selected test for a person in the address book.","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"public class DeleteScoreCommand extends Command {","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public static final String COMMAND_WORD \u003d \"deleteScore\";","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"            + \": Deletes the score of the person identified by the index number used in the displayed person list. \\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted score for %s(%s) for %s.\";","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_NO_EXAM_SCORE_TO_DELETE \u003d \"%s(%s) does not have a score to delete. \";","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"    private final Index index;","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"     * Creates a DeleteScoreCommand object to delete the specified score to the person at the specified {@code Index}.","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    public DeleteScoreCommand(Index index) {","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        List\u003cPerson\u003e filteredPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        if (index.getZeroBased() \u003e\u003d filteredPersons.size()) {","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        Exam selectedExam \u003d model.getSelectedExam().getValue();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        if (!isAnyNonNull(selectedExam)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        Person personWithScoreToDelete \u003d filteredPersons.get(index.getZeroBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e scores \u003d new HashMap\u003c\u003e(personWithScoreToDelete.getScores());","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        if (!scores.containsKey(selectedExam)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(String.format(MESSAGE_NO_EXAM_SCORE_TO_DELETE,","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"                    personWithScoreToDelete.getName(),","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"                    personWithScoreToDelete.getEmail()));","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        model.removeExamScoreFromPerson(personWithScoreToDelete, selectedExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"                personWithScoreToDelete.getName(),","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"                personWithScoreToDelete.getEmail(),","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"                selectedExam.getName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"            return true;","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        if (!(other instanceof DeleteScoreCommand)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"            return false;","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        DeleteScoreCommand otherDeleteScoreCommand \u003d (DeleteScoreCommand) other;","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"        return index.equals(otherDeleteScoreCommand.index);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"danielleloh":86}},{"path":"src/main/java/seedu/address/logic/commands/DeleteShownCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":" * Deletes all persons in the shown list.","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"public class DeleteShownCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"    public static final String COMMAND_WORD \u003d \"deleteshown\";","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted %d shown person(s). Listing %d remaining person(s).\";","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_NO_PERSONS \u003d \"No persons to delete.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_NO_FILTER \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"            \"For safety, all persons cannot be deleted. Use the \u0027clear\u0027 command instead.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"     * Deletes all persons in the last shown list.","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"     * @return a command result in which the success message is displayed","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"     * @throws CommandException if the list is empty","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"        checkForEmptyList(lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"        ensureNotAllAreDeleted(model, lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"        int deletedCount \u003d getFilteredSize(lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"        int leftOver \u003d getLeftOverSize(model, lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"        deletePersons(model, lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"        showRemainingPersons(model);","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"                deletedCount, leftOver));","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"     * Checks if the list is empty.","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"     * @param list the list","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"     * @throws CommandException if the list is empty","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"    private static void checkForEmptyList(ObservableList\u003cPerson\u003e list) throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"        if (list.isEmpty()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"            throw new CommandException(MESSAGE_NO_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"     * Shows the remaining persons in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"     * @param model the model","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"    private static void showRemainingPersons(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"     * Deletes all persons in the last shown list.","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"     * @param model the model","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"     * @param lastShownList the last shown list","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"    private static void deletePersons(Model model, ObservableList\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"        for (int i \u003d lastShownList.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"            model.deletePerson(lastShownList.get(i));","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the number of persons in the filtered list.","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"     * @param lastShownList the last shown list","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"     * @return the number of persons in the filtered list","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"    private static int getFilteredSize(ObservableList\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"        return lastShownList.size();","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the total number of persons in the address book.","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"     * @param model the model","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"     * @return the total number of persons in the address book","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"    private static int getTotalSize(Model model) {","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"        AddressBook addressBook \u003d new AddressBook(model.getAddressBook());","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"        return addressBook.getPersonList().size();","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the number of persons that will be left over after deletion.","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"     * @param model the model","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"Zer0Legion"},"content":"     * @param lastShownList the last shown list","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Zer0Legion"},"content":"     * @return the number of persons that will be left over after deletion","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Zer0Legion"},"content":"    private static int getLeftOverSize(Model model, ObservableList\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Zer0Legion"},"content":"        return getTotalSize(model) - getFilteredSize(lastShownList);","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"     * Ensures that not all persons are deleted.","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"     * @param model the model","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"     * @param lastShownList the last shown list","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"     * @throws CommandException if all persons are at risk of being deleted","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"    private static void ensureNotAllAreDeleted(Model model, ObservableList\u003cPerson\u003e lastShownList)","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"        if (getFilteredSize(lastShownList) \u003d\u003d getTotalSize(model)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"            throw new CommandException(MESSAGE_NO_FILTER);","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Zer0Legion":120}},{"path":"src/main/java/seedu/address/logic/commands/DeselectExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" * Deselects the currently selected exam.","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class DeselectExamCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public static final String COMMAND_WORD \u003d \"deselectExam\";","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"%s deselected\";","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        if (model.getSelectedExam().getValue() \u003d\u003d null) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        Exam examToDeselect \u003d model.getSelectedExam().getValue();","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        model.deselectExam();","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, examToDeselect.getName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"delishad21":30}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"            + \"[\" + PREFIX_MATRIC_NUMBER + \"MATRICULATION NUMBER] \"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"            + \"[\" + PREFIX_REFLECTION + \"REFLECTION] \"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            + \"[\" + PREFIX_STUDIO + \"STUDIO] \"","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"        Matric updatedMatric \u003d editPersonDescriptor.getMatric().orElse(personToEdit.getMatric());","lastModifiedDate":"2024-03-17"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"        Reflection updatedReflection \u003d editPersonDescriptor.getReflection().orElse(personToEdit.getReflection());","lastModifiedDate":"2024-03-17"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        Studio updatedStudio \u003d editPersonDescriptor.getStudio().orElse(personToEdit.getStudio());","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"        // Scores are not edited","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e scores \u003d personToEdit.getScores();","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"                          updatedAddress, updatedTags, updatedMatric,","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"                          updatedReflection, updatedStudio, scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand otherEditCommand \u003d (EditCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return index.equals(otherEditCommand.index)","lastModifiedDate":"2023-07-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditCommand.editPersonDescriptor);","lastModifiedDate":"2023-07-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                .add(\"index\", index)","lastModifiedDate":"2019-02-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"Zer0Legion"},"content":"        private Matric matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":163,"author":{"gitId":"jayllo-c"},"content":"        private Reflection reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"        private Studio studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"        private Map\u003cExam, Score\u003e scores;","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":180,"author":{"gitId":"Zer0Legion"},"content":"            setMatric(toCopy.matric);","lastModifiedDate":"2024-03-06"},{"lineNumber":181,"author":{"gitId":"jayllo-c"},"content":"            setReflection(toCopy.reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"            setStudio(toCopy.studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"            setScores(toCopy.scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"jayllo-c"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, matric, reflection, studio);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"delishad21"},"content":"        public void setScores(Map\u003cExam, Score\u003e scores) {","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"delishad21"},"content":"            this.scores \u003d (scores !\u003d null) ? new HashMap\u003c\u003e(scores) : null;","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"delishad21"},"content":"        public Optional\u003cMap\u003cExam, Score\u003e\u003e getScores() {","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"delishad21"},"content":"            return (scores !\u003d null) ? Optional.of(Collections.unmodifiableMap(scores)) : Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"Zer0Legion"},"content":"        public void setMatric(Matric matric) {","lastModifiedDate":"2024-03-06"},{"lineNumber":251,"author":{"gitId":"Zer0Legion"},"content":"            this.matric \u003d matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":252,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":253,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":254,"author":{"gitId":"Zer0Legion"},"content":"        public Optional\u003cMatric\u003e getMatric() {","lastModifiedDate":"2024-03-06"},{"lineNumber":255,"author":{"gitId":"Zer0Legion"},"content":"            return Optional.ofNullable(matric);","lastModifiedDate":"2024-03-06"},{"lineNumber":256,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":257,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":258,"author":{"gitId":"jayllo-c"},"content":"        public void setReflection(Reflection reflection) {","lastModifiedDate":"2024-03-17"},{"lineNumber":259,"author":{"gitId":"jayllo-c"},"content":"            this.reflection \u003d reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":260,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":261,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":262,"author":{"gitId":"jayllo-c"},"content":"        public Optional\u003cReflection\u003e getReflection() {","lastModifiedDate":"2024-03-17"},{"lineNumber":263,"author":{"gitId":"jayllo-c"},"content":"            return Optional.ofNullable(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":264,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":265,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":266,"author":{"gitId":"delishad21"},"content":"        public void setStudio(Studio studio) {","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"delishad21"},"content":"            this.studio \u003d studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"delishad21"},"content":"        public Optional\u003cStudio\u003e getStudio() {","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"            return Optional.ofNullable(studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":289,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":290,"author":{"gitId":"Zer0Legion"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags)","lastModifiedDate":"2024-03-06"},{"lineNumber":291,"author":{"gitId":"jayllo-c"},"content":"                    \u0026\u0026 Objects.equals(matric, otherEditPersonDescriptor.matric)","lastModifiedDate":"2024-03-17"},{"lineNumber":292,"author":{"gitId":"jayllo-c"},"content":"                    \u0026\u0026 Objects.equals(reflection, otherEditPersonDescriptor.reflection)","lastModifiedDate":"2024-03-18"},{"lineNumber":293,"author":{"gitId":"delishad21"},"content":"                    \u0026\u0026 Objects.equals(studio, otherEditPersonDescriptor.studio)","lastModifiedDate":"2024-03-25"},{"lineNumber":294,"author":{"gitId":"delishad21"},"content":"                    \u0026\u0026 Objects.equals(scores, otherEditPersonDescriptor.scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":305,"author":{"gitId":"Zer0Legion"},"content":"                    .add(\"matriculation number\", matric)","lastModifiedDate":"2024-03-06"},{"lineNumber":306,"author":{"gitId":"jayllo-c"},"content":"                    .add(\"reflection\", reflection)","lastModifiedDate":"2024-03-17"},{"lineNumber":307,"author":{"gitId":"delishad21"},"content":"                    .add(\"studio\", studio)","lastModifiedDate":"2024-03-14"},{"lineNumber":308,"author":{"gitId":"delishad21"},"content":"                    .add(\"scores\", scores)","lastModifiedDate":"2024-03-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":311,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"delishad21":37,"Zer0Legion":16,"jayllo-c":21,"-":239}},{"path":"src/main/java/seedu/address/logic/commands/EditScoreCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.commons.util.CollectionUtil.isAnyNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":" * Edits a score of a person in the address book.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"public class EditScoreCommand extends Command {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"    public static final String COMMAND_WORD \u003d \"editScore\";","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the score for the person identified by \"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"            + \"the index number used in the displayed person list. \"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"            + \"Existing values will be overwritten by the input value.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"            + PREFIX_SCORE + \"SCORE\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"            + PREFIX_SCORE + \"17\";","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_EDIT_SCORE_SUCCESS \u003d \"Edited score for %s to %s for %s (%s).\";","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_SCORE_GREATER_THAN_MAX \u003d","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            \"Score for %s cannot be greater than the maximum score.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_NO_SCORE_TO_EDIT \u003d \"%s (%s) does not have a score to edit for %s.\";","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    private final Index index;","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    private final Score score;","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"     * Creates an EditScoreCommand object to edit the specified {@code Score} of the person at","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"     * the specified {@code Index}.","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"    public EditScoreCommand(Index index, Score score) {","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(score);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"        this.index \u003d index;","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"        this.score \u003d score;","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        List\u003cPerson\u003e filteredPersons \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        if (index.getZeroBased() \u003e\u003d filteredPersons.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"        Exam selectedExam \u003d model.getSelectedExam().getValue();","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        if (!isAnyNonNull(selectedExam)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"        if (selectedExam.getMaxScore().getScore() \u003c score.getScore()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(String.format(MESSAGE_SCORE_GREATER_THAN_MAX, selectedExam.getName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        Person personToEdit \u003d filteredPersons.get(index.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e updatedScores \u003d new HashMap\u003c\u003e(personToEdit.getScores());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        if (!updatedScores.containsKey(selectedExam)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(String.format(MESSAGE_NO_SCORE_TO_EDIT, personToEdit.getName(),","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"                    personToEdit.getEmail(),","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"                    selectedExam.getName()));","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"        model.addExamScoreToPerson(personToEdit, selectedExam, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_SCORE_SUCCESS, selectedExam.getName(), score,","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"                personToEdit.getName(), personToEdit.getEmail()));","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"                || (other instanceof EditScoreCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"                \u0026\u0026 index.equals(((EditScoreCommand) other).index)","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"                \u0026\u0026 score.equals(((EditScoreCommand) other).score));","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"danielleloh":93}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import java.io.File;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.core.JsonParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.JsonMappingException;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import com.fasterxml.jackson.databind.node.ArrayNode;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import com.fasterxml.jackson.databind.node.JsonNodeFactory;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.dataformat.csv.CsvMapper;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.dataformat.csv.CsvSchema;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.dataformat.csv.CsvSchema.Builder;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":" * Exports the information of Persons listed in the interface of the addressbook to a CSV file.","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exported all currently listed person(s)\u0027s information to a \"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"            + \"CSV file. \\n\"","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"            + \"CSV file can be found in addressbookdata file.\";","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_NOTHING_TO_EXPORT_FAILURE \u003d \"Nothing to export.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_WRITE_TO_JSON_FAILURE \u003d \"Could not write information in filtered list to \"","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"            + \"JSON storage.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_JSON_FILE_NOT_FOUND_FAILURE \u003d \"Cannot find JSON file to export.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_PARSE_JSON_FILE_FAILURE \u003d \"Error parsing JSON data.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_MAPPING_JSON_TO_CSV_FAILURE \u003d \"Error mapping JSON data to CSV schema.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_EMPTY_JSON_FILE_FAILURE \u003d \"The JSON File is empty.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"    public static final String MESSAGE_CREATE_CSV_DIRECTORY_FAILURE \u003d \"Could not create directory for CSV file.\";","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"    private Path filteredJsonFilePath \u003d Paths.get(\"data\", \"filteredaddressbook.json\");","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    private String csvFilePath \u003d \"./addressbookdata/avengersassemble.csv\";","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"     * Gets the current CSV file path.","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"     * @return The file path that the data is being exported to.","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"    public String getCsvFilePath() {","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        return this.csvFilePath;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"     * Updates the CSV file path if needed.","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"     * @param filePath The file path to change to.","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"    public void updateCsvFilePath(String filePath) {","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        this.csvFilePath \u003d filePath;","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"     * Gets the current JSON file path in which the filtered lists of persons will be written to.","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"     * @return The file path that the filtered persons list is being written to.","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"    public Path getFilteredJsonFilePath() {","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        return this.filteredJsonFilePath;","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"     * Updates the filtered JSON file path in which the filtered lists of persons will be written to.","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"     * @param filePath The JSON file path to be written to.","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"    public void updateFilteredJsonFilePath(Path filePath) {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        this.filteredJsonFilePath \u003d filePath;","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"     * Checks if the list is empty and throws an exception if the list is empty.","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"     * @param personList The list in which to check if it is empty.","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"     * @throws CommandException If the list is empty.","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"    public void checkForEmptyList(ObservableList\u003cPerson\u003e personList) throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"        if (personList.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(MESSAGE_NOTHING_TO_EXPORT_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"     * Adds all persons in ObservableList to AddressBook.","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"     * @param addressBook The address book where persons should be added into.","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"     * @param personList List containing persons to be added into address book.","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"    public void addToAddressBook(AddressBook addressBook, ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"        for (Person person : personList) {","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"     * Writes the information in the address book to a JSON file.","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"     * @param jsonAddressBookStorage The JSON file to write information into.","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"     * @param addressBook The address book from which to read the information from.","lastModifiedDate":"2024-03-23"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"     * @throws CommandException If information cannot be written into the JSON file.","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"    public void writeToJsonFile(JsonAddressBookStorage jsonAddressBookStorage, AddressBook addressBook)","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"            throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"            jsonAddressBookStorage.saveAddressBook(addressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(MESSAGE_WRITE_TO_JSON_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"     * Read the JSON file and returns the contents as a JSON tree.","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"     * @param jsonFile The JSON file to be read and mapped to the CSV schema.","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"     * @return The JSON tree representing the content of the JSON file.","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"     * @throws CommandException If an error occurs while reading the JSON file and mapping it to the CSV schema.","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"    public JsonNode readJsonFile(File jsonFile) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"            JsonNode jsonTree \u003d new ObjectMapper().readTree(jsonFile);","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"            return jsonTree;","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-14"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"            if (e instanceof FileNotFoundException) {","lastModifiedDate":"2024-03-14"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"                throw new CommandException(MESSAGE_JSON_FILE_NOT_FOUND_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"            } else if (e instanceof JsonParseException) {","lastModifiedDate":"2024-03-14"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"                throw new CommandException(MESSAGE_PARSE_JSON_FILE_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"            } else if (e instanceof JsonMappingException) {","lastModifiedDate":"2024-03-14"},{"lineNumber":143,"author":{"gitId":"danielleloh"},"content":"                throw new CommandException(MESSAGE_MAPPING_JSON_TO_CSV_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"danielleloh"},"content":"            } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"danielleloh"},"content":"                throw new CommandException(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-03-14"},{"lineNumber":147,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":148,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":149,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":151,"author":{"gitId":"danielleloh"},"content":"     * Reads the persons array in the JSON file and returns the contents as a JSON tree.","lastModifiedDate":"2024-03-14"},{"lineNumber":152,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":153,"author":{"gitId":"danielleloh"},"content":"     * @param jsonTree The JSON tree where the persons array should be read from.","lastModifiedDate":"2024-03-14"},{"lineNumber":154,"author":{"gitId":"danielleloh"},"content":"     * @return The JSON tree representing the content of the persons array in the release file.","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"danielleloh"},"content":"     * @throws CommandException If the persons array in the JSON file is empty.","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":157,"author":{"gitId":"danielleloh"},"content":"    public JsonNode readPersonsArray(JsonNode jsonTree) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":158,"author":{"gitId":"danielleloh"},"content":"        JsonNode personsArray \u003d jsonTree.get(\"persons\");","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"        if (personsArray \u003d\u003d null || personsArray.size() \u003d\u003d 0) {","lastModifiedDate":"2024-03-14"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(MESSAGE_EMPTY_JSON_FILE_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"        return personsArray;","lastModifiedDate":"2024-03-14"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":166,"author":{"gitId":"danielleloh"},"content":"     * Creates the directory for the CSV file if it does not exist.","lastModifiedDate":"2024-03-23"},{"lineNumber":167,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":168,"author":{"gitId":"danielleloh"},"content":"     * @param csvFile The CSV file for which the directory needs to be created.","lastModifiedDate":"2024-03-23"},{"lineNumber":169,"author":{"gitId":"danielleloh"},"content":"     * @throws CommandException If directory fails to be created.","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":171,"author":{"gitId":"danielleloh"},"content":"    public void createCsvDirectory(File csvFile) throws CommandException {","lastModifiedDate":"2024-03-23"},{"lineNumber":172,"author":{"gitId":"danielleloh"},"content":"        File csvParentDirectory \u003d csvFile.getParentFile();","lastModifiedDate":"2024-03-23"},{"lineNumber":173,"author":{"gitId":"danielleloh"},"content":"        if (!csvParentDirectory.exists()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":174,"author":{"gitId":"danielleloh"},"content":"            boolean isCreated \u003d csvParentDirectory.mkdir();","lastModifiedDate":"2024-03-23"},{"lineNumber":175,"author":{"gitId":"danielleloh"},"content":"            if (!isCreated) {","lastModifiedDate":"2024-03-23"},{"lineNumber":176,"author":{"gitId":"danielleloh"},"content":"                throw new CommandException(MESSAGE_CREATE_CSV_DIRECTORY_FAILURE);","lastModifiedDate":"2024-03-23"},{"lineNumber":177,"author":{"gitId":"danielleloh"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":178,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":179,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":181,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":182,"author":{"gitId":"danielleloh"},"content":"     * Builds the CSV schema from the JSON array.","lastModifiedDate":"2024-03-14"},{"lineNumber":183,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":184,"author":{"gitId":"danielleloh"},"content":"     * @param jsonTree The JSON array to derive the schema from.","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"danielleloh"},"content":"     * @return The CSV schema.","lastModifiedDate":"2024-03-14"},{"lineNumber":186,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":187,"author":{"gitId":"danielleloh"},"content":"    public CsvSchema buildCsvSchema(JsonNode jsonTree) {","lastModifiedDate":"2024-03-14"},{"lineNumber":188,"author":{"gitId":"danielleloh"},"content":"        Builder csvSchemaBuilder \u003d CsvSchema.builder();","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"danielleloh"},"content":"        JsonNode firstObject \u003d jsonTree.elements().next();","lastModifiedDate":"2024-03-14"},{"lineNumber":190,"author":{"gitId":"danielleloh"},"content":"        firstObject.fieldNames().forEachRemaining(fieldName -\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"danielleloh"},"content":"            csvSchemaBuilder.addColumn(fieldName);","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"danielleloh"},"content":"        CsvSchema csvSchema \u003d csvSchemaBuilder","lastModifiedDate":"2024-03-13"},{"lineNumber":194,"author":{"gitId":"danielleloh"},"content":"                .build()","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"danielleloh"},"content":"                .withHeader();","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"danielleloh"},"content":"        return csvSchema;","lastModifiedDate":"2024-03-14"},{"lineNumber":197,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":198,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":199,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":200,"author":{"gitId":"danielleloh"},"content":"     * Writes JSON data to a CSV file.","lastModifiedDate":"2024-03-14"},{"lineNumber":201,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-14"},{"lineNumber":202,"author":{"gitId":"danielleloh"},"content":"     * @param csvFile The CSV file to write to.","lastModifiedDate":"2024-03-14"},{"lineNumber":203,"author":{"gitId":"danielleloh"},"content":"     * @param jsonTree The JSON array to be written to CSV.","lastModifiedDate":"2024-03-14"},{"lineNumber":204,"author":{"gitId":"danielleloh"},"content":"     * @throws IOException If an I/O error occurs during file writing.","lastModifiedDate":"2024-03-14"},{"lineNumber":205,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":206,"author":{"gitId":"danielleloh"},"content":"    public void writeToCsvFile(File csvFile, JsonNode jsonTree) throws IOException {","lastModifiedDate":"2024-03-14"},{"lineNumber":207,"author":{"gitId":"danielleloh"},"content":"        CsvSchema csvSchema \u003d buildCsvSchema(jsonTree);","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"danielleloh"},"content":"        CsvMapper csvMapper \u003d new CsvMapper();","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"delishad21"},"content":"        // The Code below removes examscores from the json tree","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"delishad21"},"content":"        // Potential future implementation: Export Command also exports exam scores","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"delishad21"},"content":"        // Create a new array node to hold the modified json nodes","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"delishad21"},"content":"        ArrayNode modifiedJsonTree \u003d JsonNodeFactory.instance.arrayNode();","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"delishad21"},"content":"        // Iterate over each json node in the json tree","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"delishad21"},"content":"        for (JsonNode jsonNode : jsonTree) {","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"delishad21"},"content":"            // Create a copy of the json node","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"delishad21"},"content":"            ObjectNode modifiedJsonNode \u003d ((ObjectNode) jsonNode).deepCopy();","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"delishad21"},"content":"            // Remove the \u0027examScores\u0027 field from the copy","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"delishad21"},"content":"            modifiedJsonNode.remove(\"examScores\");","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"delishad21"},"content":"            // Add the modified json node to the new array node","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"delishad21"},"content":"            modifiedJsonTree.add(modifiedJsonNode);","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":224,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":225,"author":{"gitId":"danielleloh"},"content":"        csvMapper.writerFor(JsonNode.class)","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"danielleloh"},"content":"                .with(csvSchema)","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"delishad21"},"content":"                .writeValue(csvFile, modifiedJsonTree);","lastModifiedDate":"2024-03-27"},{"lineNumber":228,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":230,"author":{"gitId":"danielleloh"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":231,"author":{"gitId":"danielleloh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-14"},{"lineNumber":232,"author":{"gitId":"danielleloh"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":234,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-03-23"},{"lineNumber":235,"author":{"gitId":"danielleloh"},"content":"            ObservableList\u003cPerson\u003e filteredPersonObservableList \u003d model.getFilteredPersonList();","lastModifiedDate":"2024-03-23"},{"lineNumber":236,"author":{"gitId":"danielleloh"},"content":"            checkForEmptyList(filteredPersonObservableList);","lastModifiedDate":"2024-03-23"},{"lineNumber":237,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":238,"author":{"gitId":"danielleloh"},"content":"            AddressBook filteredPersonAddressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-23"},{"lineNumber":239,"author":{"gitId":"danielleloh"},"content":"            addToAddressBook(filteredPersonAddressBook, filteredPersonObservableList);","lastModifiedDate":"2024-03-23"},{"lineNumber":240,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":241,"author":{"gitId":"danielleloh"},"content":"            JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filteredJsonFilePath);","lastModifiedDate":"2024-03-23"},{"lineNumber":242,"author":{"gitId":"danielleloh"},"content":"            writeToJsonFile(jsonAddressBookStorage, filteredPersonAddressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":243,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":244,"author":{"gitId":"danielleloh"},"content":"            File jsonFile \u003d filteredJsonFilePath.toFile();","lastModifiedDate":"2024-03-23"},{"lineNumber":245,"author":{"gitId":"danielleloh"},"content":"            File csvFile \u003d new File(csvFilePath);","lastModifiedDate":"2024-03-14"},{"lineNumber":246,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":247,"author":{"gitId":"danielleloh"},"content":"            JsonNode jsonTree \u003d readJsonFile(jsonFile);","lastModifiedDate":"2024-03-14"},{"lineNumber":248,"author":{"gitId":"danielleloh"},"content":"            JsonNode personsArray \u003d readPersonsArray(jsonTree);","lastModifiedDate":"2024-03-14"},{"lineNumber":249,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":250,"author":{"gitId":"danielleloh"},"content":"            createCsvDirectory(csvFile);","lastModifiedDate":"2024-03-23"},{"lineNumber":251,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":252,"author":{"gitId":"danielleloh"},"content":"            writeToCsvFile(csvFile, personsArray);","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":254,"author":{"gitId":"danielleloh"},"content":"            return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2024-03-13"},{"lineNumber":255,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":256,"author":{"gitId":"danielleloh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-13"},{"lineNumber":257,"author":{"gitId":"danielleloh"},"content":"            throw new CommandException(\"Error: \" + e.getMessage());","lastModifiedDate":"2024-03-13"},{"lineNumber":258,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":259,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":260,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"danielleloh":240,"delishad21":20}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.commons.util.CollectionUtil.isAnyNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MORETHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-03"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public static final Prefix[] ACCEPTED_PREFIXES \u003d {PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"                                                      PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MATRIC_NUMBER,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"                                                      PREFIX_REFLECTION, PREFIX_STUDIO, PREFIX_LESSTHAN,","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"                                                      PREFIX_MORETHAN};","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts with a specified aspect \"","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"            + \"containing specified keyword (case-insensitive) or\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"            + \"which meets the criteria with the specified value (positive-integer)\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"            + \"and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            + \"The currently supported prefixes are: \"","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            + Arrays.toString(ACCEPTED_PREFIXES) + \"\\n\"","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            + \"Parameters: PREFIX/KEYWORD\\n\"","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/Alice\";","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"    public static final String MESSAGE_SCORE_GREATER_THAN_MAX \u003d \"Value cannot be greater than the maximum score.\";","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    private final PersonDetailContainsKeywordPredicate predicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    public FindCommand(PersonDetailContainsKeywordPredicate predicate) {","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"        Exam selectedExam \u003d model.getSelectedExam().getValue();","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        if (predicate.isExamRequired()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"            if (!isAnyNonNull(selectedExam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"                throw new CommandException(Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"            if (selectedExam.getMaxScore().getScore() \u003c Integer.parseInt(predicate.getKeyword())) {","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"                throw new CommandException(MESSAGE_SCORE_GREATER_THAN_MAX);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"            model.updateFilteredPersonList(predicate.withExam(selectedExam));","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof FindCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand otherFindCommand \u003d (FindCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2023-07-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"delishad21":18,"Zer0Legion":1,"jayllo-c":26,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.commons.util.CsvUtil.readCsvFile;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-19"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORT;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"import java.util.List;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":" * Changes the  of an existing person in the address book.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports contacts from specified filepath.\"","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"            + \" Must be an absolute CSV file path\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"            + \"Parameters: filePath\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"            + \"[\" + PREFIX_IMPORT + \"import]\\n\"","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"            + \"Example: \" + COMMAND_WORD + PREFIX_IMPORT + \"C:usr/lib/text.csv\";","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"    private static final String MESSAGE_ARGUMENTS \u003d \"filePath: %s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"    private static final String MESSAGE_IMPORT_SUCCESS \u003d \"Imported Contacts from: %s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"    private static final String MESSAGE_DATA_LOAD_ERROR \u003d \"Unable to load data from %s\";","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"    private static final String MESSAGE_PARSE_ERROR \u003d \"Invalid data format in %s\";","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"    private final Path filePath;","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"    private final AddCommandParser addCommandParser \u003d new AddCommandParser();","lastModifiedDate":"2024-03-19"},{"lineNumber":46,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"     * Represents the order of the data that should be parsed into the addCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Pughal77"},"content":"    private final String[] header \u003d {\"name\", \"phone\", \"email\", \"address\", \"matric\", \"reflection\", \"studio\", \"tags\"};","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Pughal77"},"content":"     * Represents a mapping of String to prefix of the data that should be parsed into the addCommandParser.","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"Pughal77"},"content":"    private final Map\u003cString, Prefix\u003e prefixMap \u003d Map.of(","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"Pughal77"},"content":"            \"name\", PREFIX_NAME,","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Pughal77"},"content":"            \"phone\", PREFIX_PHONE,","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"Pughal77"},"content":"            \"email\", PREFIX_EMAIL,","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"Pughal77"},"content":"            \"address\", PREFIX_ADDRESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"Pughal77"},"content":"            \"matric\", PREFIX_MATRIC_NUMBER,","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"Pughal77"},"content":"            \"reflection\", PREFIX_REFLECTION,","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"Pughal77"},"content":"            \"studio\", PREFIX_STUDIO,","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"Pughal77"},"content":"            \"tags\", PREFIX_TAG","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"Pughal77"},"content":"    );","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"Pughal77"},"content":"     * @param filePath absolute path of file (path starts from C:...)","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"Pughal77"},"content":"    public ImportCommand(Path filePath) {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"Pughal77"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":71,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"Pughal77"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":75,"author":{"gitId":"Pughal77"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"Pughal77"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"Pughal77"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-20"},{"lineNumber":78,"author":{"gitId":"Pughal77"},"content":"        try {","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"Pughal77"},"content":"            List\u003cMap\u003cString, String\u003e\u003e personsData \u003d readCsvFile(filePath);","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"Pughal77"},"content":"            addToModel(model, personsData);","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"Pughal77"},"content":"        } catch (DataLoadingException e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"Pughal77"},"content":"            throw new CommandException(String.format(MESSAGE_DATA_LOAD_ERROR, filePath));","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"Pughal77"},"content":"        return new CommandResult(String.format(MESSAGE_IMPORT_SUCCESS, filePath.toString()));","lastModifiedDate":"2024-03-20"},{"lineNumber":86,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":88,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"Pughal77"},"content":"     * Adds the persons data to the model using a series of addCommands.","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"Pughal77"},"content":"     * @param model","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"Pughal77"},"content":"     * @param personsData","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"Pughal77"},"content":"     * @throws CommandException","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":94,"author":{"gitId":"Pughal77"},"content":"    public void addToModel(Model model, List\u003cMap\u003cString, String\u003e\u003e personsData) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"Pughal77"},"content":"        for (Map\u003cString, String\u003e personData : personsData) {","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"Pughal77"},"content":"            try {","lastModifiedDate":"2024-03-19"},{"lineNumber":97,"author":{"gitId":"Pughal77"},"content":"                String addCommandInput \u003d convertToAddCommandInput(personData);","lastModifiedDate":"2024-03-19"},{"lineNumber":98,"author":{"gitId":"Pughal77"},"content":"                AddCommand addCommand \u003d parseAddCommandInput(addCommandInput);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"Pughal77"},"content":"                addCommand.execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":100,"author":{"gitId":"Pughal77"},"content":"            } catch (ParseException e) {","lastModifiedDate":"2024-03-19"},{"lineNumber":101,"author":{"gitId":"Pughal77"},"content":"                throw new CommandException(String.format(MESSAGE_PARSE_ERROR, personData));","lastModifiedDate":"2024-03-19"},{"lineNumber":102,"author":{"gitId":"Pughal77"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":103,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":104,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":105,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":106,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-19"},{"lineNumber":107,"author":{"gitId":"Pughal77"},"content":"     * Converts a map of person data to a string that can be parsed by the addCommandParser","lastModifiedDate":"2024-03-19"},{"lineNumber":108,"author":{"gitId":"Pughal77"},"content":"     * @param personData","lastModifiedDate":"2024-03-19"},{"lineNumber":109,"author":{"gitId":"Pughal77"},"content":"     * @return","lastModifiedDate":"2024-03-19"},{"lineNumber":110,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-19"},{"lineNumber":111,"author":{"gitId":"Pughal77"},"content":"    public String convertToAddCommandInput(Map\u003cString, String\u003e personData) {","lastModifiedDate":"2024-03-19"},{"lineNumber":112,"author":{"gitId":"Pughal77"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-19"},{"lineNumber":113,"author":{"gitId":"Pughal77"},"content":"        sb.append(\" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":114,"author":{"gitId":"Pughal77"},"content":"        for (String key : header) {","lastModifiedDate":"2024-03-19"},{"lineNumber":115,"author":{"gitId":"Pughal77"},"content":"            // Maybe in the future, I can add a check to see if the value is empty","lastModifiedDate":"2024-03-19"},{"lineNumber":116,"author":{"gitId":"Pughal77"},"content":"            if (personData.get(key).isEmpty()) {","lastModifiedDate":"2024-03-19"},{"lineNumber":117,"author":{"gitId":"Pughal77"},"content":"                // skip empty values","lastModifiedDate":"2024-03-19"},{"lineNumber":118,"author":{"gitId":"Pughal77"},"content":"                continue;","lastModifiedDate":"2024-03-19"},{"lineNumber":119,"author":{"gitId":"Pughal77"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":120,"author":{"gitId":"Pughal77"},"content":"            if (key.equals(\"tags\")) {","lastModifiedDate":"2024-03-19"},{"lineNumber":121,"author":{"gitId":"Pughal77"},"content":"                // tag is a special case, it can have multiple values","lastModifiedDate":"2024-03-19"},{"lineNumber":122,"author":{"gitId":"Pughal77"},"content":"                String tags \u003d personData.get(key);","lastModifiedDate":"2024-03-19"},{"lineNumber":123,"author":{"gitId":"Pughal77"},"content":"                String[] tagArray \u003d tags.split(\";\");","lastModifiedDate":"2024-03-19"},{"lineNumber":124,"author":{"gitId":"Pughal77"},"content":"                for (String tag : tagArray) {","lastModifiedDate":"2024-03-19"},{"lineNumber":125,"author":{"gitId":"Pughal77"},"content":"                    sb.append(prefixMap.get(key).getPrefix());","lastModifiedDate":"2024-03-19"},{"lineNumber":126,"author":{"gitId":"Pughal77"},"content":"                    sb.append(tag);","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"Pughal77"},"content":"                    sb.append(\" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":128,"author":{"gitId":"Pughal77"},"content":"                }","lastModifiedDate":"2024-03-19"},{"lineNumber":129,"author":{"gitId":"Pughal77"},"content":"            } else {","lastModifiedDate":"2024-03-19"},{"lineNumber":130,"author":{"gitId":"Pughal77"},"content":"                sb.append(prefixMap.get(key).getPrefix());","lastModifiedDate":"2024-03-19"},{"lineNumber":131,"author":{"gitId":"Pughal77"},"content":"                sb.append(personData.get(key));","lastModifiedDate":"2024-03-19"},{"lineNumber":132,"author":{"gitId":"Pughal77"},"content":"            }","lastModifiedDate":"2024-03-19"},{"lineNumber":133,"author":{"gitId":"Pughal77"},"content":"            sb.append(\" \");","lastModifiedDate":"2024-03-19"},{"lineNumber":134,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-19"},{"lineNumber":135,"author":{"gitId":"Pughal77"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-19"},{"lineNumber":136,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":137,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":138,"author":{"gitId":"Pughal77"},"content":"    public AddCommand parseAddCommandInput(String input) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"Pughal77"},"content":"        return addCommandParser.parse(input);","lastModifiedDate":"2024-03-19"},{"lineNumber":140,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":141,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":142,"author":{"gitId":"Pughal77"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":143,"author":{"gitId":"Pughal77"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":144,"author":{"gitId":"Pughal77"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":145,"author":{"gitId":"Pughal77"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":146,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":147,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":148,"author":{"gitId":"Pughal77"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":149,"author":{"gitId":"Pughal77"},"content":"        if (!(other instanceof ImportCommand)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"Pughal77"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":151,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":152,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":153,"author":{"gitId":"Pughal77"},"content":"        ImportCommand e \u003d (ImportCommand) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":154,"author":{"gitId":"Pughal77"},"content":"        return filePath.equals(e.filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":155,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":156,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":157,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Pughal77":156,"Zer0Legion":1}},{"path":"src/main/java/seedu/address/logic/commands/ImportExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORT;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import java.io.Reader;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import java.nio.file.Files;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"import com.opencsv.CSVParser;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"import com.opencsv.CSVParserBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"import com.opencsv.CSVReader;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"import com.opencsv.CSVReaderBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"import com.opencsv.exceptions.CsvException;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":" * Imports a CSV file containing details of existing exams into the application.","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"public class ImportExamCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"    public static final String COMMAND_WORD \u003d \"importExam\";","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports exams from specified filepath.\"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"            + \" Must be an absolute CSV file path\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"            + \"[\" + PREFIX_IMPORT + \"FILEPATH]\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_IMPORT + \"C:usr/lib/text.csv\";","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_ERROR_READING_FILE \u003d \"Error reading file: \";","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_SCORE_NOT_NUMBER \u003d \"Score for %s is not a number\";","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_PERSON_DOES_NOT_EXIST \u003d \"Person does not exist\";","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Imported exams from: %s\";","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"    public static final String PREFIX_SCORE \u003d \" 1 s/\";","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"    public static final String PREFIX_FIND_BY_EMAIL \u003d \" e/\";","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"    public static final String PREFIX_ERROR_REPORT \u003d \"\\nBelow are the errors that occurred while importing exams:\\n\";","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"    private StringBuilder errorReport;","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"    private Path filepath;","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"     * Creates an ImportExamCommand to import exams from the specified file path.","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"     * @param filePath the path of the file","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"    public ImportExamCommand(Path filePath) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"        this.errorReport \u003d new StringBuilder();","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"    // Error report methods","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"     * Adds an error to the error report.","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"     * @param subject the subject of the error","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"     * @param error the error message","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"    void addToErrorReport(String subject, String error) {","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"        errorReport.append(String.format(\"%s: %s\\n\", subject, error));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"     * Generates the error report.","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"     * @return the error report","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"    String generateErrorReport() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"        String errorReportString \u003d errorReport.toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"        if (errorReportString.isBlank()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"            return \"\";","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"            return PREFIX_ERROR_REPORT + errorReportString;","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"    // CSV parsing methods","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"     * Reads all lines from a CSV file.","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"     * @param filePath the path of the file","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"     * @return a list of String arrays representing the lines of the CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"     * @throws CommandException if an error occurs while reading the file","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"    public List\u003cString[]\u003e readAllLines(Path filePath) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"        try (Reader reader \u003d Files.newBufferedReader(filePath)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"            return readCsv(reader);","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"        } catch (IOException | CsvException exception) {","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"            throw new CommandException(MESSAGE_ERROR_READING_FILE + filePath.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"     * Reads a CSV file.","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"     * @param reader the reader to read the file","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"     * @return a list of String arrays representing the lines of the CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"     * @throws IOException if an error occurs while reading the file","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"     * @throws CsvException if an error occurs while parsing the CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"Zer0Legion"},"content":"    private List\u003cString[]\u003e readCsv(Reader reader) throws IOException, CsvException {","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"        CSVParser parser \u003d new CSVParserBuilder().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"Zer0Legion"},"content":"        CSVReader csvReader \u003d new CSVReaderBuilder(reader).withCSVParser(parser).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"Zer0Legion"},"content":"        return csvReader.readAll();","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"Zer0Legion"},"content":"    // Exam mapping methods","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"     * Reorganizes the parsed CSV data into a mapping of individual results from exams.","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"     * @param lst the list of String arrays representing the lines of the CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"     * @return a mapping of exam names to a mapping of student emails to their respective scores","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"    private HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e createExamsMapping(List\u003cString[]\u003e lst) {","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"        HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"Zer0Legion"},"content":"        // Check if there is at least a header row within the CSV file.","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"        if (hasHeader(lst)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"Zer0Legion"},"content":"            createExamNameHeaders(lst, map);","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"Zer0Legion"},"content":"            updateExamResults(lst, map);","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":123,"author":{"gitId":"Zer0Legion"},"content":"        return map;","lastModifiedDate":"2024-03-26"},{"lineNumber":124,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"    private void createExamNameHeaders(List\u003cString[]\u003e lst, HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map) {","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"        String[] examNames \u003d getExamNames(lst);","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Zer0Legion"},"content":"        for (int i \u003d 1; i \u003c examNames.length; i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Zer0Legion"},"content":"            map.put(examNames[i], new HashMap\u003c\u003e());","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":132,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"Zer0Legion"},"content":"    private void updateExamResults(List\u003cString[]\u003e lst, HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map) {","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"Zer0Legion"},"content":"        String[] examNames \u003d getExamNames(lst);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":137,"author":{"gitId":"Zer0Legion"},"content":"        for (int i \u003d 1; i \u003c lst.size(); i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"Zer0Legion"},"content":"            String[] row \u003d lst.get(i);","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"Zer0Legion"},"content":"            updateExamResult(map, examNames, row);","lastModifiedDate":"2024-03-26"},{"lineNumber":140,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":141,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":142,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"Zer0Legion"},"content":"    private void updateExamResult(HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map, String[] examNames, String[] row) {","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"Zer0Legion"},"content":"        if (hasEmail(row)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"Zer0Legion"},"content":"            String email \u003d row[0];","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"Zer0Legion"},"content":"            addRows(map, examNames, row, email);","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"Zer0Legion"},"content":"    private void addRows(","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"Zer0Legion"},"content":"            HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map, String[] examNames, String[] row, String email) {","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"Zer0Legion"},"content":"        for (int j \u003d 1; j \u003c row.length; j++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"Zer0Legion"},"content":"            addRow(map, examNames, row, email, j);","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":156,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"Zer0Legion"},"content":"    private void addRow(","lastModifiedDate":"2024-03-26"},{"lineNumber":158,"author":{"gitId":"Zer0Legion"},"content":"            HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e map, String[] examNames, String[] row, String email, int j) {","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"Zer0Legion"},"content":"        if (isValidScore(row[j])) {","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"Zer0Legion"},"content":"            map.get(examNames[j]).put(email, new Score(Integer.parseInt(row[j])).getScore());","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"Zer0Legion"},"content":"        } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":162,"author":{"gitId":"Zer0Legion"},"content":"            addToErrorReport(email, String.format(MESSAGE_SCORE_NOT_NUMBER, examNames[j]));","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":165,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":166,"author":{"gitId":"Zer0Legion"},"content":"    private void addScores(HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e headers, Model model) {","lastModifiedDate":"2024-03-29"},{"lineNumber":167,"author":{"gitId":"Zer0Legion"},"content":"        Object[] examNames \u003d headers.keySet().toArray();","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":169,"author":{"gitId":"Zer0Legion"},"content":"        for (int i \u003d 0; i \u003c examNames.length; i++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":170,"author":{"gitId":"Zer0Legion"},"content":"            ObservableList\u003cExam\u003e exams \u003d model.getExamByName(examNames[i].toString().strip());","lastModifiedDate":"2024-03-29"},{"lineNumber":171,"author":{"gitId":"Zer0Legion"},"content":"            if (exams.size() \u003e 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":172,"author":{"gitId":"Zer0Legion"},"content":"                Exam exam \u003d exams.get(0);","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"Zer0Legion"},"content":"                insertGrades(headers, model, exam, examNames[i]);","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"Zer0Legion"},"content":"            } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"Zer0Legion"},"content":"                addToErrorReport((String) examNames[i], \"Exam does not exist\");","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"Zer0Legion"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":177,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":178,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":180,"author":{"gitId":"Zer0Legion"},"content":"    private void insertGrades(","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"Zer0Legion"},"content":"            HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e headers, Model model, Exam exam, Object examNames) {","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"Zer0Legion"},"content":"        HashMap\u003cString, Integer\u003e grades \u003d headers.get((String) examNames);","lastModifiedDate":"2024-03-26"},{"lineNumber":183,"author":{"gitId":"Zer0Legion"},"content":"        Object[] emails \u003d grades.keySet().toArray();","lastModifiedDate":"2024-03-26"},{"lineNumber":184,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":185,"author":{"gitId":"Zer0Legion"},"content":"        for (int j \u003d 0; j \u003c emails.length; j++) {","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"Zer0Legion"},"content":"            String email \u003d (String) emails[j];","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"Zer0Legion"},"content":"            Integer grade \u003d grades.get(email);","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"Zer0Legion"},"content":"            addScoreToPerson(model, email, exam, grade);","lastModifiedDate":"2024-03-29"},{"lineNumber":190,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":191,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"Zer0Legion"},"content":"    private void addScoreToPerson(Model model, String email, Exam exam, Integer grade) {","lastModifiedDate":"2024-03-29"},{"lineNumber":194,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cPerson\u003e persons \u003d model.getPersonByEmail(email);","lastModifiedDate":"2024-03-29"},{"lineNumber":195,"author":{"gitId":"Zer0Legion"},"content":"        if (persons.size() \u003e 0) {","lastModifiedDate":"2024-03-29"},{"lineNumber":196,"author":{"gitId":"Zer0Legion"},"content":"            Person person \u003d persons.get(0);","lastModifiedDate":"2024-03-29"},{"lineNumber":197,"author":{"gitId":"Zer0Legion"},"content":"            if (grade \u003c\u003d exam.maxScore.value) {","lastModifiedDate":"2024-03-29"},{"lineNumber":198,"author":{"gitId":"Zer0Legion"},"content":"                model.addExamScoreToPerson(person, exam, new Score(grade));","lastModifiedDate":"2024-03-29"},{"lineNumber":199,"author":{"gitId":"Zer0Legion"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":200,"author":{"gitId":"Zer0Legion"},"content":"                addToErrorReport(email, String.format(\"Grade for %s exceeds maximum score\", exam.getName()));","lastModifiedDate":"2024-03-29"},{"lineNumber":201,"author":{"gitId":"Zer0Legion"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":202,"author":{"gitId":"Zer0Legion"},"content":"        } else {","lastModifiedDate":"2024-03-29"},{"lineNumber":203,"author":{"gitId":"Zer0Legion"},"content":"            addToErrorReport(email, MESSAGE_PERSON_DOES_NOT_EXIST);","lastModifiedDate":"2024-03-29"},{"lineNumber":204,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":205,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":206,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"Zer0Legion"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"Zer0Legion"},"content":"        List\u003cString[]\u003e lst \u003d readAllLines(filepath);","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"Zer0Legion"},"content":"        HashMap\u003cString, HashMap\u003cString, Integer\u003e\u003e headers \u003d createExamsMapping(lst);","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"Zer0Legion"},"content":"        addScores(headers, model);","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"Zer0Legion"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"Zer0Legion"},"content":"                String.format(MESSAGE_SUCCESS, filepath.toString()) + generateErrorReport());","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"Zer0Legion"},"content":"    // Trivial methods","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"Zer0Legion"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"Zer0Legion"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"Zer0Legion"},"content":"                || (other instanceof ImportExamCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"Zer0Legion"},"content":"                \u0026\u0026 filepath.equals(((ImportExamCommand) other).filepath));","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"Zer0Legion"},"content":"    private boolean isValidScore(String score) {","lastModifiedDate":"2024-03-26"},{"lineNumber":231,"author":{"gitId":"Zer0Legion"},"content":"        try {","lastModifiedDate":"2024-03-26"},{"lineNumber":232,"author":{"gitId":"Zer0Legion"},"content":"            return Integer.parseInt(score) \u003e\u003d 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":233,"author":{"gitId":"Zer0Legion"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2024-03-26"},{"lineNumber":234,"author":{"gitId":"Zer0Legion"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":235,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":236,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":237,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":238,"author":{"gitId":"Zer0Legion"},"content":"    private boolean hasHeader(List\u003cString[]\u003e lst) {","lastModifiedDate":"2024-03-26"},{"lineNumber":239,"author":{"gitId":"Zer0Legion"},"content":"        return lst.size() \u003e 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":240,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":241,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":242,"author":{"gitId":"Zer0Legion"},"content":"    private String[] getExamNames(List\u003cString[]\u003e lst) {","lastModifiedDate":"2024-03-26"},{"lineNumber":243,"author":{"gitId":"Zer0Legion"},"content":"        return lst.get(0);","lastModifiedDate":"2024-03-26"},{"lineNumber":244,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":245,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":246,"author":{"gitId":"Zer0Legion"},"content":"    private boolean hasEmail(String[] row) {","lastModifiedDate":"2024-03-26"},{"lineNumber":247,"author":{"gitId":"Zer0Legion"},"content":"        return row.length \u003e 0;","lastModifiedDate":"2024-03-26"},{"lineNumber":248,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":249,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Zer0Legion":249}},{"path":"src/main/java/seedu/address/logic/commands/SelectExamCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * Selects an exam identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class SelectExamCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public static final String COMMAND_WORD \u003d \"selectExam\";","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            + \": Selects the exam identified by the index number used in the displayed exam list.\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_SELECT_EXAM_SUCCESS \u003d \"Selected Exam: %1$s\";","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    private final Index targetIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public SelectExamCommand(Index targetIndex) {","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e lastShownList \u003d model.getExamList();","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        Exam examToSelect \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        model.selectExam(examToSelect);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        return new CommandResult(String.format(MESSAGE_SELECT_EXAM_SUCCESS, examToSelect));","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof SelectExamCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand otherSelectExamCommand \u003d (SelectExamCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        return targetIndex.equals(otherSelectExamCommand.targetIndex);","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"                .add(\"targetIndex\", targetIndex)","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"                .toString();","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":68}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MATRIC_NUMBER, PREFIX_REFLECTION, PREFIX_STUDIO);","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"        if (!arePrefixesPresent(","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"                argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"                                                 PREFIX_MATRIC_NUMBER, PREFIX_REFLECTION, PREFIX_STUDIO);","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric \u003d handleOptionalMatric(argMultimap);","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection \u003d handleOptionalReflection(argMultimap);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        Studio studio \u003d handleOptionalStudio(argMultimap);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"        // Update the tagList automatically","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"        tagList \u003d autoTag(tagList, matric, reflection, studio);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, matric, reflection, studio, scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"     * Automatically adds a tag to the tagList based on the presence of matric, reflection and studio.","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"     * @param tagList the list of tags to be updated","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"     * @param matric the matric number of the person","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"     * @param reflection the reflection of the person","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"     * @param studio the studio of the person","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"     * @return","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"    private Set\u003cTag\u003e autoTag(Set\u003cTag\u003e tagList, Matric matric, Reflection reflection, Studio studio) {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"        boolean isMatricPresent \u003d !Matric.isEmptyMatric(matric.matricNumber);","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"        boolean isReflectionPresent \u003d !Reflection.isEmptyReflection(reflection.reflection);","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"        boolean isStudioPresent \u003d !Studio.isEmptyStudio(studio.studio);","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"        Optional\u003cTag\u003e autoTag \u003d createTag(isMatricPresent, isReflectionPresent, isStudioPresent);","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"        autoTag.ifPresent(tagList::add);","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"        return tagList;","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"     * Creates a tag based on the presence of matric, reflection and studio.","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"     * @param isMatricPresent boolean whether a Matric number is present.","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"     * @param isReflectionPresent boolean whether a Reflection is present.","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"     * @param isStudioPresent boolean whether a Studio is present.","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"     * @return an Optional Tag based on the presence of matric, reflection and studio.","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Zer0Legion"},"content":"    private Optional\u003cTag\u003e createTag(boolean isMatricPresent, boolean isReflectionPresent, boolean isStudioPresent) {","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"        if (isMatricPresent \u0026\u0026 isReflectionPresent \u0026\u0026 isStudioPresent) {","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"Zer0Legion"},"content":"            return Optional.of(new Tag(\"student\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"Zer0Legion"},"content":"        } else if (isMatricPresent \u0026\u0026 (isReflectionPresent ^ isStudioPresent)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"Zer0Legion"},"content":"            return Optional.of(new Tag(\"TA\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"Zer0Legion"},"content":"        } else if (!isMatricPresent \u0026\u0026 !isReflectionPresent \u0026\u0026 !isStudioPresent) {","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"Zer0Legion"},"content":"            return Optional.of(new Tag(\"instructor\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"        return Optional.empty();","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"    private static Matric handleOptionalMatric(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-06"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MATRIC_NUMBER)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"            return new Matric(\"\");","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"        } else {","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"            return ParserUtil.parseMatric(argMultimap.getValue(PREFIX_MATRIC_NUMBER).get());","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"jayllo-c"},"content":"    private static Reflection handleOptionalReflection(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REFLECTION)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"            return new Reflection(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"        } else {","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"jayllo-c"},"content":"            return ParserUtil.parseReflection(argMultimap.getValue(PREFIX_REFLECTION).get());","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":128,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    private static Studio handleOptionalStudio(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_STUDIO)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"            return new Studio(\"\");","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"            return ParserUtil.parseStudio(argMultimap.getValue(PREFIX_STUDIO).get());","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"delishad21":17,"Zer0Legion":55,"jayllo-c":15,"-":58}},{"path":"src/main/java/seedu/address/logic/parser/AddExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * Parses input arguments and creates a new AddExamCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class AddExamCommandParser implements Parser\u003cAddExamCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddExamCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     * and returns an AddExamCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public AddExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_SCORE);","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_SCORE)","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_SCORE);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        String name \u003d ParserUtil.parseExamName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        Score maxScore \u003d ParserUtil.parseExamScore(argMultimap.getValue(PREFIX_SCORE).get());","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(name, maxScore);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        return new AddExamCommand(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":51}},{"path":"src/main/java/seedu/address/logic/parser/AddScoreCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" * Parses input arguments and creates a new AddScoreCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"public class AddScoreCommandParser implements Parser\u003cAddScoreCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     * Parses the given {@code String} of arguments in the context of the AddScoreCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     * and returns an AddScoreCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public AddScoreCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_SCORE);","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        if (argMultimap.getPreamble().isEmpty() || !argMultimap.getValue(PREFIX_SCORE).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScoreCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SCORE);","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        Score score \u003d ParserUtil.parseScore(argMultimap.getValue(PREFIX_SCORE).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        return new AddScoreCommand(index, score);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":36}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeleteExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.DeleteScoreCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.DeleteShownCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeselectExamCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.EditScoreCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.ImportExamCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.SelectExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        case AddExamCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"            return new AddExamCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        case DeleteExamCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"            return new DeleteExamCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        case DeleteScoreCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"            return new DeleteScoreCommandParser().parse(arguments);","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"        case CopyCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-11"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"            return new CopyCommand();","lastModifiedDate":"2024-03-11"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":95,"author":{"gitId":"Pughal77"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"Pughal77"},"content":"            return new ImportCommandParser().parse(arguments);","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"            return new ExportCommand();","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"        case DeleteShownCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"            return new DeleteShownCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"        case SelectExamCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"            return new SelectExamCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        case DeselectExamCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"            return new DeselectExamCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"        case AddScoreCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"            return new AddScoreCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"        case EditScoreCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"            return new EditScoreCommandParser().parse(arguments);","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"        case ImportExamCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"            return new ImportExamCommandParser().parse(arguments);","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"danielleloh":12,"delishad21":20,"Pughal77":4,"Zer0Legion":8,"jayllo-c":4,"-":86}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-07-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Throws a {@code ParseException} if any of the prefixes given in {@code prefixes} appeared more than","lastModifiedDate":"2023-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * once among the arguments.","lastModifiedDate":"2023-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void verifyNoDuplicatePrefixesFor(Prefix... prefixes) throws ParseException {","lastModifiedDate":"2023-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Prefix[] duplicatedPrefixes \u003d Stream.of(prefixes).distinct()","lastModifiedDate":"2023-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .filter(prefix -\u003e argMultimap.containsKey(prefix) \u0026\u0026 argMultimap.get(prefix).size() \u003e 1)","lastModifiedDate":"2023-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .toArray(Prefix[]::new);","lastModifiedDate":"2023-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (duplicatedPrefixes.length \u003e 0) {","lastModifiedDate":"2023-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(Messages.getErrorMessageForDuplicatePrefixes(duplicatedPrefixes));","lastModifiedDate":"2023-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"     * Returns true if the ArgumentMultimap contains a single prefix-argument pair and an empty preamble.","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    public boolean verifySinglePrefix() {","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        return argMultimap.size() \u003d\u003d 2 \u0026\u0026 containsPreamble() \u0026\u0026 getPreamble().isEmpty()","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"               || argMultimap.size() \u003d\u003d 1 \u0026\u0026 !containsPreamble();","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    private boolean containsPreamble() {","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        return argMultimap.containsKey(new Prefix(\"\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"delishad21":12,"-":77}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"    public static final Prefix PREFIX_MATRIC_NUMBER \u003d new Prefix(\"m/\");","lastModifiedDate":"2024-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    public static final Prefix PREFIX_REFLECTION \u003d new Prefix(\"r/\");","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public static final Prefix PREFIX_STUDIO \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"    public static final Prefix PREFIX_IMPORT \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"s/\");","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    public static final Prefix PREFIX_LESSTHAN \u003d new Prefix(\"lt/\");","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"    public static final Prefix PREFIX_MORETHAN \u003d new Prefix(\"mt/\");","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"delishad21":2,"Pughal77":1,"Zer0Legion":1,"jayllo-c":3,"-":17}},{"path":"src/main/java/seedu/address/logic/parser/DeleteExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeleteExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * Parses input arguments and creates a new DeleteExamCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class DeleteExamCommandParser implements Parser\u003cDeleteExamCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteExamCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * and returns a DeleteExamCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public DeleteExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            return new DeleteExamCommand(index);","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteExamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteScoreCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.DeleteScoreCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":" * Parses input arguments and creates a new DeleteScoreCommand object.","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"public class DeleteScoreCommandParser implements Parser\u003cDeleteScoreCommand\u003e {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteScoreCommand","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"     * and returns a DeleteScoreCommand object for execution.","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * @throws if the user input does not conform the expected format.","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    public DeleteScoreCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"        try {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"            return new DeleteScoreCommand(index);","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteScoreCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"danielleloh":28}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MATRIC_NUMBER, PREFIX_REFLECTION, PREFIX_STUDIO);","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_MATRIC_NUMBER, PREFIX_STUDIO);","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"        if (argMultimap.getValue(PREFIX_MATRIC_NUMBER).isPresent()) {","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"            editPersonDescriptor.setMatric(","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"                    ParserUtil.parseMatricForEdit(argMultimap.getValue(PREFIX_MATRIC_NUMBER).get()));","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"        if (argMultimap.getValue(PREFIX_REFLECTION).isPresent()) {","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"            editPersonDescriptor.setReflection(","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"                    ParserUtil.parseReflectionForEdit(argMultimap.getValue(PREFIX_REFLECTION).get()));","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        if (argMultimap.getValue(PREFIX_STUDIO).isPresent()) {","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"            editPersonDescriptor.setStudio(ParserUtil.parseStudioForEdit(argMultimap.getValue(PREFIX_STUDIO).get()));","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        // Editcommand never changes scores so the value does not matter","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        editPersonDescriptor.setScores(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"delishad21":7,"Zer0Legion":10,"jayllo-c":5,"-":83}},{"path":"src/main/java/seedu/address/logic/parser/EditScoreCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.EditScoreCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":" * Parses input arguments and creates a new EditScoreCommand object.","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"public class EditScoreCommandParser implements Parser\u003cEditScoreCommand\u003e {","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"     * Parses the given {@code String} of arguments in the context of the EditScoreCommand","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"     * and returns an EditScoreCommand object for execution.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"     *","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"     * @return EditScoreCommand object with relevant parameters.","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public EditScoreCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_SCORE);","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"        if (argumentMultimap.getPreamble().isEmpty() || !argumentMultimap.getValue(PREFIX_SCORE).isPresent()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditScoreCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        argumentMultimap.verifyNoDuplicatePrefixesFor(PREFIX_SCORE);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        Index index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        Score score \u003d ParserUtil.parseScore(argumentMultimap.getValue(PREFIX_SCORE).get());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        return new EditScoreCommand(index, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"danielleloh":37}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"                ArgumentTokenizer.tokenize(args, FindCommand.ACCEPTED_PREFIXES);","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        Prefix prefix \u003d extractPrefixForFindCommand(argMultimap);","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        String keyword \u003d extractValidKeyword(argMultimap, prefix);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        return new FindCommand(","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(prefix, keyword));","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     * Checks if the given ArgumentMultimap contains only one valid, non-empty prefix for the FindCommand","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * and returns the found prefix.","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    private Prefix extractPrefixForFindCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        if (argMultimap.verifySinglePrefix()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            for (Prefix prefix : FindCommand.ACCEPTED_PREFIXES) {","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                if (argMultimap.getValue(prefix).isPresent()","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"                    \u0026\u0026 !argMultimap.getValue(prefix).get().isEmpty()) {","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"                    return prefix;","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"                }","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"     * Checks if the value of the given ArgumentMultimap is a positive integer","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"     * if the prefix is PREFIX_LESSTHAN or PREFIX_GREATERTHAN.","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"    private String extractValidKeyword(ArgumentMultimap argMultimap, Prefix prefix) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"        if (prefix.equals(CliSyntax.PREFIX_LESSTHAN) || prefix.equals(CliSyntax.PREFIX_MORETHAN)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"            if (!argMultimap.getValue(prefix).get().matches(\"\\\\d+\")) {","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        return argMultimap.getValue(prefix).get();","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"delishad21":23,"jayllo-c":15,"-":26}},{"path":"src/main/java/seedu/address/logic/parser/ImportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORT;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":" * Parses input arguments and creates a new {@code ImportCommand} object","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"public class ImportCommandParser implements Parser\u003cImportCommand\u003e {","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"    public ImportCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_IMPORT);","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_IMPORT);","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"        if (!isPrefixPresent(","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"                argMultimap)","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"        Path path \u003d ParserUtil.parseFilePath(argMultimap.getValue(PREFIX_IMPORT).orElse(\"\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"        if (!isCsvFile(path)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"        return new ImportCommand(path);","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"     * Returns true if the prefix contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"        return argumentMultimap.getValue(CliSyntax.PREFIX_IMPORT).isPresent();","lastModifiedDate":"2024-03-20"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"     * Returns true if the file is a CSV file.","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"     * @param path the path of the file","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"     * @return true if the file is a CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"    private static boolean isCsvFile(Path path) {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"        return path.toString().endsWith(\".csv\");","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"Pughal77":41,"Zer0Legion":13}},{"path":"src/main/java/seedu/address/logic/parser/ImportExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMPORT;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.ImportExamCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":" * Parses input arguments and creates a new {@code ImportExamCommand} object","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"public class ImportExamCommandParser implements Parser\u003cImportExamCommand\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ImportExamCommand}","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"     * @param args the arguments to be parsed","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"     * @return a new {@code ImportExamCommand} object","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"    public ImportExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_IMPORT);","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_IMPORT);","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"        if (!isPrefixPresent(","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"                argMultimap)","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"        Path path \u003d ParserUtil.parseFilePath(argMultimap.getValue(PREFIX_IMPORT).orElse(\"\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"        if (!isCsvFile(path)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"        return new ImportExamCommand(path);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"     * Returns true if the given file is a CSV file.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"     * @param path the path of the file","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"     * @return true if the file is a CSV file","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    private static boolean isCsvFile(Path path) {","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"        return path.toString().endsWith(\".csv\");","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"    private static boolean isPrefixPresent(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"        return argumentMultimap.getValue(CliSyntax.PREFIX_IMPORT).isPresent();","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Zer0Legion":53}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"     * Parses {@code matric} into an {@code Matric} and returns it. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"     * @param matric the matric number to be parsed","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"     * @return the parsed matric number","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"     * @throws ParseException if the specified matric number is invalid","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"    public static Matric parseMatric(String matric) throws ParseException {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"        String trimmedMatric \u003d matric.trim();","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"        if (!Matric.isValidMatric(trimmedMatric)) {","lastModifiedDate":"2024-03-07"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(Matric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"        return new Matric(trimmedMatric);","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"     * Parses {@code matric} in the context of an Edit command where blank Matrics are accepted.","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"     * @param matric the matric number to be parsed","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"     * @return the parsed matric number","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"     * @throws ParseException if the specified matric number is invalid","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"    public static Matric parseMatricForEdit(String matric) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"        String trimmedMatric \u003d matric.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"        if (!Matric.isValidConstructorParam(trimmedMatric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(Matric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"        return new Matric(trimmedMatric);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"     * Parses {@code reflection} into a {@code Reflection} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"     * trimmed.","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"     * @param reflection the reflection to be parsed","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"     * @return the parsed reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"     * @throws ParseException if the specified reflection is invalid","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"    public static Reflection parseReflection(String reflection) throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"        requireNonNull(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"        String trimmedReflection \u003d reflection.trim();","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"        if (!Reflection.isValidReflection(trimmedReflection)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"            throw new ParseException(Reflection.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"        return new Reflection(trimmedReflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"     * Parses {@code reflection} in the context of an Edit command where blank Reflections are accepted.","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"     * @param reflection the reflection to be parsed","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"     * @return the parsed reflection","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"     * @throws ParseException if the specified reflection is invalid","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"    public static Reflection parseReflectionForEdit(String reflection) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(reflection);","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"        String trimmedReflection \u003d reflection.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"        if (!Reflection.isValidConstructorParam(trimmedReflection)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(Reflection.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"Zer0Legion"},"content":"        return new Reflection(trimmedReflection);","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"     * Parses {@code studio} into a {@code Studio} and returns it. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-14"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"     * @param studio the studio to be parsed","lastModifiedDate":"2024-03-14"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"     * @return the parsed studio","lastModifiedDate":"2024-03-14"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the specified studio is invalid","lastModifiedDate":"2024-03-14"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"    public static Studio parseStudio(String studio) throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"        requireNonNull(studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"        String trimmedStudio \u003d studio.trim();","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"        if (!Studio.isValidStudio(trimmedStudio)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Studio.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        return new Studio(trimmedStudio);","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"Zer0Legion"},"content":"     * Parses {@code studio} in the context of an Edit command where blank Studios are accepted.","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"Zer0Legion"},"content":"     * @param studio the studio to be parsed","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"Zer0Legion"},"content":"     * @return the parsed studio","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"Zer0Legion"},"content":"     * @throws ParseException if the specified studio is invalid","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"    public static Studio parseStudioForEdit(String studio) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(studio);","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"        String trimmedStudio \u003d studio.trim();","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"Zer0Legion"},"content":"        if (!Studio.isValidConstructorParam(trimmedStudio)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"Zer0Legion"},"content":"            throw new ParseException(Studio.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"Zer0Legion"},"content":"        return new Studio(trimmedStudio);","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":221,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":222,"author":{"gitId":"Pughal77"},"content":"     * Parses a {@code String filePath} into a {@code filePath}.","lastModifiedDate":"2024-03-12"},{"lineNumber":223,"author":{"gitId":"Pughal77"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":224,"author":{"gitId":"Pughal77"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":225,"author":{"gitId":"Pughal77"},"content":"     * @throws ParseException if the given {@code filePath} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":226,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":227,"author":{"gitId":"Pughal77"},"content":"    public static Path parseFilePath(String filePath) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":228,"author":{"gitId":"Pughal77"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":229,"author":{"gitId":"Pughal77"},"content":"        String trimmedTag \u003d filePath.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":230,"author":{"gitId":"Pughal77"},"content":"        // add error handling for what to do when invalid input is passed","lastModifiedDate":"2024-03-12"},{"lineNumber":231,"author":{"gitId":"Pughal77"},"content":"        return Paths.get(filePath);","lastModifiedDate":"2024-03-12"},{"lineNumber":232,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":233,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"delishad21"},"content":"     * Parses a {@code String score} into an {@code int}.","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"delishad21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the given {@code score} is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"delishad21"},"content":"    public static Score parseScore(String score) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"delishad21"},"content":"        requireNonNull(score);","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"delishad21"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"delishad21"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedScore)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":245,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"delishad21"},"content":"        int parsedScore \u003d Integer.parseInt(trimmedScore);","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":250,"author":{"gitId":"delishad21"},"content":"        if (!Score.isValidScore(parsedScore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":253,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":254,"author":{"gitId":"delishad21"},"content":"        return new Score(parsedScore);","lastModifiedDate":"2024-03-27"},{"lineNumber":255,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":256,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":257,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"delishad21"},"content":"     * Parses a {@code String examScore} into an {@code int}.","lastModifiedDate":"2024-03-27"},{"lineNumber":259,"author":{"gitId":"delishad21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-27"},{"lineNumber":260,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the given {@code examScore} is invalid.","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":263,"author":{"gitId":"delishad21"},"content":"    public static Score parseExamScore(String score) throws ParseException {","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"delishad21"},"content":"        requireNonNull(score);","lastModifiedDate":"2024-03-27"},{"lineNumber":265,"author":{"gitId":"delishad21"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"delishad21"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedScore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":267,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":268,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":269,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"delishad21"},"content":"        int parsedScore \u003d Integer.parseInt(trimmedScore);","lastModifiedDate":"2024-03-27"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"        if (!Exam.isValidExamScore(parsedScore)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":275,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":276,"author":{"gitId":"delishad21"},"content":"        return new Score(parsedScore);","lastModifiedDate":"2024-03-25"},{"lineNumber":277,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":278,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":279,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":280,"author":{"gitId":"delishad21"},"content":"     * Parses a {@code String examName} into a {@code String}.","lastModifiedDate":"2024-03-25"},{"lineNumber":281,"author":{"gitId":"delishad21"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-25"},{"lineNumber":282,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":283,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the given {@code examName} is invalid.","lastModifiedDate":"2024-03-25"},{"lineNumber":284,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":285,"author":{"gitId":"delishad21"},"content":"    public static String parseExamName(String examName) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":286,"author":{"gitId":"delishad21"},"content":"        requireNonNull(examName);","lastModifiedDate":"2024-03-25"},{"lineNumber":287,"author":{"gitId":"delishad21"},"content":"        String trimmedExamName \u003d examName.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":288,"author":{"gitId":"delishad21"},"content":"        if (!Exam.isValidName(trimmedExamName)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":289,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":290,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":291,"author":{"gitId":"delishad21"},"content":"        return trimmedExamName;","lastModifiedDate":"2024-03-25"},{"lineNumber":292,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"delishad21":78,"Pughal77":15,"Zer0Legion":58,"jayllo-c":18,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/SelectExamCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.SelectExamCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * Parses input arguments and creates a new SelectExamCommand object","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class SelectExamCommandParser implements Parser\u003cSelectExamCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"     * Parses the given {@code String} of arguments in the context of the SelectExamCommand","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * and returns a SelectExamCommand object for execution.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public SelectExamCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        try {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"            return new SelectExamCommand(index);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectExamCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":28}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.UniqueExamList;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    private final UniqueExamList exams;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        exams \u003d new UniqueExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * Creates an AddressBook using the Persons and Exams in the {@code toBeCopied}","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"     * Replaces the contents of the exam list with {@code exams}.","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"     * {@code exams} must not contain duplicate exams.","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    public void setExams(List\u003cExam\u003e exams) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        this.exams.setExams(exams);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        setExams(newData.getExamList());","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"    //// exam-level operations","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"     * Returns true if an exam with the same identity as {@code exam} exists in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"    public boolean hasExam(Exam exam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        requireNonNull(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        return exams.contains(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"     * Adds an exam to the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"     * The exam must not already exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"    public void addExam(Exam e) {","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"        exams.add(e);","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"    public void removeExam(Exam key) {","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"        exams.remove(key);","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":138,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":139,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the ObservableList containing the exam object with the given name, if it exists.","lastModifiedDate":"2024-03-29"},{"lineNumber":140,"author":{"gitId":"Zer0Legion"},"content":"     * @param examName The name of the exam to search for.","lastModifiedDate":"2024-03-29"},{"lineNumber":141,"author":{"gitId":"Zer0Legion"},"content":"     * @return An ObservableList containing the exam with the given name, if it exists.","lastModifiedDate":"2024-03-29"},{"lineNumber":142,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":143,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cExam\u003e getExamByName(String examName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":144,"author":{"gitId":"Zer0Legion"},"content":"        for (Exam exam : exams) {","lastModifiedDate":"2024-03-29"},{"lineNumber":145,"author":{"gitId":"Zer0Legion"},"content":"            if (exam.getName().equals(examName)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":146,"author":{"gitId":"Zer0Legion"},"content":"                return FXCollections.observableArrayList(exam);","lastModifiedDate":"2024-03-29"},{"lineNumber":147,"author":{"gitId":"Zer0Legion"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":148,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"Zer0Legion"},"content":"        return FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"                .add(\"exams\", exams)","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cExam\u003e getExamList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"        return exams.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":173,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the ObservableList containing the person object with the given email, if it exists.","lastModifiedDate":"2024-03-29"},{"lineNumber":174,"author":{"gitId":"Zer0Legion"},"content":"     * @param email The email of the person to search for.","lastModifiedDate":"2024-03-29"},{"lineNumber":175,"author":{"gitId":"Zer0Legion"},"content":"     * @return An ObservableList containing the person with the given email, if it exists.","lastModifiedDate":"2024-03-29"},{"lineNumber":176,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":177,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cPerson\u003e getPersonByEmail(String email) {","lastModifiedDate":"2024-03-29"},{"lineNumber":178,"author":{"gitId":"Zer0Legion"},"content":"        for (Person person : persons) {","lastModifiedDate":"2024-03-29"},{"lineNumber":179,"author":{"gitId":"Zer0Legion"},"content":"            if (person.getEmail().toString().equals(email)) {","lastModifiedDate":"2024-03-29"},{"lineNumber":180,"author":{"gitId":"Zer0Legion"},"content":"                return FXCollections.observableArrayList(person);","lastModifiedDate":"2024-03-29"},{"lineNumber":181,"author":{"gitId":"Zer0Legion"},"content":"            }","lastModifiedDate":"2024-03-29"},{"lineNumber":182,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-29"},{"lineNumber":183,"author":{"gitId":"Zer0Legion"},"content":"        return FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":184,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":185,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":197,"author":{"gitId":"delishad21"},"content":"        return persons.equals(otherAddressBook.persons) \u0026\u0026 exams.equals(otherAddressBook.exams);","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":202,"author":{"gitId":"delishad21"},"content":"        return persons.hashCode() + exams.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":48,"Zer0Legion":30,"-":126}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"     * Returns a read-only observable list of persons with the given email, if any.","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"     * @param email The email to get the person by.","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"     * @return A read-only observable list of persons with the given email.","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"    ObservableList\u003cPerson\u003e getPersonByEmail(String email);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"     * Adds an exam score to the given person {@code target},","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"     * maintains immutability. A new person is set into the list with the exam score added","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"     * @param target The person to add the exam score to.","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"     * @param exam The exam to add the score to.","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"     * @param score The score to add.","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    void addExamScoreToPerson(Person target, Exam exam, Score score);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"     * Removes an exam from the given person {@code target},","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"     * maintains immutability. A new person is set into the list with the exam removed","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"     * @param target The person to remove the exam from.","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"     * @param exam The exam to remove.","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"    void removeExamScoreFromPerson(Person target, Exam exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"     * Returns true if an exam with the same identity as {@code exam} exists in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"    boolean hasExam(Exam exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"     * Deletes the given exam.","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"     * The exam must exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"    void deleteExam(Exam target);","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"     * Adds the given exam.","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"     * {@code exam} must not already exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"    void addExam(Exam exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"     * Selects the given exam.","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"     * The exam must exist in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"    void selectExam(Exam target);","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"     * Deselects the selected exam.","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"    void deselectExam();","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"     * Returns the selected exam.","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    ObservableValue\u003cExam\u003e getSelectedExam();","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-29"},{"lineNumber":149,"author":{"gitId":"Zer0Legion"},"content":"     * Returns the exam with the given name.","lastModifiedDate":"2024-03-29"},{"lineNumber":150,"author":{"gitId":"Zer0Legion"},"content":"     * @param examName The name of the exam to get.","lastModifiedDate":"2024-03-29"},{"lineNumber":151,"author":{"gitId":"Zer0Legion"},"content":"     * @return The exam with the given name.","lastModifiedDate":"2024-03-29"},{"lineNumber":152,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-29"},{"lineNumber":153,"author":{"gitId":"Zer0Legion"},"content":"    ObservableList\u003cExam\u003e getExamByName(String examName);","lastModifiedDate":"2024-03-29"},{"lineNumber":154,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"    /** Returns an unmodifiable view of the filtered exam list */","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"    ObservableList\u003cExam\u003e getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"     * Returns the exam score statistics for the given exam.","lastModifiedDate":"2024-03-30"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"    ScoreStatistics getExamScoreStatistics(Exam exam);","lastModifiedDate":"2024-03-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"delishad21":61,"Zer0Legion":14,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    private final SimpleObjectProperty\u003cExam\u003e selectedExam;","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        selectedExam \u003d new SimpleObjectProperty\u003c\u003e(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cPerson\u003e getPersonByEmail(String email) {","lastModifiedDate":"2024-03-29"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"        return addressBook.getPersonByEmail(email);","lastModifiedDate":"2024-03-29"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":128,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"    public void addExamScoreToPerson(Person person, Exam exam, Score score) {","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"        Person newPerson \u003d person.addExamScore(exam, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"        setPerson(person, newPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"    public void removeExamScoreFromPerson(Person person, Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"        Person newPerson \u003d person.removeExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"        setPerson(person, newPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Exam \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"    public boolean hasExam(Exam exam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"        requireNonNull(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        return addressBook.hasExam(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"    public void deleteExam(Exam target) {","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"        addressBook.removeExam(target);","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"delishad21"},"content":"        for (Person person : addressBook.getPersonList()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":187,"author":{"gitId":"delishad21"},"content":"            if (person.hasExamScore(target)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":188,"author":{"gitId":"delishad21"},"content":"                removeExamScoreFromPerson(person, target);","lastModifiedDate":"2024-03-28"},{"lineNumber":189,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-03-28"},{"lineNumber":190,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":191,"author":{"gitId":"delishad21"},"content":"        if (selectedExam.getValue() !\u003d null \u0026\u0026 selectedExam.getValue().equals(target)) {","lastModifiedDate":"2024-03-28"},{"lineNumber":192,"author":{"gitId":"delishad21"},"content":"            deselectExam();","lastModifiedDate":"2024-03-28"},{"lineNumber":193,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":194,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"delishad21"},"content":"    public void addExam(Exam exam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"delishad21"},"content":"        addressBook.addExam(exam);","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cExam\u003e getExamList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"delishad21"},"content":"        return addressBook.getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"delishad21"},"content":"    public void selectExam(Exam target) {","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"delishad21"},"content":"        requireNonNull(target);","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"delishad21"},"content":"        selectedExam.set(target);","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"delishad21"},"content":"    public void deselectExam() {","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"delishad21"},"content":"        selectedExam.set(null);","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"Zer0Legion"},"content":"     * Returns a view of the selected exam. (For updating UI purposes)","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"delishad21"},"content":"    public ObservableValue\u003cExam\u003e getSelectedExam() {","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"delishad21"},"content":"        return selectedExam;","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"delishad21"},"content":"    public ScoreStatistics getExamScoreStatistics(Exam exam) {","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"delishad21"},"content":"        List\u003cScore\u003e scores \u003d filteredPersons.stream()","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"delishad21"},"content":"            .map(person -\u003e person.getScores().get(exam))","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"delishad21"},"content":"            .filter(Objects::nonNull)","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"delishad21"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"delishad21"},"content":"        if (scores.isEmpty()) {","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"delishad21"},"content":"            return new ScoreStatistics();","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"delishad21"},"content":"        Collections.sort(scores);","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"delishad21"},"content":"        double sum \u003d scores.stream().mapToDouble(Score::getScore).sum();","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"delishad21"},"content":"        double mean \u003d sum / scores.size(); //Division by zero is handled by the if statement above","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"delishad21"},"content":"        double median;","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"delishad21"},"content":"        if (scores.size() % 2 \u003d\u003d 0) {","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"delishad21"},"content":"            median \u003d (scores.get(scores.size() / 2 - 1).getScore()","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"delishad21"},"content":"                        + scores.get(scores.size() / 2).getScore()) / 2.0;","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"delishad21"},"content":"            median \u003d scores.get(scores.size() / 2).getScore();","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"        double min \u003d scores.get(0).getScore();","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"delishad21"},"content":"        double max \u003d scores.get(scores.size() - 1).getScore();","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"delishad21"},"content":"        double q1 \u003d scores.get(scores.size() / 4).getScore();","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"delishad21"},"content":"        double q3 \u003d scores.get(3 * scores.size() / 4).getScore();","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"delishad21"},"content":"        return new ScoreStatistics(mean, median);","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":259,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cExam\u003e getExamByName(String examName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":260,"author":{"gitId":"Zer0Legion"},"content":"        return addressBook.getExamByName(examName);","lastModifiedDate":"2024-03-29"},{"lineNumber":261,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":262,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":104,"Pughal77":1,"Zer0Legion":10,"-":148}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Returns an unmodifiable view of the exams list.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    ObservableList\u003cExam\u003e getExamList();","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":7,"-":17}},{"path":"src/main/java/seedu/address/model/ScoreStatistics.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * Represents the statistics of a list of scores.","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"public class ScoreStatistics {","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"    private final double mean;","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    private final double median;","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"     * Constructs a {@code ScoreStatistics} object with the given statistics.","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public ScoreStatistics(double mean, double median) {","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        this.mean \u003d mean;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        this.median \u003d median;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * Constructs a {@code ScoreStatistics} object with no scores available.","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public ScoreStatistics() {","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        this.mean \u003d -1;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        this.median \u003d -1;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public double getMean() {","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        return mean;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public double getMedian() {","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        return median;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        if (mean \u003d\u003d -1) {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"            return \"No scores available\";","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        return \"Mean: \" + mean","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                + \", Median: \" + median;","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"delishad21":42}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"avengersassemble.json\");","lastModifiedDate":"2024-03-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs otherUserPrefs \u003d (UserPrefs) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(otherUserPrefs.guiSettings)","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(otherUserPrefs.addressBookFilePath);","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zer0Legion":1,"-":87}},{"path":"src/main/java/seedu/address/model/exam/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":" * Represents an Exam in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class Exam {","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Names should only contain alphanumeric characters and spaces, \"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"                                                      + \"and it should not be blank. \"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"                                                      + \"Exam Score must be greater than zero\";","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"     * The rest of the string can contain any alphanumeric character and spaces.","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    public final String name;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public final Score maxScore;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     * Constructs an {@code Exam}.","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * @param name A valid name.","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * @param maxScore A valid max score.","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public Exam(String name, Score maxScore) {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        requireNonNull(name);","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        this.maxScore \u003d maxScore;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    public String getName() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        return name;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    public Score getMaxScore() {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        return maxScore;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * Returns true if both exams have the same name.","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     * This defines a weaker notion of equality between two exams.","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public boolean isSameExam(Exam otherExam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        if (otherExam \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        return otherExam !\u003d null","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 otherExam.getName().equals(getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"     * Returns if a given string is a valid name.","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    public static boolean isValidExamScore(int test) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        return test \u003e 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        return name + \": \" + maxScore;","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof Exam)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        Exam otherExam \u003d (Exam) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        return name.equals(otherExam.name)","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 maxScore.equals(otherExam.maxScore);","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        return name.hashCode() + maxScore.hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":96}},{"path":"src/main/java/seedu/address/model/exam/UniqueExamList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.exceptions.DuplicateExamException;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.exceptions.ExamNotFoundException;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * A list of exams that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class UniqueExamList implements Iterable\u003cExam\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private final ObservableList\u003cExam\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private final ObservableList\u003cExam\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     * Returns true if the list contains an equivalent exam as the given argument.","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public boolean contains(Exam toCheck) {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        return internalList.stream().anyMatch(toCheck::isSameExam);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     * Adds an exam to the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"     * The exam must not already exist in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public void add(Exam toAdd) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            throw new DuplicateExamException();","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"     * Replaces the exam {@code target} in the list with {@code editedExam}.","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    public void setExam(Exam target, Exam editedExam) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        requireAllNonNull(target, editedExam);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            throw new ExamNotFoundException();","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        if (!target.isSameExam(editedExam) \u0026\u0026 contains(editedExam)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"            throw new DuplicateExamException();","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        internalList.set(index, editedExam);","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"     * Removes the equivalent exam from the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"     * The exam must exist in the list.","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    public void remove(Exam toRemove) {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"            throw new ExamNotFoundException();","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"     * Replaces the contents of this list with {@code exams}.","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    public void setExams(UniqueExamList replacement) {","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"    public void setExams(List\u003cExam\u003e exams) {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        requireAllNonNull(exams);","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        if (!examsAreUnique(exams)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"            throw new DuplicateExamException();","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"        internalList.setAll(exams);","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cExam\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"    public Iterator\u003cExam\u003e iterator() {","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof UniqueExamList)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"        UniqueExamList otherUniqueExamList \u003d (UniqueExamList) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"        return internalList.equals(otherUniqueExamList.internalList);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"     * Returns true if the list contains only unique exams.","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"    private boolean examsAreUnique(List\u003cExam\u003e exams) {","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"        for (int i \u003d 0; i \u003c exams.size() - 1; i++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"            for (int j \u003d i + 1; j \u003c exams.size(); j++) {","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"                if (exams.get(i).isSameExam(exams.get(j))) {","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"                    return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"                }","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"        return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":138}},{"path":"src/main/java/seedu/address/model/exam/exceptions/DuplicateExamException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam.exceptions;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * Signals that the operation will result in duplicate Exams (Exams are considered duplicates if they have the same","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" * identity).","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"public class DuplicateExamException extends RuntimeException {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    public DuplicateExamException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"        super(\"Operation would result in duplicate Exams\");","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":11}},{"path":"src/main/java/seedu/address/model/exam/exceptions/ExamNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam.exceptions;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":" * Signals that the operation is unable to find the specified exam.","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"public class ExamNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":6}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!(other instanceof Email)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Email otherEmail \u003d (Email) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        return value.equalsIgnoreCase(otherEmail.value);","lastModifiedDate":"2024-03-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"danielleloh":1,"-":78}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"    private final Matric matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"    private final Reflection reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    private final Studio studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    private final HashMap\u003cExam, Score\u003e scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"    public Person(Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"                  Set\u003cTag\u003e tags, Matric matric, Reflection reflection ,","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"                  Studio studio, Map\u003cExam, Score\u003e scores) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        requireAllNonNull(name, phone, email, address, tags, matric, studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"        this.matric \u003d matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"        this.reflection \u003d reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        this.studio \u003d studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        this.scores.putAll(scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"    public Matric getMatric() {","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"        return matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    public Studio getStudio() {","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        return studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"    public Reflection getReflection() {","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"        return reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"     * Returns an immutable score set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"     * if modification is attempted.","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    public Map\u003cExam, Score\u003e getScores() {","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        return new HashMap\u003c\u003e(scores);","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"     * Returns true if the person has the given exam in the scores.","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"    public boolean hasExamScore(Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        return scores.containsKey(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"     * Returns a new Person with the given exam added to the scores, maintains immutability.","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    public Person removeExam(Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e newScores \u003d new HashMap\u003c\u003e(scores);","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"        newScores.remove(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        return new Person(name, phone, email, address, tags, matric, reflection, studio, newScores);","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"     * Returns a new Person with the given exam added to the scores, maintains immutability.","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"    public Person addExamScore(Exam exam, Score score) {","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e newScores \u003d new HashMap\u003c\u003e(scores);","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"        newScores.put(exam, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"        return new Person(name, phone, email, address, tags, matric, reflection, studio, newScores);","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2024-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":161,"author":{"gitId":"Zer0Legion"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags)","lastModifiedDate":"2024-03-06"},{"lineNumber":162,"author":{"gitId":"jayllo-c"},"content":"                \u0026\u0026 matric.equals(otherPerson.matric)","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"jayllo-c"},"content":"                \u0026\u0026 reflection.equals(otherPerson.reflection)","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 studio.equals(otherPerson.studio)","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"                \u0026\u0026 scores.equals(otherPerson.scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"        return Objects.hash(name, phone, email, address, tags, matric, reflection, studio, scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"Zer0Legion"},"content":"                .add(\"matriculation number\", matric)","lastModifiedDate":"2024-03-06"},{"lineNumber":183,"author":{"gitId":"jayllo-c"},"content":"                .add(\"reflection\", reflection)","lastModifiedDate":"2024-03-17"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"                .add(\"studio\", studio)","lastModifiedDate":"2024-03-14"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"                .add(\"scores\", scores)","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"danielleloh":1,"delishad21":56,"Zer0Legion":9,"jayllo-c":11,"-":111}},{"path":"src/main/java/seedu/address/model/person/PersonDetailContainsKeywordAndExamPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MORETHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":" * Tests that a {@code Person}\u0027s details contains the keyword given.","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"public class PersonDetailContainsKeywordAndExamPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    private final Prefix prefix;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"    private final Exam exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"     * Constructor for the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"     * @param prefix The prefix to indicate the detail of the person to be searched.","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"     * @param keyword The keyword to be searched.","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    public PersonDetailContainsKeywordAndExamPredicate(Prefix prefix, String keyword, Exam exam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"        this.exam \u003d exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"     * Tests if the person\u0027s details contain the keyword.","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"        if (PREFIX_LESSTHAN.equals(prefix)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"            if (person.getScores().containsKey(exam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"                return Double.parseDouble(person.getScores().get(exam).toString())","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"                        \u003c Double.parseDouble(keyword);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"                // Handle case when the selected exam is not found in the person\u0027s scores","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"                return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"        } else if (PREFIX_MORETHAN.equals(prefix)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"            if (person.getScores().containsKey(exam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"                return Double.parseDouble(person.getScores().get(exam).toString())","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"                        \u003e Double.parseDouble(keyword);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"            } else {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"                // Handle case when the selected exam is not found in the person\u0027s scores","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"                return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"            // Code should not reach here","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"     * Checks if the current PersonDetailContainsKeywordPredicate is equal to another object.","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"            return true;","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"        if (!(other instanceof PersonDetailContainsKeywordAndExamPredicate)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"            return false;","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate otherPredicate \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"            (PersonDetailContainsKeywordAndExamPredicate) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"        return keyword.equals(otherPredicate.keyword) \u0026\u0026 prefix.equals(otherPredicate.prefix)","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"                \u0026\u0026 exam.equals(otherPredicate.exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"     * Returns the string representation of the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"        return new ToStringBuilder(this).add(\"prefix\", prefix.getPrefix())","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"                .add(\"keyword\", keyword)","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"                .add(\"exam\", exam).toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"     * Checks if the prefix requires an exam to be selected.","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"     * @return True if the prefix is PREFIX_LESSTHAN or PREFIX_GREATERTHAN.","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"    public boolean isExamRequired() {","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"        return prefix.equals(PREFIX_LESSTHAN) || prefix.equals(PREFIX_MORETHAN);","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"jayllo-c":97}},{"path":"src/main/java/seedu/address/model/person/PersonDetailContainsKeywordPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MORETHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-03"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":" * Tests that a {@code Person}\u0027s details contains the keyword given.","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"public class PersonDetailContainsKeywordPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    private final Prefix prefix;","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    private final String keyword;","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * Constructor for the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * @param prefix The prefix to indicate the detail of the person to be searched.","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     * @param keyword The keyword to be searched.","lastModifiedDate":"2024-03-03"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public PersonDetailContainsKeywordPredicate(Prefix prefix, String keyword) {","lastModifiedDate":"2024-03-03"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2024-03-03"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * Tests if the person\u0027s details contain the keyword.","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        if (PREFIX_NAME.equals(prefix)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            return StringUtil.containsSubstringIgnoreCase(person.getName().fullName, keyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        } else if (PREFIX_PHONE.equals(prefix)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            return StringUtil.containsSubstringIgnoreCase(person.getPhone().value, keyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        } else if (PREFIX_EMAIL.equals(prefix)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            return StringUtil.containsSubstringIgnoreCase(person.getEmail().value, keyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        } else if (PREFIX_ADDRESS.equals(prefix)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"            return StringUtil.containsSubstringIgnoreCase(person.getAddress().value, keyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        } else if (PREFIX_TAG.equals(prefix)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            return person.getTags().stream()","lastModifiedDate":"2024-03-03"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"                         .anyMatch(tag -\u003e StringUtil.containsSubstringIgnoreCase(tag.tagName, keyword));","lastModifiedDate":"2024-03-03"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"        } else if (PREFIX_MATRIC_NUMBER.equals(prefix)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"            return StringUtil.containsSubstringIgnoreCase(person.getMatric().matricNumber, keyword);","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"        } else if (PREFIX_REFLECTION.equals(prefix)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"            return StringUtil.equalsIgnoreCase(person.getReflection().reflection, keyword);","lastModifiedDate":"2024-03-30"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        } else if (PREFIX_STUDIO.equals(prefix)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"            return StringUtil.equalsIgnoreCase(person.getStudio().studio, keyword);","lastModifiedDate":"2024-03-30"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"            // Code should not reach here","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"     * Checks if the current PersonDetailContainsKeywordPredicate is equal to another object.","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof PersonDetailContainsKeywordPredicate)) {","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate otherPredicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"            (PersonDetailContainsKeywordPredicate) other;","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        return keyword.equals(otherPredicate.keyword) \u0026\u0026 prefix.equals(otherPredicate.prefix);","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"     * Returns the string representation of the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        return new ToStringBuilder(this).add(\"prefix\", prefix.getPrefix())","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"                                        .add(\"keyword\", keyword).toString();","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"     * Checks if the prefix requires an exam to be selected.","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"     * @return True if the prefix is PREFIX_LESSTHAN or PREFIX_GREATERTHAN.","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"    public boolean isExamRequired() {","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"        return prefix.equals(PREFIX_LESSTHAN) || prefix.equals(PREFIX_MORETHAN);","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"     * Gets the keyword of the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"     * @return The keyword of the PersonDetailContainsKeywordPredicate.","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"    public String getKeyword() {","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"jayllo-c"},"content":"        return keyword;","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"     * Returns a PersonDetailContainsKeyword\u0026ExamPredicate with the same keyword and prefix.","lastModifiedDate":"2024-03-26"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"     * @param exam The exam to be searched.","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"jayllo-c"},"content":"     * @return A PersonDetailContainsKeyword\u0026ExamPredicate with the same keyword and prefix.","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"    public PersonDetailContainsKeywordAndExamPredicate withExam(Exam exam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"        return new PersonDetailContainsKeywordAndExamPredicate(prefix, keyword, exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"delishad21":83,"jayllo-c":37}},{"path":"src/main/java/seedu/address/model/person/Score.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" * Represents an Exam\u0027s score in the address book.","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidScore(String)}","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class Score implements Comparable\u003cScore\u003e {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"            \"Scores should be numeric, and it should not be blank or less than zero.\";","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    /*","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"     * The score must be a non-negative integer.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public final int value;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"     * Constructs a {@code Score}.","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"     * @param score A valid score.","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public Score(int score) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        requireNonNull(score);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        checkArgument(isValidScore(score), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        this.value \u003d score;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"     * Returns true if a given string is a valid score.","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public static boolean isValidScore(int test) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        return test \u003e\u003d 0;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    public int getScore() {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        return value;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        return String.valueOf(value);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        if (!(other instanceof Score)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        Score otherScore \u003d (Score) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        return value \u003d\u003d otherScore.value;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        return Integer.hashCode(value);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public int compareTo(Score other) {","lastModifiedDate":"2024-03-30"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        return Integer.compare(this.value, other.value);","lastModifiedDate":"2024-03-30"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":74}},{"path":"src/main/java/seedu/address/model/student/Matric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"/**","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":" * Represents a Matriculation Number in the address book.","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidMatric(String)}","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":" */","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"public class Matric {","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Matriculation numbers in the style of A1234567Z are accepted.\"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"            + \"The first character must be \u0027A\u0027,\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"            + \"followed by 7 digits and ending with an uppercase letter.\";","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALIDATION_REGEX \u003d \"A[0-9]{7}[A-Z]\";","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"    public final String matricNumber;","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"     * Constructs a {@code Matric}.","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"     * @param matricNumber A valid matriculation number.","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"    public Matric(String matricNumber) {","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"        requireNonNull(matricNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"        checkArgument(isValidConstructorParam(matricNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"        this.matricNumber \u003d matricNumber;","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"     * Returns true if a given string is a valid matriculation number for constructing a new Matric.","lastModifiedDate":"2024-03-07"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"     * @param matricNumber String to be tested","lastModifiedDate":"2024-03-07"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"     * @return true if the string is a valid matriculation number","lastModifiedDate":"2024-03-07"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    public static boolean isValidConstructorParam(String matricNumber) {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"        return isValidMatric(matricNumber) || isEmptyMatric(matricNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"     * Returns true if a given string is an empty matriculation number. Only used when the prefix","lastModifiedDate":"2024-03-07"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"     * for matric is absent from a user command.","lastModifiedDate":"2024-03-07"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"     * @param matricNumber String to be tested","lastModifiedDate":"2024-03-07"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"     * @return true if the string is an empty matriculation number","lastModifiedDate":"2024-03-07"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"    public static boolean isEmptyMatric(String matricNumber) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"        return matricNumber.isBlank();","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"     * Returns true if a given string is a valid matriculation number.","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"     * @return true if the string is a valid matriculation number","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"    public static boolean isValidMatric(String test) {","lastModifiedDate":"2024-03-07"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"            return true;","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"        if (!(object instanceof Matric)) {","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"            return false;","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"        Matric otherMatric \u003d (Matric) object;","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"        return matricNumber.equals(otherMatric.matricNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"        return matricNumber.hashCode();","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"     * @return String representation of the matriculation number","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"    public String toString() {","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"        return isEmptyMatric(matricNumber) ? \"\" : matricNumber;","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"delishad21":1,"Zer0Legion":76,"jayllo-c":2}},{"path":"src/main/java/seedu/address/model/student/Reflection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"/**","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":" * Represents a Reflection in the address book.","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidReflection(String)}","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":" */","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"public class Reflection {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Reflections in the style of R1.. are accepted.\"","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"            + \" The first character must be \\\"R\\\",\"","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"            + \" followed by a number of digits.\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"    public static final String VALIDATION_REGEX \u003d \"R\\\\d+\";","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"    public final String reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"     * Constructs a {@code Reflection}.","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"     * @param reflection A valid reflection.","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"    public Reflection(String reflection) {","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"        requireNonNull(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"        checkArgument(isValidConstructorParam(reflection), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"        this.reflection \u003d reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"     * Returns true if a given string is a valid reflection for constructing a new Reflection.","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"     * @return true if the string is a valid reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    public static boolean isValidConstructorParam(String test) {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"        return isValidReflection(test) || isEmptyReflection(test);","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"     * Returns true if a given string is a valid reflection for constructing a new Reflection.","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"     * @return true if the string is an empty reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"    public static boolean isEmptyReflection(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"        return test.isBlank();","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"     * Returns true if a given string is a valid reflection.","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"     * @return true if the string is a valid reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"    public static boolean isValidReflection(String test) {","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"            return true;","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"        if (!(object instanceof Reflection)) {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"            return false;","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        Reflection otherReflection \u003d (Reflection) object;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        return otherReflection.reflection.equals(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"     * Returns the hashcode of the reflection.","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"        return reflection.hashCode();","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"     * Returns the reflection in string format.","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"    @Override","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"    public String toString() {","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"        return reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"jayllo-c":81}},{"path":"src/main/java/seedu/address/model/student/Studio.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":" * Represents a Student\u0027s studio in the address book.","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStudio(String)}","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class Studio {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Studios in the style of S12.. are accepted.\"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"            + \"The first character must be \\\"S\\\",\"","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"            + \"followed by any number of digits.\";","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    public static final String VALIDATION_REGEX \u003d \"S\\\\d+\";","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public final String studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     * Constructs a {@code Studio}.","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     * @param studio A valid studio.","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public Studio(String studio) {","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        requireNonNull(studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        checkArgument(isValidConstructorParam(studio), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        this.studio \u003d studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"     * Returns true if a given string is a valid studio for constructing a new Studio.","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * @param test","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * @return","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    public static boolean isValidConstructorParam(String test) {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        return isValidStudio(test) || isEmptyStudio(test);","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"     * Returns true if a given string is an empty studio. Only used when the prefix","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"     * for studio is absent from a user command.","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     * @return true if the string is an empty studio","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"    public static boolean isEmptyStudio(String test) {","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        return test.isBlank();","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"     * Returns true if a given string is a valid studio.","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"     * @param test String to be tested","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * @return true if the string is a valid studio","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public static boolean isValidStudio(String test) {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    public boolean equals(Object object) {","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        if (object \u003d\u003d this) {","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            return true;","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        if (!(object instanceof Studio)) {","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"            return false;","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        Studio otherStudio \u003d (Studio) object;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        return studio.equals(otherStudio.studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"     * Returns the hashcode of the studio","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        return studio.hashCode();","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"     * Returns the studio in string format.","lastModifiedDate":"2024-03-14"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    public String toString() {","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        return studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"delishad21":83,"Zer0Legion":1,"jayllo-c":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\", \"student\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"                    new Matric(\"A1111111X\"), new Reflection(\"R1\"), new Studio(\"S1\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"                    getTagSet(\"colleagues\", \"friends\", \"student\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"                    new Matric(\"A2222222X\"), new Reflection(\"R2\"), new Studio(\"S2\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"neighbours\", \"student\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"                    new Matric(\"A3333333X\"), new Reflection(\"R9\"), new Studio(\"S3\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"                    getTagSet(\"family\", \"student\"), new Matric(\"A4444444X\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"                    new Reflection(\"R3\"), new Studio(\"S4\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"                    getTagSet(\"classmates\", \"TA\"), new Matric(\"A5555555X\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"                    new Reflection(\"R4\"), new Studio(\"\"), new HashMap\u003c\u003e()),","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"                    getTagSet(\"colleagues\", \"instructor\"), new Matric(\"\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"                    new Reflection(\"\"), new Studio(\"\"), new HashMap\u003c\u003e())","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"delishad21":2,"Zer0Legion":12,"jayllo-c":2,"-":52}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"class JsonAdaptedExam {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"    private final String name;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"    private final String maxScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"     * Constructs a {@code JsonAdaptedExam} with the given {@code name}.","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"    public JsonAdaptedExam(@JsonProperty(\"name\") String name, @JsonProperty(\"score\") String maxScore) {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"        this.maxScore \u003d maxScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"        name \u003d source.getName();","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"        maxScore \u003d source.getMaxScore().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"    public String getname() {","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"        return name;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"    public String getMaxScore() {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"        return maxScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"     *","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"    public Exam toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"        if (!Exam.isValidName(name)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Pughal77"},"content":"            throw new IllegalValueException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"        return new Exam(name, new Score(Integer.parseInt(maxScore)));","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Pughal77":50}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExamScore.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":" * Jackson-friendly version of {@link Exam}.","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class JsonAdaptedExamScore {","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    private final String examName;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    private final int examMaxScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    private final int score;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"     * Constructs a {@code JsonAdaptedExamScore} with the given exam details.","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    public JsonAdaptedExamScore(@JsonProperty(\"examName\") String examName,","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"                                @JsonProperty(\"examMaxScore\") int examMaxScore,","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"                                @JsonProperty(\"score\") int score) {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        this.examName \u003d examName;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        this.examMaxScore \u003d examMaxScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        this.score \u003d score;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     * Converts a given {@code Exam} into this class for Jackson use.","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public JsonAdaptedExamScore(Exam source, Score score) {","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        examName \u003d source.getName();","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        examMaxScore \u003d source.getMaxScore().getScore();","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        this.score \u003d score.getScore();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"     * Converts a given {@code Exam} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    public Exam toModelTypeExam() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"        if (!Exam.isValidName(examName) || !Exam.isValidExamScore(score)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            throw new IllegalValueException(Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        return new Exam(examName, new Score(examMaxScore));","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"     * Converts a given {@code Score} into this class for Jackson use.","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public Score toModelTypeScore() throws IllegalValueException {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        if (!Score.isValidScore(score)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            throw new IllegalValueException(Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        return new Score(score);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"delishad21":56,"Pughal77":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"    private final String matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"    private final String reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    private final String studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    private final List\u003cJsonAdaptedExamScore\u003e examScores \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags, @JsonProperty(\"matric\") String matric,","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"            @JsonProperty(\"reflection\") String reflection,","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"            @JsonProperty(\"studio\") String studio,","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            @JsonProperty(\"examScores\") List\u003cJsonAdaptedExamScore\u003e examScores) {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"        this.matric \u003d matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        this.reflection \u003d reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        this.studio \u003d studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        if (examScores !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            this.examScores.addAll(examScores);","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"        matric \u003d source.getMatric().matricNumber;","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"        reflection \u003d source.getReflection().reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        studio \u003d source.getStudio().studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        examScores.addAll(source.getScores().entrySet().stream()","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"                .map(entry -\u003e new JsonAdaptedExamScore(entry.getKey().getName(),","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"                                                       entry.getKey().getMaxScore().getScore(),","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"                                                       entry.getValue().getScore()))","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        final Map\u003cExam, Score\u003e personExamScores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        for (JsonAdaptedExamScore examScore : examScores) {","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"            personExamScores.put(examScore.toModelTypeExam(), examScore.toModelTypeScore());","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"jayllo-c"},"content":"        if (!Matric.isValidConstructorParam(matric)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"jayllo-c"},"content":"            throw new IllegalValueException(Matric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"jayllo-c"},"content":"        if (!Reflection.isValidConstructorParam(reflection)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"jayllo-c"},"content":"            throw new IllegalValueException(Reflection.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"jayllo-c"},"content":"        if (!Studio.isValidConstructorParam(studio)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"            throw new IllegalValueException(Studio.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-14"},{"lineNumber":145,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":150,"author":{"gitId":"Zer0Legion"},"content":"        final Matric modelMatric \u003d new Matric(matric);","lastModifiedDate":"2024-03-06"},{"lineNumber":151,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"jayllo-c"},"content":"        final Reflection modelReflection \u003d new Reflection(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"        final Studio modelStudio \u003d new Studio(studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        final Map\u003cExam, Score\u003e scores \u003d new HashMap\u003c\u003e(personExamScores);","lastModifiedDate":"2024-03-26"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"jayllo-c"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"                          modelTags, modelMatric, modelReflection, modelStudio, scores);","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"delishad21":31,"Zer0Legion":6,"jayllo-c":18,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"    public static final String MESSAGE_DUPLICATE_EXAM \u003d \"Exams list contains duplicate exam(s).\";","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"    private final List\u003cJsonAdaptedExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"    public JsonSerializableAddressBook(","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"            @JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"            @JsonProperty(\"exams\") List\u003cJsonAdaptedExam\u003e exams) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"        this.exams.addAll(exams);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"        exams.addAll(source.getExamList().stream().map(JsonAdaptedExam::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Pughal77"},"content":"        for (JsonAdaptedExam jsonAdaptedExam : exams) {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Pughal77"},"content":"            Exam exam \u003d jsonAdaptedExam.toModelType();","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"Pughal77"},"content":"            if (addressBook.hasExam(exam)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Pughal77"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EXAM);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Pughal77"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Pughal77"},"content":"            addressBook.addExam(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Pughal77"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Pughal77":15,"-":59}},{"path":"src/main/java/seedu/address/ui/ExamCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":" * An UI component that displays information of a {@code Exam}.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"public class ExamCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    private static final String FXML \u003d \"ExamListCard.fxml\";","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public final Exam exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private HBox examCardPane;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    private Label name;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    private Label id;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    private Label maxScore;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"     * Creates a {@code ExamCard} with the given {@code Exam} and index to display.","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public ExamCard(Exam exam, int displayedIndex, ObservableValue\u003cExam\u003e selectedExam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        super(FXML);","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        this.exam \u003d exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        name.setText(exam.getName());","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        maxScore.setText(String.valueOf(exam.getMaxScore()));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        if (this.exam.equals(selectedExam.getValue())) {","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            highlight();","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"            removeHighlight();","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    public void highlight() {","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        examCardPane.setStyle(\"-fx-background-color: #3884a1;\");","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    public void removeHighlight() {","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        examCardPane.setStyle(\"-fx-background-color: transparent;\");","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":52}},{"path":"src/main/java/seedu/address/ui/ExamListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":" * Panel containing the list of exams.","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class ExamListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    private static final String FXML \u003d \"ExamListPanel.fxml\";","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ExamListPanel.class);","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    private ListView\u003cExam\u003e examListView;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    private ObservableValue\u003cExam\u003e selectedExam;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"     * Creates a {@code ExamListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public ExamListPanel(ObservableList\u003cExam\u003e examList, ObservableValue\u003cExam\u003e selectedExam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        super(FXML);","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        examListView.setItems(examList);","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        examListView.setCellFactory(listView -\u003e new ExamListViewCell());","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        examListView.setSelectionModel(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        this.selectedExam \u003d selectedExam;","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public void update() {","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        examListView.refresh();","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Exam} using a {@code ExamCard}.","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    class ExamListViewCell extends ListCell\u003cExam\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        protected void updateItem(Exam exam, boolean empty) {","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"            super.updateItem(exam, empty);","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            if (empty || exam \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"                setText(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"                setGraphic(new ExamCard(exam, getIndex() + 1, selectedExam).getRoot());","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":57}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2324s2-cs2103t-t10-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"delishad21":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    private ExamListPanel examListPanel;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    private StatusBarFooter statusBarFooter;","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    private StackPane examListPanelPlaceholder;","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getSelectedExam());","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"        examListPanel \u003d new ExamListPanel(logic.getExamList(), logic.getSelectedExam());","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"        examListPanelPlaceholder.getChildren().add(examListPanel.getRoot());","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"        statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath(), logic);","lastModifiedDate":"2024-03-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"delishad21"},"content":"            personListPanel.update();","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"delishad21"},"content":"            examListPanel.update();","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"delishad21"},"content":"            statusBarFooter.update();","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"delishad21":16,"-":194}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"    @FXML","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    private VBox classes;","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    private Label matric;","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    private VBox examScore;","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    private ImageView phoneicon;","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    private ImageView emailicon;","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    private ImageView addressicon;","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    private Image phoneIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/phoneicon.png\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    private Image emailIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/emailicon.png\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    private Image addressIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/addressicon.png\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public PersonCard(Person person, int displayedIndex, ObservableValue\u003cExam\u003e selectedExam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"        matric.setText(person.getMatric().toString());","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"        if (matric.getText().isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"            matric.setVisible(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"            matric.setManaged(false);","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        if (!person.getReflection().toString().isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"            classes.getChildren().add(new Label(person.getReflection().toString()));","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        if (!person.getStudio().toString().isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"            classes.getChildren().add(new Label(person.getStudio().toString()));","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        // Update exam score whenever new personcard is created","lastModifiedDate":"2024-03-30"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"        populateExamScore(selectedExam.getValue());","lastModifiedDate":"2024-03-30"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        phoneicon.setImage(phoneIcon);","lastModifiedDate":"2024-03-30"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        emailicon.setImage(emailIcon);","lastModifiedDate":"2024-03-30"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"        addressicon.setImage(addressIcon);","lastModifiedDate":"2024-03-30"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"     * Populates the exam score of the person.","lastModifiedDate":"2024-03-30"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"    public void populateExamScore(Exam selectedExamValue) {","lastModifiedDate":"2024-03-30"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        if (selectedExamValue !\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"            Score score \u003d person.getScores().get(selectedExamValue);","lastModifiedDate":"2024-03-30"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"            if (score !\u003d null) {","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"                examScore.getChildren().add(new Label(\"Score: \\n\" + String.valueOf(score.getScore())));","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"            }","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"delishad21":48,"Zer0Legion":2,"jayllo-c":5,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    private ObservableValue\u003cExam\u003e selectedExam;","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ObservableValue\u003cExam\u003e selectedExam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        personListView.setSelectionModel(null);","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        this.selectedExam \u003d selectedExam;","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void update() {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        personListView.refresh();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, selectedExam).getRoot());","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"delishad21":9,"-":49}},{"path":"src/main/java/seedu/address/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @FXML","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    private Label gradeStatistics;","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    private Logic logic;","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public StatusBarFooter(Path saveLocation, Logic logic) {","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-30"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"     * Updates the status bar to display the grade statistics of the selected exam.","lastModifiedDate":"2024-03-30"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void update() {","lastModifiedDate":"2024-03-30"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        Exam selectedExam \u003d logic.getSelectedExam().getValue();","lastModifiedDate":"2024-03-30"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        if (selectedExam \u003d\u003d null) {","lastModifiedDate":"2024-03-30"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"            gradeStatistics.setText(\"\");","lastModifiedDate":"2024-03-30"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        } else {","lastModifiedDate":"2024-03-30"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            gradeStatistics.setText(logic.getExamScoreStatistics(selectedExam).toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":19,"-":27}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"    background-color: #1f2b37; /* Used in the default.html file */","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    -fx-base: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    -fx-control-inner-background: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #36465b;","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #273545;","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"     -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"     -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"     -fx-border-color: derive(#1d2935, 10%);","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 30%);","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 30%);","lastModifiedDate":"2024-03-23"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"    -fx-border-color: derive(#1d2935, 25%);","lastModifiedDate":"2024-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 30%);","lastModifiedDate":"2024-03-23"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"    -fx-border-color: derive(#1d2935, 30%);","lastModifiedDate":"2024-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 30%);","lastModifiedDate":"2024-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 50%);","lastModifiedDate":"2024-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"delishad21"},"content":"  -fx-text-fill: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #1d2935;","lastModifiedDate":"2024-03-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 25%);","lastModifiedDate":"2024-03-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 50%);","lastModifiedDate":"2024-03-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: transparent #1f2b37 transparent #1f2b37;","lastModifiedDate":"2024-03-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"delishad21"},"content":"    -fx-border-color: #1f2b37 #1f2b37 #ffffff #1f2b37;","lastModifiedDate":"2024-03-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: transparent, #1f2b37, transparent, #1f2b37;","lastModifiedDate":"2024-03-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"delishad21"},"content":"    -fx-padding: 3 6 3 6;","lastModifiedDate":"2024-03-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":354,"author":{"gitId":"delishad21"},"content":"#classes {","lastModifiedDate":"2024-03-23"},{"lineNumber":355,"author":{"gitId":"delishad21"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2024-03-23"},{"lineNumber":356,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-23"},{"lineNumber":357,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":358,"author":{"gitId":"delishad21"},"content":"#classes .label {","lastModifiedDate":"2024-03-23"},{"lineNumber":359,"author":{"gitId":"delishad21"},"content":"    -fx-font-size: 14;","lastModifiedDate":"2024-03-23"},{"lineNumber":360,"author":{"gitId":"delishad21"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-23"},{"lineNumber":361,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: #5c5c5c;","lastModifiedDate":"2024-03-23"},{"lineNumber":362,"author":{"gitId":"delishad21"},"content":"    -fx-padding: 10 20 10 20;","lastModifiedDate":"2024-03-23"},{"lineNumber":363,"author":{"gitId":"delishad21"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-23"},{"lineNumber":364,"author":{"gitId":"delishad21"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2024-03-23"},{"lineNumber":365,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"delishad21":46,"-":319}},{"path":"src/main/resources/view/ExamListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"examCardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"         \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"7.5\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$exam_name\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"               \u003cLabel text\u003d\"Max Score: \" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            \u003cLabel fx:id\u003d\"maxScore\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$maxScore\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":42}},{"path":"src/main/resources/view/ExamListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"  \u003cListView fx:id\u003d\"examListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"delishad21":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"    -fx-background: #1f2b37;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":1,"-":19}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    -fx-background-color: derive(#1d2935, 20%);","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"delishad21":1,"-":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"\u003cfx:root minHeight\u003d\"300.0\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Avengers Assemble\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"            \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"                  \u003cVBox fx:id\u003d\"examList\" minWidth\u003d\"250.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"250.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"                        \u003cStackPane fx:id\u003d\"examListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"                                      \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"500.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"                  \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"               \u003c/children\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"              \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"delishad21":21,"-":50}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"  \u003cGridPane HBox.hgrow\u003d\"SOMETIMES\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"         \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"95.0\" minWidth\u003d\"10.0\" prefWidth\u003d\"70.0\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"         \u003cColumnConstraints hgrow\u003d\"NEVER\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"10.0\" prefWidth\u003d\"90.0\" /\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" spacing\u003d\"7.5\" GridPane.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"               \u003cImageView fx:id\u003d\"phoneicon\" fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"               \u003cImageView fx:id\u003d\"addressicon\" fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"               \u003cImageView fx:id\u003d\"emailicon\" fitHeight\u003d\"18.0\" fitWidth\u003d\"18.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            \u003c/children\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"      \u003cLabel fx:id\u003d\"matric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$matric\" /\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"      \u003cVBox fx:id\u003d\"examScore\" alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" GridPane.columnIndex\u003d\"1\" GridPane.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"      \u003cVBox fx:id\u003d\"classes\" alignment\u003d\"CENTER\" minHeight\u003d\"105.0\" spacing\u003d\"10.0\" GridPane.columnIndex\u003d\"2\" GridPane.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            \u003cInsets right\u003d\"7.5\" /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"         \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":34,"Zer0Legion":1,"-":29}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"\u003cGridPane alignment\u003d\"CENTER_RIGHT\" styleClass\u003d\"status-bar\" xmlns\u003d\"http://javafx.com/javafx/21\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"      \u003cColumnConstraints halignment\u003d\"RIGHT\" hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"   \u003cLabel fx:id\u003d\"gradeStatistics\" alignment\u003d\"CENTER_RIGHT\" GridPane.columnIndex\u003d\"1\" /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"delishad21":7,"-":11}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"    //---------------- Tests for containsSubstringIgnoreCase --------------------------------------","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    public void containsSubstringIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    public void containsSubstringIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"                     \"Substring parameter cannot be empty\", ()","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"                        -\u003e StringUtil.containsSubstringIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"    public void containsSubstringIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"            -\u003e StringUtil.containsSubstringIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"    /*","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"     * Scenarios returning true:","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"     *  query substring matches part of a sentence","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"     *  query substring matches part of a sentence, different upper/lower case letters","lastModifiedDate":"2024-03-03"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"     *  query substring matches the whole sentence","lastModifiedDate":"2024-03-03"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"     *  query substring matches the whole sentence, different upper/lower case letters","lastModifiedDate":"2024-03-03"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"     *","lastModifiedDate":"2024-03-03"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2024-03-03"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-03"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"    public void containsSubstringIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-03"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"        // Empty sentence","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"delishad21"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"        // Matches a partial Substring only","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"        // Sentence Substring bigger than query Substring","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bb\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"        // Query Substring bigger","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"        assertFalse(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"bbbb\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"        // Substring in the middle of the sentence","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc\", \"Bb\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"        // Last Substring (boundary case)","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bBb ccc@1\", \"Cc@1\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        // Matches Substring in the sentence, different upper/lower case letters","lastModifiedDate":"2024-03-03"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2024-03-03"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"        // Only one Substring in sentence (boundary case)","lastModifiedDate":"2024-03-03"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"Aaa\", \"aaa\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-03"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        // Matches multiple Substrings in sentence","lastModifiedDate":"2024-03-03"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"        assertTrue(StringUtil.containsSubstringIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":184,"author":{"gitId":"jayllo-c"},"content":"    //---------------- Tests for equalsIgnoreCase --------------------------------------","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"jayllo-c"},"content":"    public void equalsIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"jayllo-c"},"content":"            -\u003e StringUtil.equalsIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"jayllo-c"},"content":"    public void equalsIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"jayllo-c"},"content":"            -\u003e StringUtil.equalsIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"jayllo-c"},"content":"    public void equalsIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(IllegalArgumentException.class,","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"jayllo-c"},"content":"                     \"Word parameter cannot be empty\", ()","lastModifiedDate":"2024-03-30"},{"lineNumber":202,"author":{"gitId":"jayllo-c"},"content":"                        -\u003e StringUtil.equalsIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"jayllo-c"},"content":"    /*","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"jayllo-c"},"content":"     * Scenarios returning true:","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"jayllo-c"},"content":"     *  query word matches the whole sentence","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"jayllo-c"},"content":"     *  query word matches the whole sentence, different upper/lower case letters","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"jayllo-c"},"content":"     *","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"jayllo-c"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"jayllo-c"},"content":"    public void equalsIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"jayllo-c"},"content":"        // Empty sentence","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(StringUtil.equalsIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(StringUtil.equalsIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"jayllo-c"},"content":"        // Matches the whole word in the sentence","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(StringUtil.equalsIgnoreCase(\"aaa bbb ccc\", \"aaa bbb ccc\")); // First word (boundary case)","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(StringUtil.equalsIgnoreCase(\"aaa bbb ccc@1\", \"aaa bbb ccc@1\")); // Last word (boundary case)","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(StringUtil.equalsIgnoreCase(\"Aa\", \"aa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(StringUtil.equalsIgnoreCase(\"aaa bbb ccc\", \"  aaa bbb ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"delishad21":58,"jayllo-c":42,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_DESC_AMY;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REFLECTION_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDIO_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_STUDENT;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"avengersassemble.json\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"                temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"    public void getExamList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getExamList().remove(0));","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"jayllo-c"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MATRIC_DESC_AMY + REFLECTION_DESC_AMY + STUDIO_DESC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_STUDENT).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"delishad21":6,"Zer0Legion":6,"jayllo-c":3,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                expectedModel);","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2019-02-23"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"                AddCommand.MESSAGE_DUPLICATE_EMAIL);","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"danielleloh":1,"-":47}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.util.ModelStub;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EMAIL, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"danielleloh":1,"delishad21":1,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/AddExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import org.junit.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.util.ModelStub;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"public class AddExamCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public void constructor_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddExamCommand(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public void execute_examAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        ModelStubAcceptingExamAdded modelStub \u003d new ModelStubAcceptingExamAdded();","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Exam validExam \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        CommandResult commandResult \u003d new AddExamCommand(validExam).execute(modelStub);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        assertEquals(String.format(AddExamCommand.MESSAGE_SUCCESS, Messages.format(validExam)),","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        assertEquals(Arrays.asList(validExam), modelStub.examsAdded);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    public void execute_duplicateExam_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        Exam validExam \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addCommand \u003d new AddExamCommand(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        ModelStub modelStub \u003d new ModelStubAcceptingExamAdded();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        modelStub.addExam(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"                    AddExamCommand.MESSAGE_DUPLICATE_EXAM, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        Exam mathFinal \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        Exam scienceFinal \u003d new Exam(\"Science Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addMathFinalCommand \u003d new AddExamCommand(mathFinal);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addScienceFinalCommand \u003d new AddExamCommand(scienceFinal);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand, addMathFinalCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addMathFinalCommandCopy \u003d new AddExamCommand(mathFinal);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand, addMathFinalCommandCopy);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand.equals(1), false);","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand.equals(null), false);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        // different exam -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand.equals(addScienceFinalCommand), false);","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    public void execute_nullModel_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        Exam validExam \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addCommand \u003d new AddExamCommand(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e addCommand.execute(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        Exam mathFinal \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        AddExamCommand addMathFinalCommand \u003d new AddExamCommand(mathFinal);","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"        assertEquals(addMathFinalCommand.toString(),","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"              \"seedu.address.logic.commands.AddExamCommand{toAdd\u003dMath Final: 100}\");","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    private class ModelStubAcceptingExamAdded extends ModelStub {","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        final ArrayList\u003cExam\u003e examsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"        public boolean hasExam(Exam exam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"            requireNonNull(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"            return examsAdded.contains(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        public void addExam(Exam exam) {","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"            requireNonNull(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"            examsAdded.add(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"delishad21":112}},{"path":"src/test/java/seedu/address/logic/commands/AddScoreCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"public class AddScoreCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public void constructor_nullScore_throwsNullPointerException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddScoreCommand(null, null));","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public void execute_scoreAcceptedByModel_addSuccessful() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        Score validScore \u003d new Score(85);","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        Exam validExam \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        CommandResult commandResult \u003d new AddScoreCommand(validIndex, validScore).execute(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        assertEquals(String.format(AddScoreCommand.MESSAGE_ADD_SCORE_SUCCESS, validScore, validPerson.getName()),","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        Map\u003cExam, Score\u003e expectedScores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        expectedScores.put(validExam, validScore);","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        assertEquals(expectedScores, model.getFilteredPersonList().get(validIndex.getZeroBased()).getScores());","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    public void execute_duplicateScore_throwsCommandException() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        Score validScore \u003d new Score(85);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        Exam validExam \u003d new Exam(\"Math Final\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        AddScoreCommand addCommand \u003d new AddScoreCommand(validIndex, validScore);","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        // add one score in first","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        addCommand.execute(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        assertThrows(CommandException.class, AddScoreCommand.MESSAGE_SCORE_EXISTS, () -\u003e addCommand.execute(model));","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        Score score \u003d new Score(85);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        Index index \u003d Index.fromZeroBased(0);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        AddScoreCommand addScoreFirstCommand \u003d new AddScoreCommand(index, score);","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        AddScoreCommand addScoreSecondCommand \u003d new AddScoreCommand(index, score);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        assertEquals(addScoreFirstCommand, addScoreFirstCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        assertEquals(addScoreFirstCommand, addScoreSecondCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        assertFalse(addScoreFirstCommand.equals(new Object()));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        assertFalse(addScoreFirstCommand.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        // different score -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        AddScoreCommand addScoreDifferentScoreCommand \u003d new AddScoreCommand(index, new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        assertFalse(addScoreFirstCommand.equals(addScoreDifferentScoreCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        AddScoreCommand addScoreDifferentIndexCommand \u003d new AddScoreCommand(Index.fromZeroBased(1), score);","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        assertFalse(addScoreFirstCommand.equals(addScoreDifferentIndexCommand));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"delishad21":91}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_TAG_STUDENT \u003d \"student\";","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_TAG_TA \u003d \"TA\";","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_TAG_INSTRUCTOR \u003d \"instructor\";","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_DESC_STUDENT \u003d \" \" + PREFIX_TAG + VALID_TAG_STUDENT;","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_DESC_TA \u003d \" \" + PREFIX_TAG + VALID_TAG_TA;","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_DESC_INSTRUCTOR \u003d \" \" + PREFIX_TAG + VALID_TAG_INSTRUCTOR;","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_MATRIC_NUMBER_AMY \u003d \"A1234567X\";","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_MATRIC_NUMBER_BOB \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"    public static final String VALID_REFLECTION_AMY \u003d \"R1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"    public static final String VALID_REFLECTION_BOB \u003d \"R2\";","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public static final String VALID_STUDIO_AMY \u003d \"S1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"    public static final String VALID_STUDIO_BOB \u003d \"S2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MATRIC_DESC_AMY \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"    public static final String MATRIC_DESC_BOB \u003d \" \" + PREFIX_MATRIC_NUMBER + VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"    public static final String REFLECTION_DESC_AMY \u003d \" \" + PREFIX_REFLECTION + VALID_REFLECTION_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"    public static final String REFLECTION_DESC_BOB \u003d \" \" + PREFIX_REFLECTION + VALID_REFLECTION_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    public static final String STUDIO_DESC_AMY \u003d \" \" + PREFIX_STUDIO + VALID_STUDIO_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public static final String STUDIO_DESC_BOB \u003d \" \" + PREFIX_STUDIO + VALID_STUDIO_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"    public static final String INVALID_MATRIC_DESC \u003d \" \" + PREFIX_MATRIC_NUMBER + \"A1234567\"; // missing last character","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"    public static final String INVALID_REFLECTION_DESC \u003d \" \" + PREFIX_REFLECTION + \"R\"; // missing number","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    public static final String INVALID_STUDIO_DESC \u003d \" \" + PREFIX_STUDIO + \"S\"; // missing last character","lastModifiedDate":"2024-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"        model.updateFilteredPersonList(new PersonDetailContainsKeywordPredicate(PREFIX_NAME, splitName[0]));","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"delishad21":8,"Zer0Legion":12,"jayllo-c":7,"-":125}},{"path":"src/test/java/seedu/address/logic/commands/CopyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-11"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.Messages.MESSAGE_EMPTY_PERSON_LIST;","lastModifiedDate":"2024-03-11"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-11"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsEmails;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"import java.awt.datatransfer.DataFlavor;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"import java.awt.datatransfer.UnsupportedFlavorException;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"import java.util.List;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-11"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-11"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-11"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-11"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"/**","lastModifiedDate":"2024-03-11"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":" * Contains integration tests (interaction with the Model) for {@code CopyCommand}.","lastModifiedDate":"2024-03-11"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":" */","lastModifiedDate":"2024-03-11"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"public class CopyCommandTest {","lastModifiedDate":"2024-03-11"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"    private Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"    private Model emptyModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-11"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    public void equals() {","lastModifiedDate":"2024-03-11"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"        CopyCommand copyCommand \u003d new CopyCommand();","lastModifiedDate":"2024-03-11"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(copyCommand.equals(copyCommand));","lastModifiedDate":"2024-03-11"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(copyCommand.equals(1));","lastModifiedDate":"2024-03-11"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(copyCommand.equals(null));","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"    public void execute_emptyList_noEmailsCopied() {","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"        assertCommandFailure(new CopyCommand(), emptyModel, MESSAGE_EMPTY_PERSON_LIST);","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"    public void execute_nonEmptyList_emailsCopied() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"        assertCommandSuccess(new CopyCommand(), model, CopyCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"    public void getEmailsMethod() {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"        List\u003cPerson\u003e lastShownList \u003d getTypicalPersons();","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        CopyCommand copyCommand \u003d new CopyCommand();","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        StringSelection emails \u003d copyCommand.getEmails(lastShownList);","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        StringSelection expectedEmails \u003d new StringSelection(getTypicalPersonsEmails());","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"        try {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"            String data1 \u003d (String) emails.getTransferData(DataFlavor.stringFlavor);","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"            String data2 \u003d (String) expectedEmails.getTransferData(DataFlavor.stringFlavor);","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"            assertTrue(data1.equals(data2));","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"        } catch (UnsupportedFlavorException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"            throw new AssertionError(\"DataFlavor not supported\");","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"        } catch (IOException e) {","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"            throw new AssertionError(\"IOException\");","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-11"}],"authorContributionMap":{"jayllo-c":75}},{"path":"src/test/java/seedu/address/logic/commands/DeleteExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.Assert.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.Assert.assertNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EXAM;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EXAM;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"public class DeleteExamCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        Exam examToDelete \u003d model.getExamList().get(INDEX_FIRST_EXAM.getZeroBased());","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(INDEX_FIRST_EXAM);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(DeleteExamCommand.MESSAGE_DELETE_EXAM_SUCCESS,","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"                Messages.format(examToDelete));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        expectedModel.deleteExam(examToDelete);","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        assertCommandSuccess(deleteExamCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getExamList().size() + 1);","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(outOfBoundIndex);","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        assertCommandFailure(deleteExamCommand, model, Messages.MESSAGE_INVALID_EXAM_DISPLAYED_INDEX);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public void equals() {","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteFirstCommand \u003d new DeleteExamCommand(INDEX_FIRST_EXAM);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteSecondCommand \u003d new DeleteExamCommand(INDEX_SECOND_EXAM);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteFirstCommandCopy \u003d new DeleteExamCommand(INDEX_FIRST_EXAM);","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        // different exam -\u003e returns false","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    public void execute_validIndex_removesExamFromPersons() {","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        Exam examToDelete \u003d model.getExamList().get(INDEX_FIRST_EXAM.getZeroBased());","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(INDEX_FIRST_EXAM);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        boolean examExistsInPersons \u003d model.getAddressBook().getPersonList().stream()","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"                                           .anyMatch(person -\u003e person.getScores().containsKey(examToDelete));","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        assertTrue(examExistsInPersons);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        expectedModel.deleteExam(examToDelete);","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"        // Execute the command","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        assertCommandSuccess(deleteExamCommand, model,","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"                             String.format(DeleteExamCommand.MESSAGE_DELETE_EXAM_SUCCESS,","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"                                           Messages.format(examToDelete)),","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"                             expectedModel);","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        // Verify that the exam is removed from all persons","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"        for (Person person : expectedModel.getAddressBook().getPersonList()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"            assertFalse(person.getScores().containsKey(examToDelete));","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"    public void execute_selectedExam_setsSelectedExamToNull() throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        // Select an exam","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"        model.selectExam(model.getExamList().get(INDEX_FIRST_EXAM.getZeroBased()));","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        assertEquals(model.getSelectedExam().getValue(),","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"                     model.getExamList().get(INDEX_FIRST_EXAM.getZeroBased()));","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        // Delete the selected exam","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        DeleteExamCommand deleteExamCommand \u003d new DeleteExamCommand(INDEX_FIRST_EXAM);","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        deleteExamCommand.execute(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        // Verify that the selected exam is set to null","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        assertNull(model.getSelectedExam().getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"delishad21":110}},{"path":"src/test/java/seedu/address/logic/commands/DeleteScoreCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"class DeleteScoreCommandTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public void constructor_nullIndex_throwsNullPointerException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteScoreCommand(null));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    public void execute_validIndex_success() throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        Score validScore \u003d new Score(17);","lastModifiedDate":"2024-03-29"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        validExamScore.put(validExam, validScore);","lastModifiedDate":"2024-03-29"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validExamScore).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"        CommandResult commandResult \u003d new DeleteScoreCommand(validIndex).execute(model);","lastModifiedDate":"2024-03-29"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"        assertEquals(String.format(DeleteScoreCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-29"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"                validPerson.getName(),","lastModifiedDate":"2024-03-29"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"                validPerson.getEmail(),","lastModifiedDate":"2024-03-29"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"                validExam.getName()),","lastModifiedDate":"2024-03-29"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-29"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"        Score validScore \u003d new Score(17);","lastModifiedDate":"2024-03-29"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        validExamScore.put(validExam, validScore);","lastModifiedDate":"2024-03-29"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validExamScore).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-29"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        DeleteScoreCommand command \u003d new DeleteScoreCommand(invalidIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-29"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"    public void execute_withNoExamSelected_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"        Score validScore \u003d new Score(17);","lastModifiedDate":"2024-03-29"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-29"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        validExamScore.put(validExam, validScore);","lastModifiedDate":"2024-03-29"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validExamScore).build();","lastModifiedDate":"2024-03-29"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        DeleteScoreCommand command \u003d new DeleteScoreCommand(validIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"    public void execute_noExamScoreToDelete_throwsCommandException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"        DeleteScoreCommand command \u003d new DeleteScoreCommand(validIndex);","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-29"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"danielleloh":102}},{"path":"src/test/java/seedu/address/logic/commands/DeleteShownCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DeleteShownCommand.","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"public class DeleteShownCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"    private Model emptyModel \u003d new ModelManager();","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"    public void execute_tryDeleteAll_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"        DeleteShownCommand deleteShownCommand \u003d new DeleteShownCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"        CommandTestUtil.assertCommandFailure(deleteShownCommand, model, DeleteShownCommand.MESSAGE_NO_FILTER);","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"    public void execute_tryDeleteNobody_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"        DeleteShownCommand deleteShownCommand \u003d new DeleteShownCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"        CommandTestUtil.assertCommandFailure(deleteShownCommand, emptyModel, DeleteShownCommand.MESSAGE_NO_PERSONS);","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"    public void execute_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"        DeleteShownCommand deleteShownCommand \u003d new DeleteShownCommand();","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"l\");","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"        PersonDetailContainsKeywordPredicate predicate2 \u003d","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"o\");","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"        expectedModel.updateFilteredPersonList(predicate2);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"        CommandTestUtil.assertCommandSuccess(deleteShownCommand, model,","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"                String.format(DeleteShownCommand.MESSAGE_SUCCESS, 4, 3), model);","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"        // For some reason the expected model and model have the same persons but asserting model \u003d\u003d expectedModel","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"        // fails. So we have to manually check if the persons are the same.","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"        for (int i \u003d 0; i \u003c model.getFilteredPersonList().size(); i++) {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"            assert(model.getFilteredPersonList().get(i).equals(expectedModel.getFilteredPersonList().get(i)));","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"Zer0Legion":57}},{"path":"src/test/java/seedu/address/logic/commands/DeselectExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"public class DeselectExamCommandTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    private Model model;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    public void execute_examIsSelected_deselectsExam() throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        model.addExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        model.selectExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        DeselectExamCommand command \u003d new DeselectExamCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        assertNull(model.getSelectedExam().getValue());","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        assertEquals(String.format(DeselectExamCommand.MESSAGE_SUCCESS, \"Midterm\"),","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"                     result.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    public void execute_noExamSelected_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        DeselectExamCommand command \u003d new DeselectExamCommand();","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"delishad21":48}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REFLECTION_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDIO_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"                .withTags(VALID_TAG_HUSBAND).withMatric(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"                .withReflection(VALID_REFLECTION_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"                .withStudio(VALID_STUDIO_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).withMatric(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"                .withReflection(VALID_REFLECTION_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"                .withStudio(VALID_STUDIO_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson));","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2019-02-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2019-02-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String expected \u003d EditCommand.class.getCanonicalName() + \"{index\u003d\" + index + \", editPersonDescriptor\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                + editPersonDescriptor + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expected, editCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"delishad21":3,"Zer0Legion":1,"jayllo-c":5,"-":182}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REFLECTION_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDIO_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        // different matriculation number -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMatric(VALID_MATRIC_NUMBER_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        // different reflection -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withReflection(VALID_REFLECTION_BOB).build();","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        // different studio -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withStudio(VALID_STUDIO_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"                + editPersonDescriptor.getMatric().orElse(null) + \", matriculation number\u003d\"","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"                + editPersonDescriptor.getReflection().orElse(null) + \", reflection\u003d\"","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"                + editPersonDescriptor.getStudio().orElse(null) + \", studio\u003d\"","lastModifiedDate":"2024-03-14"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \", scores\u003d\"","lastModifiedDate":"2024-03-26"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"                + editPersonDescriptor.getScores().orElse(null) + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"delishad21":8,"Zer0Legion":1,"jayllo-c":11,"-":70}},{"path":"src/test/java/seedu/address/logic/commands/EditScoreCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"class EditScoreCommandTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"    public void constructor_nullScore_throwsNullPointerException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EditScoreCommand(null, null));","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    public void execute_validIndexAndScore_success() throws CommandException {","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"        Score validInitialScore \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"        Score validFinalScore \u003d new Score(13);","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validInitialExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"        validInitialExamScore.put(validExam, validInitialScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validInitialExamScore).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        CommandResult commandResult \u003d new EditScoreCommand(validIndex, validFinalScore).execute(model);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        String expectedMessage \u003d String.format(EditScoreCommand.MESSAGE_EDIT_SCORE_SUCCESS, validExam.getName(),","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"                validFinalScore, validPerson.getName(), validPerson.getEmail());","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        assertEquals(expectedMessage, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e expectedExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        expectedExamScore.put(validExam, validFinalScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        assertEquals(expectedExamScore, model.getFilteredPersonList().get(validIndex.getZeroBased()).getScores());","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"        Score validScore \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validInitialExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"        validInitialExamScore.put(validExam, validScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validInitialExamScore).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(validExam);","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size());","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        EditScoreCommand command \u003d new EditScoreCommand(invalidIndex, validScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"    public void execute_noExamSelected_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"        Exam validExam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"        Score validScore \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e validInitialExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        validInitialExamScore.put(validExam, validScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(validInitialExamScore).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        model.addExam(validExam);","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"        EditScoreCommand command \u003d new EditScoreCommand(validIndex, validScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"    public void execute_newScoreLargerThanMaxScore_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"        Exam exam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"        Score oldScore \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"        Map\u003cExam, Score\u003e initialExamScore \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"        initialExamScore.put(exam, oldScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().withScores(initialExamScore).build();","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"        model.addExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"        Score invalidNewScore \u003d new Score(150);","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"        EditScoreCommand command \u003d new EditScoreCommand(validIndex, invalidNewScore);","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"    public void execute_noInitialScore_throwsCommandException() {","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"        Exam exam \u003d new Exam(\"mock exam\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"        Score score \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"        model.addPerson(validPerson);","lastModifiedDate":"2024-03-28"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"        model.addExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"        model.selectExam(exam);","lastModifiedDate":"2024-03-28"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"        Index validIndex \u003d Index.fromZeroBased(model.getFilteredPersonList().size() - 1);","lastModifiedDate":"2024-03-28"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"        EditScoreCommand command \u003d new EditScoreCommand(validIndex, score);","lastModifiedDate":"2024-03-28"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-28"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"danielleloh":118}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import static org.mockito.Mockito.doThrow;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import java.io.File;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import java.io.IOException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.JsonNode;","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.node.ArrayNode;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"import com.fasterxml.jackson.databind.node.ObjectNode;","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"public class ExportCommandTest {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    private static final String TEST_CSV_FILE_PATH \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"            \"./src/test/data/ExportCommandTest/addressbookdata/addressbooktest.csv\";","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    private static final Path TEST_JSON_FILE_PATH \u003d Paths.get(\"src\", \"test\", \"data\", \"ExportCommandTest\",","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"            \"filteredAddressBook.json\");","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"    private static final Path TYPICAL_PERSONS_PATH \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"            \"JsonSerializableAddressBookTest\", \"typicalPersonsAddressBook.json\");","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"    private ExportCommand exportCommand \u003d new ExportCommand();","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    private Model emptyModel \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        exportCommand.updateCsvFilePath(TEST_CSV_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        exportCommand.updateFilteredJsonFilePath(TEST_JSON_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"        model.setAddressBookFilePath(TYPICAL_PERSONS_PATH);","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"danielleloh"},"content":"    public void updateCsvFilePathTest_success() {","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"danielleloh"},"content":"        exportCommand.updateCsvFilePath(TEST_CSV_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"danielleloh"},"content":"        assertEquals(TEST_CSV_FILE_PATH, exportCommand.getCsvFilePath());","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"danielleloh"},"content":"    public void updateFilteredJsonFilePath_success() {","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"danielleloh"},"content":"        exportCommand.updateFilteredJsonFilePath(TEST_JSON_FILE_PATH);","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"danielleloh"},"content":"        assertEquals(TEST_JSON_FILE_PATH, exportCommand.getFilteredJsonFilePath());","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"danielleloh"},"content":"    public void execute_emptyFilteredPersonList_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"danielleloh"},"content":"        CommandException thrown \u003d assertThrows(CommandException.class, () -\u003e exportCommand.execute(emptyModel));","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_NOTHING_TO_EXPORT_FAILURE, thrown.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"danielleloh"},"content":"    public void writeToJsonFileThrowsIoException_throwsCommandException() throws IOException {","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"danielleloh"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"danielleloh"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d mock(JsonAddressBookStorage.class);","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"danielleloh"},"content":"        doThrow(new IOException(\"File write error\")).when(jsonAddressBookStorage).saveAddressBook(addressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"danielleloh"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"            exportCommand.writeToJsonFile(jsonAddressBookStorage, addressBook);","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_WRITE_TO_JSON_FAILURE, exception.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"    public void nonexistentJsonFilePath_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"        File jsonFile \u003d new File(\"~/nonexistentpath/nonexistentfile.json\");","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"        CommandException thrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"danielleloh"},"content":"            exportCommand.readJsonFile(jsonFile);","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_JSON_FILE_NOT_FOUND_FAILURE, thrown.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"danielleloh"},"content":"    public void invalidJsonFileThrowsJsonParseException_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"danielleloh"},"content":"        File jsonFile \u003d new File(\"./src/test/data/ExportCommandTest/invalidJsonFile.json\");","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"danielleloh"},"content":"        CommandException thrown \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"danielleloh"},"content":"            exportCommand.readJsonFile(jsonFile);","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_PARSE_JSON_FILE_FAILURE, thrown.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":98,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"danielleloh"},"content":"    public void emptyPersonsArray_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":102,"author":{"gitId":"danielleloh"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper();","lastModifiedDate":"2024-03-23"},{"lineNumber":103,"author":{"gitId":"danielleloh"},"content":"        ArrayNode emptyPersonsArray \u003d objectMapper.createArrayNode();","lastModifiedDate":"2024-03-23"},{"lineNumber":104,"author":{"gitId":"danielleloh"},"content":"        ObjectNode rootNode \u003d objectMapper.createObjectNode();","lastModifiedDate":"2024-03-23"},{"lineNumber":105,"author":{"gitId":"danielleloh"},"content":"        rootNode.set(\"persons\", emptyPersonsArray);","lastModifiedDate":"2024-03-23"},{"lineNumber":106,"author":{"gitId":"danielleloh"},"content":"        JsonNode jsonTree \u003d rootNode;","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":108,"author":{"gitId":"danielleloh"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":109,"author":{"gitId":"danielleloh"},"content":"            exportCommand.readPersonsArray(jsonTree);","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_EMPTY_JSON_FILE_FAILURE, exception.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":112,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"danielleloh"},"content":"    public void missingPersonsArray_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":116,"author":{"gitId":"danielleloh"},"content":"        ObjectMapper objectMapper \u003d new ObjectMapper();","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"danielleloh"},"content":"        ObjectNode jsonTree \u003d objectMapper.createObjectNode();","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"        CommandException exception \u003d assertThrows(CommandException.class, () -\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"            exportCommand.readPersonsArray(jsonTree);","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"        });","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_EMPTY_JSON_FILE_FAILURE, exception.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":123,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":124,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":126,"author":{"gitId":"danielleloh"},"content":"    public void execute_unableToCreateCsvDirectory_throwsCommandException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":127,"author":{"gitId":"danielleloh"},"content":"        exportCommand.updateCsvFilePath(\"~/nonexistent/path\");","lastModifiedDate":"2024-03-23"},{"lineNumber":128,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":129,"author":{"gitId":"danielleloh"},"content":"        CommandException thrown \u003d assertThrows(CommandException.class, () -\u003e exportCommand.execute(model));","lastModifiedDate":"2024-03-23"},{"lineNumber":130,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_CREATE_CSV_DIRECTORY_FAILURE, thrown.getMessage());","lastModifiedDate":"2024-03-23"},{"lineNumber":131,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":132,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":133,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":134,"author":{"gitId":"danielleloh"},"content":"    public void execute_validAddressBookExport_success() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":135,"author":{"gitId":"danielleloh"},"content":"        CommandResult commandResult \u003d exportCommand.execute(model);","lastModifiedDate":"2024-03-23"},{"lineNumber":136,"author":{"gitId":"danielleloh"},"content":"        assertEquals(exportCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-23"},{"lineNumber":137,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":138,"author":{"gitId":"danielleloh"},"content":"        File csvFile \u003d new File(\"./src/test/data/ExportCommandTest/addressbookdata/addressbooktest.csv\");","lastModifiedDate":"2024-03-23"},{"lineNumber":139,"author":{"gitId":"danielleloh"},"content":"        assertTrue(csvFile.exists());","lastModifiedDate":"2024-03-23"},{"lineNumber":140,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"danielleloh":142}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MORETHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"first\");","lastModifiedDate":"2024-03-03"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"second\");","lastModifiedDate":"2024-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public void execute_name_noPersonFound() {","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"Adam\");","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    public void execute_email_multiplePersonsFound() {","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 7);","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"@example.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"    public void execute_examRequiredNoExamSelected_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_LESSTHAN, \"50\");","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"        assertCommandFailure(command, model, Messages.MESSAGE_NO_EXAM_SELECTED);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"    public void execute_examRequiredExamSelectedValueTooHigh_throwsCommandException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"        model.selectExam(new Exam(\"Final\", new Score(100)));","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_MORETHAN, \"101\");","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"        assertCommandFailure(command, model, FindCommand.MESSAGE_SCORE_GREATER_THAN_MAX);","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"jayllo-c"},"content":"    public void execute_examRequired_multiplePersonsFound() {","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"jayllo-c"},"content":"        model.selectExam(new Exam(\"Midterm\", new Score(100)));","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jayllo-c"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordPredicate(PREFIX_LESSTHAN, \"55\");","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"jayllo-c"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"jayllo-c"},"content":"        expectedModel.updateFilteredPersonList(predicate.withExam(model.getSelectedExam().getValue()));","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(Arrays.asList(CARL, DANIEL, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"@example.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String expected \u003d FindCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expected, findCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"delishad21":21,"jayllo-c":33,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-19"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-19"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-19"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2024-03-19"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-19"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-19"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-19"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-19"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"public class ImportCommandTest {","lastModifiedDate":"2024-03-19"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"    public void execute_import_success() throws CommandException, ParseException, DataLoadingException {","lastModifiedDate":"2024-03-19"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"        Path filePath \u003d Paths.get(\"src/test/data/ImportCommandTest/valid.csv\");","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"        ImportCommand importCommand \u003d new ImportCommand(filePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"        CommandResult commandResult \u003d importCommand.execute(model);","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"        assertEquals(","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"                String.format(\"Imported Contacts from: %s\", filePath.toString()), commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"    public void execute_convertToAddCommandInput_success() {","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"        Map\u003cString, String\u003e personData \u003d Map.of(","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"                \"studio\", \"S1\",","lastModifiedDate":"2024-03-20"},{"lineNumber":35,"author":{"gitId":"Pughal77"},"content":"                \"matric\", \"A1111111A\",","lastModifiedDate":"2024-03-20"},{"lineNumber":36,"author":{"gitId":"Pughal77"},"content":"                \"address\", \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2024-03-20"},{"lineNumber":37,"author":{"gitId":"Pughal77"},"content":"                \"reflection\", \"R1\",","lastModifiedDate":"2024-03-20"},{"lineNumber":38,"author":{"gitId":"Pughal77"},"content":"                \"phone\", \"94351253\",","lastModifiedDate":"2024-03-20"},{"lineNumber":39,"author":{"gitId":"Pughal77"},"content":"                \"name\", \"Alice Pauline\",","lastModifiedDate":"2024-03-20"},{"lineNumber":40,"author":{"gitId":"Pughal77"},"content":"                \"email\", \"alice@example.com\",","lastModifiedDate":"2024-03-20"},{"lineNumber":41,"author":{"gitId":"Pughal77"},"content":"                \"tags\", \"friends\"","lastModifiedDate":"2024-03-20"},{"lineNumber":42,"author":{"gitId":"Pughal77"},"content":"                );","lastModifiedDate":"2024-03-20"},{"lineNumber":43,"author":{"gitId":"Pughal77"},"content":"        ImportCommand importCommand \u003d new ImportCommand(Paths.get(\"src/test/data/ImportCommandTest/valid.csv\"));","lastModifiedDate":"2024-03-19"},{"lineNumber":44,"author":{"gitId":"Pughal77"},"content":"        String actual \u003d importCommand.convertToAddCommandInput(personData);","lastModifiedDate":"2024-03-20"},{"lineNumber":45,"author":{"gitId":"Pughal77"},"content":"        String expected \u003d","lastModifiedDate":"2024-03-20"},{"lineNumber":46,"author":{"gitId":"Pughal77"},"content":"                \" n/Alice Pauline p/94351253 \"","lastModifiedDate":"2024-03-20"},{"lineNumber":47,"author":{"gitId":"Pughal77"},"content":"                        + \"e/alice@example.com a/123, Jurong West Ave 6, #08-111 m/A1111111A r/R1 s/S1 t/friends  \";","lastModifiedDate":"2024-03-20"},{"lineNumber":48,"author":{"gitId":"Pughal77"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-20"},{"lineNumber":49,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"Pughal77"},"content":"    public void execute_import_invalidPathFailure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":52,"author":{"gitId":"Pughal77"},"content":"        Model model \u003d new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"Pughal77"},"content":"        ImportCommand importCommand \u003d new ImportCommand(Paths.get(","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"Pughal77"},"content":"                \"src/test/data/ImportCommandTest/nonexistent.csv\"));","lastModifiedDate":"2024-03-20"},{"lineNumber":55,"author":{"gitId":"Pughal77"},"content":"        assertThrows(CommandException.class, () -\u003e importCommand.execute(model));","lastModifiedDate":"2024-03-20"},{"lineNumber":56,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":58,"author":{"gitId":"Pughal77"},"content":"    public void equals() {","lastModifiedDate":"2024-03-20"},{"lineNumber":59,"author":{"gitId":"Pughal77"},"content":"        Path filePath \u003d Paths.get(\"src/test/data/ImportCommandTest/valid.csv\");","lastModifiedDate":"2024-03-20"},{"lineNumber":60,"author":{"gitId":"Pughal77"},"content":"        ImportCommand importCommand \u003d new ImportCommand(filePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":61,"author":{"gitId":"Pughal77"},"content":"        ImportCommand importCommandCopy \u003d new ImportCommand(filePath);","lastModifiedDate":"2024-03-20"},{"lineNumber":62,"author":{"gitId":"Pughal77"},"content":"        assertEquals(importCommand, importCommandCopy);","lastModifiedDate":"2024-03-20"},{"lineNumber":63,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":64,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-19"}],"authorContributionMap":{"Pughal77":64}},{"path":"src/test/java/seedu/address/logic/commands/ImportExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"import static org.mockito.Mockito.mock;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"public class ImportExamCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"    public static final String VALID_PATH \u003d \"src/test/data/ImportExamCommandTest/testimportexam.csv\";","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"    public static final String EXTRA_PATH \u003d \"src/test/data/ImportExamCommandTest/testimportexamextra.csv\";","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"    private ImportExamCommand importExamCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"    private Model model;","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"    public void setUp() throws CommandException, ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"        model \u003d mock(Model.class);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"    public void execute_validFilePath_success() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"        Path filePath \u003d Paths.get(\"src/test/data/ImportExamCommandTest/valid.csv\");","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"        String expectedMessage \u003d String.format(ImportExamCommand.MESSAGE_SUCCESS, filePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"        importExamCommand \u003d new ImportExamCommand(filePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"        assertCommandSuccess(importExamCommand, model, expectedMessage, model);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"    public void execute_invalidFilePath_throwsCommandException() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"        Path invalidFilePath \u003d Paths.get(\"invalid/path/to/file.csv\");","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"        importExamCommand \u003d new ImportExamCommand(invalidFilePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(CommandException.class, () -\u003e importExamCommand.execute(model));","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"    public void testAddToErrorReport() {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"        Path invalidFilePath \u003d Paths.get(\"invalid/path/to/file.csv\");","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"        importExamCommand \u003d new ImportExamCommand(invalidFilePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"        importExamCommand.addToErrorReport(\"Email\", \"Invalid email format\");","lastModifiedDate":"2024-03-29"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"                \"\\nBelow are the errors that occurred while importing exams:\\nEmail: Invalid email format\\n\",","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"                importExamCommand.generateErrorReport());","lastModifiedDate":"2024-03-29"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"    public void testGenerateErrorReportEmpty() {","lastModifiedDate":"2024-03-26"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"        String result \u003d new ImportExamCommand(Paths.get(VALID_PATH)).generateErrorReport();","lastModifiedDate":"2024-03-29"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(\"\", result);","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"    public void testSuccess() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"        Path filePath \u003d Paths.get(VALID_PATH);","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"        ImportExamCommand importExamCommand \u003d new ImportExamCommand(filePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"        String expectedMessage \u003d String.format(ImportExamCommand.MESSAGE_SUCCESS, filePath);","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"        assertCommandSuccess(importExamCommand, model, expectedMessage, model);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"    public void testEquals() {","lastModifiedDate":"2024-03-29"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"        Path filePath \u003d Paths.get(VALID_PATH);","lastModifiedDate":"2024-03-29"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"        ImportExamCommand importExamCommand \u003d new ImportExamCommand(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"        ImportExamCommand importExamCommandCopy \u003d new ImportExamCommand(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(importExamCommand, importExamCommandCopy);","lastModifiedDate":"2024-03-29"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":86,"author":{"gitId":"Zer0Legion"},"content":"    public void testFailing() throws CommandException {","lastModifiedDate":"2024-03-29"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"        Path filePath \u003d Paths.get(EXTRA_PATH);","lastModifiedDate":"2024-03-29"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"        Exam midterm \u003d new Exam(\"MidtermTestFailing\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"        model.addExam(midterm);","lastModifiedDate":"2024-03-29"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"        ImportExamCommand importExamCommand \u003d new ImportExamCommand(filePath);","lastModifiedDate":"2024-03-29"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"        String expectedError \u003d String.format(ImportExamCommand.MESSAGE_SUCCESS, filePath.toString())","lastModifiedDate":"2024-03-29"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"                + ImportExamCommand.PREFIX_ERROR_REPORT;","lastModifiedDate":"2024-03-29"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"        expectedError +\u003d \"non@example.com: Person does not exist\\n\";","lastModifiedDate":"2024-03-29"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"        expectedError +\u003d \"johnd@example.com: Grade for Midterm exceeds maximum score\\n\";","lastModifiedDate":"2024-03-29"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"        expectedError +\u003d \"NonExistent: Exam does not exist\\n\";","lastModifiedDate":"2024-03-29"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"        assertCommandSuccess(importExamCommand, model, expectedError, model);","lastModifiedDate":"2024-03-29"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Zer0Legion":100}},{"path":"src/test/java/seedu/address/logic/commands/SelectExamCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"public class SelectExamCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void execute_examExists_selectsExam() throws CommandException {","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        addressBook.addExam(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand command \u003d new SelectExamCommand(Index.fromOneBased(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        CommandResult result \u003d command.execute(model);","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        assertEquals(String.format(SelectExamCommand.MESSAGE_SELECT_EXAM_SUCCESS, exam), result.getFeedbackToUser());","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void execute_examDoesNotExist_throwsCommandException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        addressBook.addExam(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        Model model \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand command \u003d new SelectExamCommand(Index.fromOneBased(2));","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        assertThrows(CommandException.class, () -\u003e command.execute(model));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    void equals() {","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand selectExamCommand1 \u003d new SelectExamCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand selectExamCommand2 \u003d new SelectExamCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand selectExamCommand3 \u003d new SelectExamCommand(Index.fromZeroBased(2));","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        assertTrue(selectExamCommand1.equals(selectExamCommand1));","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        assertTrue(selectExamCommand1.equals(selectExamCommand2));","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        assertFalse(selectExamCommand1.equals(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        assertFalse(selectExamCommand1.equals(null));","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        assertFalse(selectExamCommand1.equals(selectExamCommand3));","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    void toStringTest() {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        SelectExamCommand selectExamCommand \u003d new SelectExamCommand(Index.fromZeroBased(1));","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        assertEquals(\"seedu.address.logic.commands.SelectExamCommand{targetIndex\u003d\"","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"                     + \"seedu.address.commons.core.index.Index{zeroBasedIndex\u003d1}}\",","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"                     selectExamCommand.toString());","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"delishad21":79}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MATRIC_DESC;","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REFLECTION_DESC;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STUDIO_DESC;","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_DESC_AMY;","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MATRIC_DESC_BOB;","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REFLECTION_DESC_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.REFLECTION_DESC_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDIO_DESC_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STUDIO_DESC_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESC_STUDENT;","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REFLECTION_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDIO_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_INSTRUCTOR;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_STUDENT;","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_TA;","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB)","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_STUDENT).withMatric(VALID_MATRIC_NUMBER_BOB)","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"                .withReflection(VALID_REFLECTION_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"                .withStudio(VALID_STUDIO_BOB).build();","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"                PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MATRIC_DESC_BOB + REFLECTION_DESC_BOB + STUDIO_DESC_BOB","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"                + VALID_DESC_STUDENT,","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"                VALID_TAG_FRIEND, VALID_TAG_HUSBAND, VALID_TAG_STUDENT).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + MATRIC_DESC_BOB + REFLECTION_DESC_BOB + STUDIO_DESC_BOB","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"                + VALID_DESC_STUDENT,","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + MATRIC_DESC_BOB + REFLECTION_DESC_BOB + STUDIO_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"jayllo-c"},"content":"        // multiple matric numbers","lastModifiedDate":"2024-03-17"},{"lineNumber":120,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, MATRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":121,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-17"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"        // multiple reflections","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, REFLECTION_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":125,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REFLECTION));","lastModifiedDate":"2024-03-17"},{"lineNumber":126,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"        // multiple studios","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, STUDIO_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDIO));","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":132,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":133,"author":{"gitId":"jayllo-c"},"content":"                + NAME_DESC_AMY + ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":134,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_EMAIL_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":155,"author":{"gitId":"jayllo-c"},"content":"        // invalid matric number","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, INVALID_MATRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"jayllo-c"},"content":"        // invalid reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, INVALID_REFLECTION_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REFLECTION));","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"        // invalid studio","lastModifiedDate":"2024-03-14"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, INVALID_STUDIO_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-14"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDIO));","lastModifiedDate":"2024-03-14"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":185,"author":{"gitId":"jayllo-c"},"content":"        // invalid matric number","lastModifiedDate":"2024-03-17"},{"lineNumber":186,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_MATRIC_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":187,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_MATRIC_NUMBER));","lastModifiedDate":"2024-03-17"},{"lineNumber":188,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":189,"author":{"gitId":"jayllo-c"},"content":"        // invalid reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":190,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_REFLECTION_DESC,","lastModifiedDate":"2024-03-17"},{"lineNumber":191,"author":{"gitId":"jayllo-c"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_REFLECTION));","lastModifiedDate":"2024-03-17"},{"lineNumber":192,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"delishad21"},"content":"        // invalid studio","lastModifiedDate":"2024-03-14"},{"lineNumber":194,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_STUDIO_DESC,","lastModifiedDate":"2024-03-14"},{"lineNumber":195,"author":{"gitId":"delishad21"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_STUDIO));","lastModifiedDate":"2024-03-14"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":199,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_tagMissing_success() {","lastModifiedDate":"2024-03-06"},{"lineNumber":200,"author":{"gitId":"Zer0Legion"},"content":"        // zero tags; all other fields present means student","lastModifiedDate":"2024-03-24"},{"lineNumber":201,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_STUDENT)","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"Zer0Legion"},"content":"                .withMatric(VALID_MATRIC_NUMBER_AMY).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":203,"author":{"gitId":"Zer0Legion"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-06"},{"lineNumber":204,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MATRIC_DESC_AMY + REFLECTION_DESC_AMY + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"Zer0Legion"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":208,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_matricMissing_success() {","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"Zer0Legion"},"content":"        // no matric number","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND).withMatric(\"\").build();","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":213,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + REFLECTION_DESC_AMY + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"jayllo-c"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":215,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":216,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":218,"author":{"gitId":"jayllo-c"},"content":"    public void parse_reflectionMissing_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":219,"author":{"gitId":"Zer0Legion"},"content":"        // no reflection means TA","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_TA)","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"Zer0Legion"},"content":"                .withMatric(VALID_MATRIC_NUMBER_AMY).withReflection(\"\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":223,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + MATRIC_DESC_AMY + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"jayllo-c"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":228,"author":{"gitId":"delishad21"},"content":"    public void parse_studioMissing_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":229,"author":{"gitId":"Zer0Legion"},"content":"        // no studio means TA","lastModifiedDate":"2024-03-24"},{"lineNumber":230,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND, VALID_TAG_TA)","lastModifiedDate":"2024-03-24"},{"lineNumber":231,"author":{"gitId":"Zer0Legion"},"content":"                .withMatric(VALID_MATRIC_NUMBER_AMY).withStudio(\"\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":232,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":233,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + MATRIC_DESC_AMY + REFLECTION_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"delishad21"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":235,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":236,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":237,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"jayllo-c"},"content":"    public void parse_matricAndReflectionMissing_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"jayllo-c"},"content":"        // no matric number; no reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"jayllo-c"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"jayllo-c"},"content":"                .withMatric(\"\").withReflection(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"Zer0Legion"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-06"},{"lineNumber":243,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":244,"author":{"gitId":"Zer0Legion"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-06"},{"lineNumber":245,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":246,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":247,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":248,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"    public void parse_tagAndStudioMissing_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"delishad21"},"content":"        // zero tags; no studio","lastModifiedDate":"2024-03-14"},{"lineNumber":251,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_TA).withMatric(VALID_MATRIC_NUMBER_AMY)","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"delishad21"},"content":"                .withStudio(\"\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":254,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + MATRIC_DESC_AMY + REFLECTION_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":255,"author":{"gitId":"jayllo-c"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":256,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":257,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":258,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":259,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_tagAndMatricMissing_success() {","lastModifiedDate":"2024-03-06"},{"lineNumber":260,"author":{"gitId":"Zer0Legion"},"content":"        // zero tags; no matric number","lastModifiedDate":"2024-03-06"},{"lineNumber":261,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withMatric(\"\").build();","lastModifiedDate":"2024-03-06"},{"lineNumber":262,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-17"},{"lineNumber":263,"author":{"gitId":"jayllo-c"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REFLECTION_DESC_AMY + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":264,"author":{"gitId":"jayllo-c"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-17"},{"lineNumber":265,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":266,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":267,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":268,"author":{"gitId":"jayllo-c"},"content":"    public void parse_tagAndMatricAndReflectionMissing_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":269,"author":{"gitId":"jayllo-c"},"content":"        // zero tags; no matric number; no reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":270,"author":{"gitId":"jayllo-c"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().withMatric(\"\").withReflection(\"\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + STUDIO_DESC_AMY,","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":276,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":277,"author":{"gitId":"delishad21"},"content":"    public void parse_tagAndMatricAndStudioMissing_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":278,"author":{"gitId":"delishad21"},"content":"        // zero tags; no matric number; no studio","lastModifiedDate":"2024-03-14"},{"lineNumber":279,"author":{"gitId":"delishad21"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags()","lastModifiedDate":"2024-03-14"},{"lineNumber":280,"author":{"gitId":"delishad21"},"content":"                .withMatric(\"\").withStudio(\"\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":281,"author":{"gitId":"Zer0Legion"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-06"},{"lineNumber":282,"author":{"gitId":"jayllo-c"},"content":"                           + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + REFLECTION_DESC_AMY,","lastModifiedDate":"2024-03-18"},{"lineNumber":283,"author":{"gitId":"-"},"content":"                           new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":286,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_matricAndStudioAndReflectionMissing_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"Zer0Legion"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags(VALID_TAG_INSTRUCTOR)","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"Zer0Legion"},"content":"                .withMatric(\"\").withReflection(\"\").withStudio(\"\").build();","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"Zer0Legion"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"Zer0Legion"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":342,"author":{"gitId":"jayllo-c"},"content":"        // invalid matric number","lastModifiedDate":"2024-03-17"},{"lineNumber":343,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":344,"author":{"gitId":"jayllo-c"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_MATRIC_DESC, Matric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":345,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":346,"author":{"gitId":"jayllo-c"},"content":"        // invalid reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":347,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-17"},{"lineNumber":348,"author":{"gitId":"jayllo-c"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_REFLECTION_DESC, Reflection.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-17"},{"lineNumber":349,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":350,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":351,"author":{"gitId":"delishad21"},"content":"        // invalid studio","lastModifiedDate":"2024-03-14"},{"lineNumber":352,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-14"},{"lineNumber":353,"author":{"gitId":"delishad21"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + INVALID_STUDIO_DESC, Studio.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-14"},{"lineNumber":354,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":356,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"delishad21":41,"Zer0Legion":49,"jayllo-c":88,"-":186}},{"path":"src/test/java/seedu/address/logic/parser/AddExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddExamCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"public class AddExamCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private AddExamCommandParser parser \u003d new AddExamCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        Exam expectedExam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_NAME + \"Midterm \" + PREFIX_SCORE + \"100\",","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"                new AddExamCommand(expectedExam));","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        // repeated name prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm \" + PREFIX_NAME + \"Final \" + PREFIX_SCORE + \"100\",","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        // repeated score prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm \" + PREFIX_SCORE + \"100 \" + PREFIX_SCORE + \"200\",","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCORE));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        // invalid name","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \" \" + PREFIX_SCORE + \"100\",","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"                Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        // invalid name","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm\u0026 \" + PREFIX_SCORE + \"100\",","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"                Exam.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        // invalid score","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm \" + PREFIX_SCORE + \" \",","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"                Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        // invalid score","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm \" + PREFIX_SCORE + \"abc\",","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"                Score.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        // missing name prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SCORE + \"100\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        // missing score prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_NAME + \"Midterm\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":72}},{"path":"src/test/java/seedu/address/logic/parser/AddScoreCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"public class AddScoreCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    private AddScoreCommandParser parser \u003d new AddScoreCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        Index expectedIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        Score expectedScore \u003d new Score(100);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" 1 \" + PREFIX_SCORE + \"100\",","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"                new AddScoreCommand(expectedIndex, expectedScore));","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public void parse_invalidScore_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d Score.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        // invalid score","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_SCORE + \"abd\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void parse_repeatedScore_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCORE);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        // repeated score prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_SCORE + \"100 \" + PREFIX_SCORE + \"100\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddScoreCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        // missing index","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SCORE + \"100\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        // missing score prefix","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":57}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_STUDENT;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddExamCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.AddScoreCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.logic.commands.CopyCommand;","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeleteExamCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.DeleteScoreCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.DeleteShownCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeselectExamCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.EditScoreCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.ImportExamCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.SelectExamCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"        Person person \u003d new PersonBuilder().withTags(VALID_TAG_STUDENT).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"danielleloh"},"content":"    public void parseCommand_editScore() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"danielleloh"},"content":"        String prefix \u003d \"s/\";","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"danielleloh"},"content":"        Score score \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"danielleloh"},"content":"        EditScoreCommand command \u003d (EditScoreCommand) parser.parseCommand(EditScoreCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"danielleloh"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + prefix + score.getScore());","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"danielleloh"},"content":"        assertEquals(new EditScoreCommand(INDEX_FIRST_PERSON, score), command);","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        String prefix \u003d \"n/\";","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        String parameter \u003d \"Johan\";","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"                FindCommand.COMMAND_WORD + \" \" + prefix + parameter);","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        assertEquals(new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_NAME, parameter)), command);","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"    public void parseCommand_copy() throws Exception {","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(parser.parseCommand(\"copy\") instanceof CopyCommand);","lastModifiedDate":"2024-03-11"},{"lineNumber":115,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(parser.parseCommand(\"copy 3\") instanceof CopyCommand);","lastModifiedDate":"2024-03-11"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-15"},{"lineNumber":119,"author":{"gitId":"danielleloh"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2024-03-15"},{"lineNumber":120,"author":{"gitId":"danielleloh"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);","lastModifiedDate":"2024-03-15"},{"lineNumber":121,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":122,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":123,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":124,"author":{"gitId":"Pughal77"},"content":"    public void parseCommand_import() throws Exception {","lastModifiedDate":"2024-03-20"},{"lineNumber":125,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(parser.parseCommand(\"import i/src.csv\") instanceof ImportCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"Zer0Legion"},"content":"    public void parseCommand_importExam() throws Exception {","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(parser.parseCommand(\"importExam i/src.csv\") instanceof ImportExamCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":132,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":133,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"Zer0Legion"},"content":"    public void parseCommand_deleteShown() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(parser.parseCommand(\"deleteshown\") instanceof DeleteShownCommand);","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    public void parseCommand_selectExam() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"        assertTrue(parser.parseCommand(\"selectExam 1\") instanceof SelectExamCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"    void parseCommand_addExam() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"        assertTrue(parser.parseCommand(\"addExam n/Midterm s/100\") instanceof AddExamCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"    public void parseCommand_deleteExam() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        assertTrue(parser.parseCommand(\"deleteExam 1\") instanceof DeleteExamCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":160,"author":{"gitId":"danielleloh"},"content":"    public void parseCommand_deleteScore() throws Exception {","lastModifiedDate":"2024-03-29"},{"lineNumber":161,"author":{"gitId":"danielleloh"},"content":"        DeleteScoreCommand command \u003d (DeleteScoreCommand) parser.parseCommand(","lastModifiedDate":"2024-03-29"},{"lineNumber":162,"author":{"gitId":"danielleloh"},"content":"                DeleteScoreCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2024-03-29"},{"lineNumber":163,"author":{"gitId":"danielleloh"},"content":"        assertEquals(new DeleteScoreCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2024-03-29"},{"lineNumber":164,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":165,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"    public void parseCommand_deselectExam() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"        assertTrue(parser.parseCommand(\"deselectExam\") instanceof DeselectExamCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"    public void parseCommand_addScore() throws Exception {","lastModifiedDate":"2024-03-28"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"        assertTrue(parser.parseCommand(\"addScore 1 s/100\") instanceof AddScoreCommand);","lastModifiedDate":"2024-03-28"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"danielleloh":25,"delishad21":36,"Pughal77":5,"Zer0Legion":15,"jayllo-c":7,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentMultiMapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-05"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-05"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"public class ArgumentMultiMapTest {","lastModifiedDate":"2024-03-05"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    private ArgumentMultimap testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    private Prefix testPrefix \u003d new Prefix(\"n/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"    private Prefix testPrefix2 \u003d new Prefix(\"e/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    private Prefix preamblePrefix \u003d new Prefix(\"\");","lastModifiedDate":"2024-03-05"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_onePrefix_returnTrue() {","lastModifiedDate":"2024-03-05"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix, \"Alice\");","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        assertEquals(true, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_multiplePrefixes_returnFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix, \"Alice\");","lastModifiedDate":"2024-03-05"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix2, \"alice@gmail.com\");","lastModifiedDate":"2024-03-05"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        assertEquals(false, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_emptyMultimap_returnFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        assertEquals(false, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_onlyPreamble_returnFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(preamblePrefix, \"preamble\");","lastModifiedDate":"2024-03-05"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        assertEquals(false, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_preambleAndPrefix_returnFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(preamblePrefix, \"preamble\");","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix, \"Alice\");","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        assertEquals(false, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_emptyPreambleAndPrefix_returnTrue() {","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(preamblePrefix, \"\");","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix, \"Alice\");","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        assertEquals(true, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    public void testVerifySinglePrefix_emptyPreambleAndMultiplePrefix_returnFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(preamblePrefix, \"\");","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix, \"Alice\");","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        testArgumentMultimap.put(testPrefix2, \"alice@gmail.com\");","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        assertEquals(false, testArgumentMultimap.verifySinglePrefix());","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-05"}],"authorContributionMap":{"delishad21":66}},{"path":"src/test/java/seedu/address/logic/parser/DeleteExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.DeleteExamCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class DeleteExamCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    private DeleteExamCommandParser parser \u003d new DeleteExamCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \"1\", new DeleteExamCommand(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        // non-integer input","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"a\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        // empty string","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":31}},{"path":"src/test/java/seedu/address/logic/parser/DeleteScoreCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-29"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-29"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-29"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-29"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2024-03-29"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-29"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.DeleteScoreCommand;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"public class DeleteScoreCommandParserTest {","lastModifiedDate":"2024-03-29"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"    private DeleteScoreCommandParser parser \u003d new DeleteScoreCommandParser();","lastModifiedDate":"2024-03-29"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    public void parse_validArgs_returnsDeleteScoreCommand() {","lastModifiedDate":"2024-03-29"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteScoreCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2024-03-29"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-29"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-29"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"                DeleteScoreCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-29"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-29"}],"authorContributionMap":{"danielleloh":27}},{"path":"src/test/java/seedu/address/logic/parser/EditScoreCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"danielleloh"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"danielleloh"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"danielleloh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"danielleloh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"danielleloh"},"content":"import seedu.address.logic.commands.EditScoreCommand;","lastModifiedDate":"2024-03-28"},{"lineNumber":13,"author":{"gitId":"danielleloh"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"danielleloh"},"content":"public class EditScoreCommandParserTest {","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"danielleloh"},"content":"    private EditScoreCommandParser parser \u003d new EditScoreCommandParser();","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"danielleloh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"danielleloh"},"content":"        Index index \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"danielleloh"},"content":"        Score score \u003d new Score(17);","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"danielleloh"},"content":"        assertParseSuccess(parser, \"1 \" + PREFIX_SCORE + \"17\",","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"danielleloh"},"content":"                new EditScoreCommand(index, score));","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"danielleloh"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_SCORE + \"17 \" + PREFIX_SCORE + \"17\",","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"danielleloh"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_SCORE));","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"danielleloh"},"content":"    public void parse_invalidScore_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"danielleloh"},"content":"        String expectedMessage \u003d Score.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \"1 \" + PREFIX_SCORE + \"hello\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"danielleloh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"danielleloh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditScoreCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"danielleloh"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \" \" + PREFIX_SCORE + \"17\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \"1\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"danielleloh"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"danielleloh"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"danielleloh":48}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-05"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-05"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-05"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    public void parse_invalidPrefix_throwsParseException() {","lastModifiedDate":"2024-03-05"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, \" z/Alice\",","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void parse_validNameArg_returnsFindCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"Alice\"));","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" n/Alice\", expectedFindCommand);","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" n/  Alice\", expectedFindCommand);","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    public void parse_validEmailArg_returnsFindCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"alice@gmail.com\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" e/alice@gmail.com\", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" e/  alice@gmail.com  \", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    public void parse_validPhoneArg_returnsFindCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-05"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_PHONE, \"91234567\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" p/91234567\", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-05"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" p/  91234567  \", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    public void parse_validAddressArg_returnsFindCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_ADDRESS, \"123, Jurong West Ave 6\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" a/123, Jurong West Ave 6\", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-05"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" a/  123, Jurong West Ave 6  \", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    public void parse_validTagArg_returnsFindCommand() {","lastModifiedDate":"2024-03-05"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-05"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_TAG, \"friends\"));","lastModifiedDate":"2024-03-05"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" t/friends\", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-05"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \" t/  friends  \", expectedFindCommand);","lastModifiedDate":"2024-03-05"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"    public void parse_validLessThanArg_returnsFindCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"                new FindCommand(new PersonDetailContainsKeywordPredicate(PREFIX_LESSTHAN, \"50\"));","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, \" lt/50\", expectedFindCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"        // whitespace before keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"        assertParseSuccess(parser, \" lt/  50  \", expectedFindCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"    public void parse_invalidLessThanArg_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"        assertParseFailure(parser, \" lt/abc\",","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"                           String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"delishad21":58,"jayllo-c":16,"-":33}},{"path":"src/test/java/seedu/address/logic/parser/ImportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Pughal77"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-20"},{"lineNumber":2,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":3,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-20"},{"lineNumber":4,"author":{"gitId":"Pughal77"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-20"},{"lineNumber":5,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-20"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":"import seedu.address.logic.commands.ImportCommand;","lastModifiedDate":"2024-03-20"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":10,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":11,"author":{"gitId":"Pughal77"},"content":"public class ImportCommandParserTest {","lastModifiedDate":"2024-03-20"},{"lineNumber":12,"author":{"gitId":"Pughal77"},"content":"    private ImportCommandParser parser \u003d new ImportCommandParser();","lastModifiedDate":"2024-03-20"},{"lineNumber":13,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":14,"author":{"gitId":"Pughal77"},"content":"    public void parse_noArgsPassed_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":15,"author":{"gitId":"Pughal77"},"content":"        // filePath left empty","lastModifiedDate":"2024-03-20"},{"lineNumber":16,"author":{"gitId":"Pughal77"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-20"},{"lineNumber":17,"author":{"gitId":"Pughal77"},"content":"                parser, \"import \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":18,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":19,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":20,"author":{"gitId":"Pughal77"},"content":"    public void parse_emptyPreamble_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":21,"author":{"gitId":"Pughal77"},"content":"        // filePath left empty","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"Pughal77"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-20"},{"lineNumber":23,"author":{"gitId":"Pughal77"},"content":"                parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":24,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":25,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":26,"author":{"gitId":"Pughal77"},"content":"    @Test","lastModifiedDate":"2024-03-20"},{"lineNumber":27,"author":{"gitId":"Pughal77"},"content":"    public void parse_prefixMissing_failure() {","lastModifiedDate":"2024-03-20"},{"lineNumber":28,"author":{"gitId":"Pughal77"},"content":"        // filePath left empty","lastModifiedDate":"2024-03-20"},{"lineNumber":29,"author":{"gitId":"Pughal77"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-20"},{"lineNumber":30,"author":{"gitId":"Pughal77"},"content":"                parser, \"import go\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-20"},{"lineNumber":31,"author":{"gitId":"Pughal77"},"content":"    }","lastModifiedDate":"2024-03-20"},{"lineNumber":32,"author":{"gitId":"Pughal77"},"content":"}","lastModifiedDate":"2024-03-20"},{"lineNumber":33,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":34,"author":{"gitId":"Pughal77"},"content":"","lastModifiedDate":"2024-03-20"}],"authorContributionMap":{"Pughal77":34}},{"path":"src/test/java/seedu/address/logic/parser/ImportExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zer0Legion"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-26"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import seedu.address.logic.commands.ImportExamCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"public class ImportExamCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"    private ImportExamCommandParser parser \u003d new ImportExamCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_noArgsPassed_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"                parser, \"importExam i/\",","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"    public void parse_notCsvFile_failure() {","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"        assertParseFailure(","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"                parser, \"importExam i/file.json\",","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ImportExamCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-26"}],"authorContributionMap":{"Zer0Legion":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"    private static final String INVALID_MATRIC \u003d \"zz\";","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"    private static final String INVALID_REFLECTION \u003d \"R\";","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    private static final String INVALID_STUDIO \u003d \"S\";","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"    private static final String VALID_MATRIC \u003d \"A1234567M\";","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"    private static final String VALID_REFLECTION \u003d \"R1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    private static final String VALID_STUDIO \u003d \"S1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":206,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":207,"author":{"gitId":"Zer0Legion"},"content":"    public void parseMatric_validMatric_success() throws ParseException {","lastModifiedDate":"2024-03-06"},{"lineNumber":208,"author":{"gitId":"Zer0Legion"},"content":"        Matric expected \u003d new Matric(VALID_MATRIC);","lastModifiedDate":"2024-03-06"},{"lineNumber":209,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, ParserUtil.parseMatric(VALID_MATRIC));","lastModifiedDate":"2024-03-06"},{"lineNumber":210,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":211,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":212,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":213,"author":{"gitId":"Zer0Legion"},"content":"    public void parseMatric_invalidMatric_throwsParseException() {","lastModifiedDate":"2024-03-06"},{"lineNumber":214,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMatric(INVALID_MATRIC));","lastModifiedDate":"2024-03-06"},{"lineNumber":215,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":216,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":217,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":218,"author":{"gitId":"Zer0Legion"},"content":"    public void parseMatricForEdit_invalidMatric_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseMatricForEdit(INVALID_MATRIC));","lastModifiedDate":"2024-03-24"},{"lineNumber":220,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":221,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":222,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":223,"author":{"gitId":"Zer0Legion"},"content":"    public void parseMatric_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMatric(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":226,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":227,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":228,"author":{"gitId":"jayllo-c"},"content":"    public void parseReflection_validReflection_success() throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":229,"author":{"gitId":"jayllo-c"},"content":"        Reflection expected \u003d new Reflection(VALID_REFLECTION);","lastModifiedDate":"2024-03-17"},{"lineNumber":230,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(expected, ParserUtil.parseReflection(VALID_REFLECTION));","lastModifiedDate":"2024-03-17"},{"lineNumber":231,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":232,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":233,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":234,"author":{"gitId":"jayllo-c"},"content":"    public void parseReflection_invalidReflection_throwsParseException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":235,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReflection(INVALID_REFLECTION));","lastModifiedDate":"2024-03-17"},{"lineNumber":236,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":237,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":238,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":239,"author":{"gitId":"jayllo-c"},"content":"    public void parseReflection_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":240,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseReflection(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":241,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":242,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":243,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":244,"author":{"gitId":"jayllo-c"},"content":"    public void parseReflection_optionalFieldMissing_returnsEmptyStudio() throws ParseException {","lastModifiedDate":"2024-03-17"},{"lineNumber":245,"author":{"gitId":"jayllo-c"},"content":"        Reflection expected \u003d new Reflection(\"\");","lastModifiedDate":"2024-03-17"},{"lineNumber":246,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReflection(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":247,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":248,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":250,"author":{"gitId":"Zer0Legion"},"content":"    public void parseReflectionForEdit_invalidReflection_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":251,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReflectionForEdit(INVALID_REFLECTION));","lastModifiedDate":"2024-03-24"},{"lineNumber":252,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":253,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":254,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":255,"author":{"gitId":"delishad21"},"content":"    public void parseStudio_validStudio_success() throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":256,"author":{"gitId":"delishad21"},"content":"        seedu.address.model.student.Studio expected \u003d new Studio(VALID_STUDIO);","lastModifiedDate":"2024-03-14"},{"lineNumber":257,"author":{"gitId":"delishad21"},"content":"        assertEquals(expected, ParserUtil.parseStudio(VALID_STUDIO));","lastModifiedDate":"2024-03-14"},{"lineNumber":258,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":259,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":260,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":261,"author":{"gitId":"delishad21"},"content":"    public void parseStudio_invalidStudio_throwsParseException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":262,"author":{"gitId":"delishad21"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudio(INVALID_STUDIO));","lastModifiedDate":"2024-03-14"},{"lineNumber":263,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":264,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":265,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":266,"author":{"gitId":"delishad21"},"content":"    public void parseStudio_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":267,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStudio(null));","lastModifiedDate":"2024-03-14"},{"lineNumber":268,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":269,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":270,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"    public void parseStudio_optionalFieldMissing_returnsEmptyStudio() throws ParseException {","lastModifiedDate":"2024-03-14"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"        seedu.address.model.student.Studio expected \u003d new Studio(\"\");","lastModifiedDate":"2024-03-14"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudio(\"\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":275,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":276,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":277,"author":{"gitId":"Zer0Legion"},"content":"    public void parseStudioForEdit_invalidStudio_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":278,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStudioForEdit(INVALID_STUDIO));","lastModifiedDate":"2024-03-24"},{"lineNumber":279,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"delishad21":27,"Zer0Legion":30,"jayllo-c":27,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/SelectExamCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.commands.SelectExamCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"public class SelectExamCommandParserTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    private SelectExamCommandParser parser \u003d new SelectExamCommandParser();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    public void parse_validArgs_returnsSelectCommand() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \"1\", new SelectExamCommand(Index.fromOneBased(1)));","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void parse_validArgs_returnsSelectCommand2() {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        assertParseSuccess(parser, \"2\", new SelectExamCommand(Index.fromOneBased(2)));","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, SelectExamCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        // no index provided","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        // non-integer index","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"a\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        // zero index","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"0\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        // negative index","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        assertParseFailure(parser, \"-1\", expectedMessage);","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":42}},{"path":"src/test/java/seedu/address/logic/util/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.logic.util;","lastModifiedDate":"2024-03-28"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-28"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-28"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2024-03-28"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-28"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.ScoreStatistics;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"/**","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":" * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":" */","lastModifiedDate":"2024-03-28"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2024-03-28"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-28"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-28"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-28"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-28"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-28"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-28"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2024-03-28"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-28"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-28"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    public boolean hasExam(Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"    public void deleteExam(Exam target) {","lastModifiedDate":"2024-03-28"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"    public void addExam(Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":107,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cPerson\u003e getPersonByEmail(String email) {","lastModifiedDate":"2024-03-29"},{"lineNumber":108,"author":{"gitId":"Zer0Legion"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"    @Override","lastModifiedDate":"2024-03-29"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"    public ObservableList\u003cExam\u003e getExamByName(String examName) {","lastModifiedDate":"2024-03-29"},{"lineNumber":113,"author":{"gitId":"Zer0Legion"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-29"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"    public void selectExam(Exam target) {","lastModifiedDate":"2024-03-28"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"    public void deselectExam() {","lastModifiedDate":"2024-03-28"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"    public ObservableValue\u003cExam\u003e getSelectedExam() {","lastModifiedDate":"2024-03-28"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"    public ObservableList\u003cExam\u003e getExamList() {","lastModifiedDate":"2024-03-28"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"    public void addExamScoreToPerson(Person target, Exam exam, Score score) {","lastModifiedDate":"2024-03-28"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-28"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"    public void removeExamScoreFromPerson(Person target, Exam exam) {","lastModifiedDate":"2024-03-28"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-28"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    @Override","lastModifiedDate":"2024-03-30"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"    public ScoreStatistics getExamScoreStatistics(Exam exam) {","lastModifiedDate":"2024-03-30"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-30"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-28"}],"authorContributionMap":{"delishad21":142,"Zer0Legion":9}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2024-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.exceptions.DuplicateExamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, Collections.emptyList());","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    public void resetData_withDuplicateExams_throwsDuplicateExamException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        // Two exams with the same identity fields","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        Exam editedMidterm \u003d new Exam(\"Midterm\", new Score(50));","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e newExams \u003d Arrays.asList(midterm, editedMidterm);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        AddressBookStub newData \u003d new AddressBookStub(Collections.emptyList(), newExams);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        assertThrows(DuplicateExamException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"    public void hasExam_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasExam(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"    public void hasExam_examNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.hasExam(new Exam(\"Midterm\", new Score(100))));","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    public void hasExam_examInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        addressBook.addExam(midterm);","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"        assertTrue(addressBook.hasExam(midterm));","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"    public void hasExam_examWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        addressBook.addExam(midterm);","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        Exam editedMidterm \u003d new Exam(\"Midterm\", new Score(50));","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        assertTrue(addressBook.hasExam(editedMidterm));","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"    public void getExamList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getExamList().remove(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList()","lastModifiedDate":"2024-03-26"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"                                                               + \", exams\u003d\" + addressBook.getExamList() + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"    public void equalsMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"        List\u003cPerson\u003e persons \u003d Arrays.asList(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e exams \u003d Arrays.asList(new Exam(\"Midterm\", new Score(100)));","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"        addressBook.resetData(new AddressBookStub(persons, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"        addressBook2.resetData(new AddressBookStub(persons, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"        assertTrue(addressBook.equals(addressBook));","lastModifiedDate":"2024-03-27"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"        assertTrue(addressBook.equals(addressBook2));","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.equals(5));","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"        List\u003cPerson\u003e persons2 \u003d Arrays.asList(new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build());","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"        addressBook2.resetData(new AddressBookStub(persons2, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.equals(addressBook2));","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"        // different exam -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e exams2 \u003d Arrays.asList(new Exam(\"Midterm\", new Score(50)));","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"        addressBook2.resetData(new AddressBookStub(persons, exams2));","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.equals(addressBook2));","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"        AddressBook addressBook2 \u003d new AddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        List\u003cPerson\u003e persons \u003d Arrays.asList(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e exams \u003d Arrays.asList(new Exam(\"Midterm\", new Score(100)));","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"        addressBook.resetData(new AddressBookStub(persons, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"        addressBook2.resetData(new AddressBookStub(persons, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        assertEquals(addressBook.hashCode(), addressBook.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"        assertEquals(addressBook.hashCode(), addressBook2.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"delishad21"},"content":"        List\u003cPerson\u003e persons2 \u003d Arrays.asList(new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build());","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"delishad21"},"content":"        addressBook2.resetData(new AddressBookStub(persons2, exams));","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"delishad21"},"content":"        assertFalse(addressBook.hashCode() \u003d\u003d addressBook2.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":196,"author":{"gitId":"delishad21"},"content":"        private final ObservableList\u003cExam\u003e exams \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":198,"author":{"gitId":"delishad21"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cExam\u003e exams) {","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":200,"author":{"gitId":"delishad21"},"content":"            this.exams.setAll(exams);","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":207,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"delishad21"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"delishad21"},"content":"        public ObservableList\u003cExam\u003e getExamList() {","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"delishad21"},"content":"            return exams;","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":214,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":215,"author":{"gitId":"Zer0Legion"},"content":"    public void getPersonByEmail_emailDoesNotExist() {","lastModifiedDate":"2024-03-29"},{"lineNumber":216,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cPerson\u003e expected \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":217,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, addressBook.getPersonByEmail(\"this person does not exist\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":218,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":219,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":220,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":221,"author":{"gitId":"Zer0Legion"},"content":"    public void getPersonByEmail_emailExists() {","lastModifiedDate":"2024-03-29"},{"lineNumber":222,"author":{"gitId":"Zer0Legion"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2024-03-29"},{"lineNumber":223,"author":{"gitId":"Zer0Legion"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-29"},{"lineNumber":224,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cPerson\u003e expected \u003d FXCollections.observableArrayList(ALICE);","lastModifiedDate":"2024-03-29"},{"lineNumber":225,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, addressBook.getPersonByEmail(ALICE.getEmail().toString()));","lastModifiedDate":"2024-03-29"},{"lineNumber":226,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":227,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":228,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":229,"author":{"gitId":"Zer0Legion"},"content":"    public void getExamByName_examExists() {","lastModifiedDate":"2024-03-29"},{"lineNumber":230,"author":{"gitId":"Zer0Legion"},"content":"        Exam exam2 \u003d new Exam(\"Midterm2\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":231,"author":{"gitId":"Zer0Legion"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-29"},{"lineNumber":232,"author":{"gitId":"Zer0Legion"},"content":"        addressBook.addExam(exam2);","lastModifiedDate":"2024-03-29"},{"lineNumber":233,"author":{"gitId":"Zer0Legion"},"content":"        addressBook.addExam(midterm);","lastModifiedDate":"2024-03-29"},{"lineNumber":234,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cExam\u003e expected \u003d FXCollections.observableArrayList(midterm);","lastModifiedDate":"2024-03-29"},{"lineNumber":235,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, addressBook.getExamByName(\"Midterm\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":236,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":237,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":238,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-29"},{"lineNumber":239,"author":{"gitId":"Zer0Legion"},"content":"    public void getExamByName_examDoesNotExist() {","lastModifiedDate":"2024-03-29"},{"lineNumber":240,"author":{"gitId":"Zer0Legion"},"content":"        ObservableList\u003cExam\u003e expected \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-29"},{"lineNumber":241,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, addressBook.getExamByName(\"this exam does not exist\"));","lastModifiedDate":"2024-03-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"delishad21":108,"Zer0Legion":29,"-":107}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.Assert.assertNull;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.PersonDetailContainsKeywordPredicate;","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"    public void hasExam_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasExam(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"    public void hasExam_examNotInAddressBook_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        assertFalse(modelManager.hasExam(new Exam(\"Midterm\", new Score(100))));","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"    public void hasExam_examInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"        modelManager.addExam(midterm);","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"        assertTrue(modelManager.hasExam(midterm));","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"    public void getFilteredExamList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getExamList().remove(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"    public void selectExam_deselectExam_getSelectedExam() {","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"        // initially, no exam is selected","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"        assertNull(modelManager.getSelectedExam().getValue());","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"        // select an exam","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"        modelManager.selectExam(exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"        assertEquals(exam, modelManager.getSelectedExam().getValue());","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"        // deselect the exam","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"        modelManager.deselectExam();","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"        assertNull(modelManager.getSelectedExam().getValue());","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-28"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    public void deleteExam_examInAddressBook_removesExamFromPersons() {","lastModifiedDate":"2024-03-28"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-28"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"        modelManager.addExam(midterm);","lastModifiedDate":"2024-03-28"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2024-03-28"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"        modelManager.selectExam(midterm);","lastModifiedDate":"2024-03-28"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"        // add score for ALICE","lastModifiedDate":"2024-03-28"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"        modelManager.addExamScoreToPerson(ALICE, midterm, new Score(85));","lastModifiedDate":"2024-03-28"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"        // delete the exam","lastModifiedDate":"2024-03-28"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        modelManager.deleteExam(midterm);","lastModifiedDate":"2024-03-28"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"        // ALICE should not have the exam in her scores","lastModifiedDate":"2024-03-28"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"        assertFalse(modelManager.getFilteredPersonList().get(0).getScores().containsKey(midterm));","lastModifiedDate":"2024-03-28"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":162,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"    public void getExamScoreStatistics_scoresInEvenPersonsInAddressBook_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"        // Add some persons with scores","lastModifiedDate":"2024-03-30"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"        Person daniel \u003d DANIEL;","lastModifiedDate":"2024-03-30"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"        Person elle \u003d ELLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"        Person fiona \u003d FIONA;","lastModifiedDate":"2024-03-30"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"        Person george \u003d GEORGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(daniel);","lastModifiedDate":"2024-03-30"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(elle);","lastModifiedDate":"2024-03-30"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(fiona);","lastModifiedDate":"2024-03-30"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(george);","lastModifiedDate":"2024-03-30"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"        // Calculate statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d modelManager.getExamScoreStatistics(midterm);","lastModifiedDate":"2024-03-30"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"        // Verify the statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"        assertEquals(55, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"        assertEquals(55, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":186,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":187,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":188,"author":{"gitId":"delishad21"},"content":"    public void getExamScoreStatistics_scoresInAllPersonsInAddressBook_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":189,"author":{"gitId":"delishad21"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":190,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":191,"author":{"gitId":"delishad21"},"content":"        // Add some persons with scores","lastModifiedDate":"2024-03-30"},{"lineNumber":192,"author":{"gitId":"delishad21"},"content":"        Person carl \u003d CARL;","lastModifiedDate":"2024-03-30"},{"lineNumber":193,"author":{"gitId":"delishad21"},"content":"        Person daniel \u003d DANIEL;","lastModifiedDate":"2024-03-30"},{"lineNumber":194,"author":{"gitId":"delishad21"},"content":"        Person elle \u003d ELLE;","lastModifiedDate":"2024-03-30"},{"lineNumber":195,"author":{"gitId":"delishad21"},"content":"        Person fiona \u003d FIONA;","lastModifiedDate":"2024-03-30"},{"lineNumber":196,"author":{"gitId":"delishad21"},"content":"        Person george \u003d GEORGE;","lastModifiedDate":"2024-03-30"},{"lineNumber":197,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":198,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(carl);","lastModifiedDate":"2024-03-30"},{"lineNumber":199,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(daniel);","lastModifiedDate":"2024-03-30"},{"lineNumber":200,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(elle);","lastModifiedDate":"2024-03-30"},{"lineNumber":201,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(fiona);","lastModifiedDate":"2024-03-30"},{"lineNumber":202,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(george);","lastModifiedDate":"2024-03-30"},{"lineNumber":203,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":204,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":205,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":206,"author":{"gitId":"delishad21"},"content":"        // Calculate statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":207,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d modelManager.getExamScoreStatistics(midterm);","lastModifiedDate":"2024-03-30"},{"lineNumber":208,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":209,"author":{"gitId":"delishad21"},"content":"        // Verify the statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":210,"author":{"gitId":"delishad21"},"content":"        assertEquals(50, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":211,"author":{"gitId":"delishad21"},"content":"        assertEquals(50, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":212,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":213,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":214,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":215,"author":{"gitId":"delishad21"},"content":"    public void getExamScoreStatistics_someScoresInPersonsInAddressBook_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":216,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":217,"author":{"gitId":"delishad21"},"content":"        ModelManager modelManager \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-30"},{"lineNumber":218,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":219,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":220,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":221,"author":{"gitId":"delishad21"},"content":"        // Calculate statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":222,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d modelManager.getExamScoreStatistics(midterm);","lastModifiedDate":"2024-03-30"},{"lineNumber":223,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":224,"author":{"gitId":"delishad21"},"content":"        // Verify the statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":225,"author":{"gitId":"delishad21"},"content":"        assertEquals(50, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":226,"author":{"gitId":"delishad21"},"content":"        assertEquals(50, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":227,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":228,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":229,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":230,"author":{"gitId":"delishad21"},"content":"    public void getExamScoreStatistics_noScoresInPersonsInAddressBook_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":231,"author":{"gitId":"delishad21"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":232,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":233,"author":{"gitId":"delishad21"},"content":"        // Add some persons without scores","lastModifiedDate":"2024-03-30"},{"lineNumber":234,"author":{"gitId":"delishad21"},"content":"        Person alice \u003d ALICE;","lastModifiedDate":"2024-03-30"},{"lineNumber":235,"author":{"gitId":"delishad21"},"content":"        Person benson \u003d BENSON;","lastModifiedDate":"2024-03-30"},{"lineNumber":236,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":237,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(alice);","lastModifiedDate":"2024-03-30"},{"lineNumber":238,"author":{"gitId":"delishad21"},"content":"        modelManager.addPerson(benson);","lastModifiedDate":"2024-03-30"},{"lineNumber":239,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":240,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":241,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":242,"author":{"gitId":"delishad21"},"content":"        // Calculate statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":243,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d modelManager.getExamScoreStatistics(midterm);","lastModifiedDate":"2024-03-30"},{"lineNumber":244,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":245,"author":{"gitId":"delishad21"},"content":"        // Verify the statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":246,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":247,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":248,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":249,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":250,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":251,"author":{"gitId":"delishad21"},"content":"    public void getExamScoreStatistics_noPersonsInAddressBook_success() {","lastModifiedDate":"2024-03-30"},{"lineNumber":252,"author":{"gitId":"delishad21"},"content":"        ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2024-03-30"},{"lineNumber":253,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":254,"author":{"gitId":"delishad21"},"content":"        Exam midterm \u003d MIDTERM;","lastModifiedDate":"2024-03-30"},{"lineNumber":255,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":256,"author":{"gitId":"delishad21"},"content":"        // Calculate statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":257,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d modelManager.getExamScoreStatistics(midterm);","lastModifiedDate":"2024-03-30"},{"lineNumber":258,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":259,"author":{"gitId":"delishad21"},"content":"        // Verify the statistics","lastModifiedDate":"2024-03-30"},{"lineNumber":260,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":261,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":262,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":263,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"delishad21"},"content":"        modelManager.updateFilteredPersonList(","lastModifiedDate":"2024-03-03"},{"lineNumber":289,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, ALICE.getName().fullName));","lastModifiedDate":"2024-03-03"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"delishad21":172,"-":128}},{"path":"src/test/java/seedu/address/model/ScoreStatisticsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model;","lastModifiedDate":"2024-03-30"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-30"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-30"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"class ScoreStatisticsTest {","lastModifiedDate":"2024-03-30"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"    void testConstructor() {","lastModifiedDate":"2024-03-30"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d new ScoreStatistics(50.0, 50.0);","lastModifiedDate":"2024-03-30"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"        assertEquals(50.0, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"        assertEquals(50.0, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    void testNoScoresConstructor() {","lastModifiedDate":"2024-03-30"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d new ScoreStatistics();","lastModifiedDate":"2024-03-30"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMean());","lastModifiedDate":"2024-03-30"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        assertEquals(-1, stats.getMedian());","lastModifiedDate":"2024-03-30"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-30"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    void testToString() {","lastModifiedDate":"2024-03-30"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics stats \u003d new ScoreStatistics(50.0, 50.0);","lastModifiedDate":"2024-03-30"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        String expected \u003d \"Mean: 50.0, Median: 50.0\";","lastModifiedDate":"2024-03-30"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertEquals(expected, stats.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-30"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        ScoreStatistics noScoresStats \u003d new ScoreStatistics();","lastModifiedDate":"2024-03-30"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"        assertEquals(\"No scores available\", noScoresStats.toString());","lastModifiedDate":"2024-03-30"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-30"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-30"}],"authorContributionMap":{"delishad21":32}},{"path":"src/test/java/seedu/address/model/exam/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"public class ExamTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"    public void isValidName() {","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        assertTrue(Exam.isValidName(\"Midterm\")); // alphanumeric characters","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        assertTrue(Exam.isValidName(\"Midterm Exam\")); // alphanumeric characters with spaces","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidName(\"\")); // empty string","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidName(\" \")); // spaces only","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidName(\"^\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidName(\"Midterm*\")); // contains non-alphanumeric characters","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    public void isValidExamScore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        assertTrue(Exam.isValidExamScore(1)); // positive score","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidExamScore(0)); // zero score","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertFalse(Exam.isValidExamScore(-1)); // negative score","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public void isSameExam() {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        Exam exam1 \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        Exam exam2 \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        Exam exam3 \u003d new Exam(\"Final\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        assertTrue(exam1.isSameExam(exam2)); // same name, same score","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        assertFalse(exam1.isSameExam(exam3)); // different name, same score","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        Exam exam1 \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        Exam exam2 \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"        Exam exam3 \u003d new Exam(\"Final\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        assertEquals(exam1, exam2); // same name, same score","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        assertFalse(exam1.equals(exam3)); // different name, same score","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public void hashCodeTest() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        int expectedHashCode \u003d exam.getName().hashCode() + exam.getMaxScore().hashCode();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        assertEquals(expectedHashCode, exam.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":56}},{"path":"src/test/java/seedu/address/model/exam/UniqueExamListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.exam;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import java.util.List;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.exceptions.DuplicateExamException;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.exceptions.ExamNotFoundException;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"public class UniqueExamListTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    private final UniqueExamList uniqueExamList \u003d new UniqueExamList();","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    public void contains_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueExamList.contains(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"    public void contains_examNotInList_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        assertFalse(uniqueExamList.contains(exam));","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    public void contains_examInList_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.add(exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        assertTrue(uniqueExamList.contains(exam));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    public void add_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueExamList.add(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    public void add_duplicateExam_throwsDuplicateExamException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.add(exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        assertThrows(DuplicateExamException.class, () -\u003e uniqueExamList.add(exam));","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    public void remove_nullExam_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueExamList.remove(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    public void remove_examDoesNotExist_throwsExamNotFoundException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        assertThrows(ExamNotFoundException.class, () -\u003e uniqueExamList.remove(exam));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    public void remove_existingExam_removesExam() {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.add(exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.remove(exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        assertFalse(uniqueExamList.contains(exam));","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    public void setExams_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueExamList.setExams((List\u003cExam\u003e) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"    public void setExams_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"        Exam examA \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        Exam examB \u003d new Exam(\"Final\", new Score(200));","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.add(examA);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e examList \u003d Collections.singletonList(examB);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        uniqueExamList.setExams(examList);","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        assertFalse(uniqueExamList.contains(examA));","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"        assertTrue(uniqueExamList.contains(examB));","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    public void setExams_listWithDuplicateExams_throwsDuplicateExamException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        Exam exam \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        List\u003cExam\u003e listWithDuplicateExams \u003d Arrays.asList(exam, exam);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"        assertThrows(DuplicateExamException.class, () -\u003e uniqueExamList.setExams(listWithDuplicateExams));","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":92}},{"path":"src/test/java/seedu/address/model/person/PersonDetailContainsKeywordAndExamPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LESSTHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MORETHAN;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"public class PersonDetailContainsKeywordAndExamPredicateTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"    public void equals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"        String firstPredicateKeyword \u003d \"55\";","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"        String secondPredicateKeyword \u003d \"45\";","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_LESSTHAN, firstPredicateKeyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_LESSTHAN, secondPredicateKeyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate thirdPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_MORETHAN, firstPredicateKeyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate fourthPredicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_MORETHAN, secondPredicateKeyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(firstPredicate, firstPredicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_LESSTHAN, firstPredicateKeyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(firstPredicate, firstPredicateCopy);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"        // same prefix, different keyword -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"        // same keyword, different prefix -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"        // different prefix and keyword -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(firstPredicate.equals(fourthPredicate));","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"    public void toString_validParams_returnsCorrectString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"        String keyword \u003d \"55\";","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_LESSTHAN, keyword, TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"        String expectedString \u003d new ToStringBuilder(\"seedu.address.model.person.\"","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"                + \"PersonDetailContainsKeywordAndExamPredicate\")","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"                .add(\"prefix\", PREFIX_LESSTHAN)","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"                .add(\"keyword\", keyword)","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"                .add(\"exam\", TypicalPersons.MIDTERM)","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"                .toString();","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(expectedString, predicate.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"    public void test_prefixGreaterThanKeyword_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_MORETHAN, \"55\", TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"        // keyword matches score","lastModifiedDate":"2024-03-27"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(TypicalPersons.FIONA));","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"        // keyword does not match score","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(TypicalPersons.ELLE));","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"    public void test_examNotFound_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_MORETHAN, \"55\", TypicalPersons.QUIZ);","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":100,"author":{"gitId":"jayllo-c"},"content":"        // keyword matches score for different exam","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(TypicalPersons.FIONA));","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"        // keyword does not match score for different exam","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(TypicalPersons.ELLE));","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":108,"author":{"gitId":"jayllo-c"},"content":"    public void test_wrongPrefix_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_NAME, \"55\", TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"jayllo-c"},"content":"        // should not match","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(TypicalPersons.FIONA));","lastModifiedDate":"2024-03-27"},{"lineNumber":116,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"jayllo-c"},"content":"    public void isExamRequired_validPrefixes_returnsTrue() {","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_MORETHAN, \"55\", TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.isExamRequired());","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":126,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":128,"author":{"gitId":"jayllo-c"},"content":"    public void isExamRequired_invalidPrefixes_returnsFalse() {","lastModifiedDate":"2024-03-27"},{"lineNumber":129,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordAndExamPredicate predicate \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"jayllo-c"},"content":"                new PersonDetailContainsKeywordAndExamPredicate(","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"jayllo-c"},"content":"                PREFIX_NAME, \"55\", TypicalPersons.MIDTERM);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.isExamRequired());","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"jayllo-c":135}},{"path":"src/test/java/seedu/address/model/person/PersonDetailContainsKeywordPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-03"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-03"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-03"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-03"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-03"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-03"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-03"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-03"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-03"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-03"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2024-03-05"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-03"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"public class PersonDetailContainsKeywordPredicateTest {","lastModifiedDate":"2024-03-03"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    public void equals() {","lastModifiedDate":"2024-03-03"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2024-03-03"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2024-03-03"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, firstPredicateKeyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, secondPredicateKeyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate thirdPredicate \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, firstPredicateKeyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate fourthPredicate \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, secondPredicateKeyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-03"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-03"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-03"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-03"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-03"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-03"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-05"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate firstPredicateCopy \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, firstPredicateKeyword);","lastModifiedDate":"2024-03-05"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-05"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        // same prefix, different keyword -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-03"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        // same keyword, different prefix -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2024-03-05"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        // different prefix and keyword -\u003e returns false","lastModifiedDate":"2024-03-05"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        assertFalse(firstPredicate.equals(fourthPredicate));","lastModifiedDate":"2024-03-05"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    public void test_nameContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        // One keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"Alice\");","lastModifiedDate":"2024-03-03"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-03"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"aLiCe\");","lastModifiedDate":"2024-03-03"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"    public void test_nameDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-03"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":76,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":77,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"Adam\");","lastModifiedDate":"2024-03-03"},{"lineNumber":78,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"        // Keywords match email, but does not match name","lastModifiedDate":"2024-03-03"},{"lineNumber":81,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_NAME, \"alice@gmail.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":82,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-03"},{"lineNumber":83,"author":{"gitId":"delishad21"},"content":"                .withEmail(\"alice@gmail.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":84,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":85,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":86,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":87,"author":{"gitId":"delishad21"},"content":"    public void test_emailContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":88,"author":{"gitId":"delishad21"},"content":"        // One keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"alice@gmail.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":91,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":92,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":93,"author":{"gitId":"delishad21"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-03"},{"lineNumber":94,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"aLiCe@GMAIl.cOm\");","lastModifiedDate":"2024-03-03"},{"lineNumber":95,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":96,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"    public void test_emailDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-03"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"adam@gmail.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withEmail(\"alice@gmail.com\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        // Keywords match name, but does not match email","lastModifiedDate":"2024-03-03"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_EMAIL, \"Alice\");","lastModifiedDate":"2024-03-03"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-03"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"                .withEmail(\"alisu@gmail.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":109,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":110,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"    public void test_phoneContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"        // One keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_PHONE, \"123456\");","lastModifiedDate":"2024-03-03"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"123456\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":121,"author":{"gitId":"delishad21"},"content":"    public void test_phoneDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-03"},{"lineNumber":122,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":123,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_PHONE, \"123456\");","lastModifiedDate":"2024-03-03"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withPhone(\"1232346\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"        // Keywords match email, but does not match phone","lastModifiedDate":"2024-03-03"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_PHONE, \"alice@gmail.com\");","lastModifiedDate":"2024-03-03"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-03"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"                .withEmail(\"alice@gmail.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"    public void test_addressContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":136,"author":{"gitId":"delishad21"},"content":"        // One keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":137,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":138,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_ADDRESS, \"Main Street\");","lastModifiedDate":"2024-03-03"},{"lineNumber":139,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":140,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":141,"author":{"gitId":"delishad21"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-03"},{"lineNumber":142,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_ADDRESS, \"mAin STReet\");","lastModifiedDate":"2024-03-03"},{"lineNumber":143,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"    public void test_addressDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-03"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_ADDRESS, \"Side Street\");","lastModifiedDate":"2024-03-03"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"        // Keywords match phone, but does not match address","lastModifiedDate":"2024-03-03"},{"lineNumber":155,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_ADDRESS, \"12345\");","lastModifiedDate":"2024-03-03"},{"lineNumber":156,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-03"},{"lineNumber":157,"author":{"gitId":"delishad21"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":158,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":160,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":161,"author":{"gitId":"delishad21"},"content":"    public void test_tagContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-03"},{"lineNumber":162,"author":{"gitId":"delishad21"},"content":"        // One keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":164,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_TAG, \"Friend\");","lastModifiedDate":"2024-03-03"},{"lineNumber":165,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":166,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":167,"author":{"gitId":"delishad21"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-03"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_TAG, \"fRieNd\");","lastModifiedDate":"2024-03-03"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Friend\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"    public void test_tagDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-03"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-03"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_TAG, \"Friend\");","lastModifiedDate":"2024-03-03"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Family\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        // Keywords match address, but does not match tag","lastModifiedDate":"2024-03-03"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_TAG, \"Main Street\");","lastModifiedDate":"2024-03-03"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-03"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"Friend\").build()));","lastModifiedDate":"2024-03-03"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":185,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":186,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"jayllo-c"},"content":"    public void test_matricContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_MATRIC_NUMBER, \"A1234567A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMatric(\"A1234567A\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"jayllo-c"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_MATRIC_NUMBER, \"a1234567a\");","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMatric(\"A1234567A\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":197,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"jayllo-c"},"content":"    public void test_matricDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"jayllo-c"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":201,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_MATRIC_NUMBER, \"A1234567A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":204,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withMatric(\"A1234567B\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"jayllo-c"},"content":"        // Keywords match tag, but does not match matric","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_MATRIC_NUMBER, \"Friend\");","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"jayllo-c"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"Friend\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"jayllo-c"},"content":"    public void test_reflectionContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_REFLECTION, \"R1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withReflection(\"R1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"jayllo-c"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_REFLECTION, \"r1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withReflection(\"R1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"jayllo-c"},"content":"    public void test_reflectionDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"jayllo-c"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_REFLECTION, \"R1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withReflection(\"R2\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"jayllo-c"},"content":"        // Keywords match matric, but does not match reflection","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_REFLECTION, \"A1234567A\");","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"jayllo-c"},"content":"                .withEmail(\"alice@email.com\").withMatric(\"A1234567A\").withReflection(\"R1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"jayllo-c"},"content":"    public void test_studioContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"jayllo-c"},"content":"        // One keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_STUDIO, \"S1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudio(\"S1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"jayllo-c"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-25"},{"lineNumber":246,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_STUDIO, \"s1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":247,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(predicate.test(new PersonBuilder().withStudio(\"S1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":248,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":249,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":250,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":251,"author":{"gitId":"jayllo-c"},"content":"    public void test_studioDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":252,"author":{"gitId":"jayllo-c"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-25"},{"lineNumber":253,"author":{"gitId":"jayllo-c"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":254,"author":{"gitId":"jayllo-c"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_STUDIO, \"S1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":255,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":256,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withStudio(\"S2\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":257,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":258,"author":{"gitId":"jayllo-c"},"content":"        // Keywords match reflection, but does not match studio","lastModifiedDate":"2024-03-25"},{"lineNumber":259,"author":{"gitId":"jayllo-c"},"content":"        predicate \u003d new PersonDetailContainsKeywordPredicate(PREFIX_STUDIO, \"R1\");","lastModifiedDate":"2024-03-25"},{"lineNumber":260,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2024-03-25"},{"lineNumber":261,"author":{"gitId":"jayllo-c"},"content":"                .withEmail(\"alice@email.com\").withReflection(\"R1\").withStudio(\"S1\").build()));","lastModifiedDate":"2024-03-25"},{"lineNumber":262,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":263,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":264,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-05"},{"lineNumber":265,"author":{"gitId":"delishad21"},"content":"    public void test_invalidPrefix_returnsFalse() {","lastModifiedDate":"2024-03-05"},{"lineNumber":266,"author":{"gitId":"delishad21"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-05"},{"lineNumber":267,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":268,"author":{"gitId":"delishad21"},"content":"        Prefix invalidPrefix \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-05"},{"lineNumber":269,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-05"},{"lineNumber":270,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(invalidPrefix, \"abc\");","lastModifiedDate":"2024-03-05"},{"lineNumber":271,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":272,"author":{"gitId":"delishad21"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Family\").build()));","lastModifiedDate":"2024-03-05"},{"lineNumber":273,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-05"},{"lineNumber":274,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":275,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-03"},{"lineNumber":276,"author":{"gitId":"delishad21"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-03"},{"lineNumber":277,"author":{"gitId":"delishad21"},"content":"        String keyword \u003d \"example\";","lastModifiedDate":"2024-03-03"},{"lineNumber":278,"author":{"gitId":"delishad21"},"content":"        PersonDetailContainsKeywordPredicate predicate \u003d","lastModifiedDate":"2024-03-03"},{"lineNumber":279,"author":{"gitId":"delishad21"},"content":"            new PersonDetailContainsKeywordPredicate(PREFIX_NAME, keyword);","lastModifiedDate":"2024-03-03"},{"lineNumber":280,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-03"},{"lineNumber":281,"author":{"gitId":"delishad21"},"content":"        String expected \u003d PersonDetailContainsKeywordPredicate.class.getCanonicalName()","lastModifiedDate":"2024-03-03"},{"lineNumber":282,"author":{"gitId":"delishad21"},"content":"                          + \"{prefix\u003d\" + PREFIX_NAME + \", \"","lastModifiedDate":"2024-03-03"},{"lineNumber":283,"author":{"gitId":"delishad21"},"content":"                          + \"keyword\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-03"},{"lineNumber":284,"author":{"gitId":"delishad21"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-03"},{"lineNumber":285,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-03"},{"lineNumber":286,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-03"}],"authorContributionMap":{"delishad21":205,"jayllo-c":81}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.MIDTERM;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"danielleloh"},"content":"        // same email, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":40,"author":{"gitId":"danielleloh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"danielleloh"},"content":"        // different email, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-11"},{"lineNumber":45,"author":{"gitId":"danielleloh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"danielleloh"},"content":"        // email differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2024-03-11"},{"lineNumber":49,"author":{"gitId":"danielleloh"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withEmail(VALID_EMAIL_BOB.toUpperCase()).build();","lastModifiedDate":"2024-03-11"},{"lineNumber":50,"author":{"gitId":"danielleloh"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2024-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"        // different matriculation number -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":92,"author":{"gitId":"jayllo-c"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withMatric(\"A1234567A\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":93,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":94,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":95,"author":{"gitId":"jayllo-c"},"content":"        // different reflection -\u003e returns false","lastModifiedDate":"2024-03-17"},{"lineNumber":96,"author":{"gitId":"jayllo-c"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withReflection(\"R10\").build();","lastModifiedDate":"2024-03-17"},{"lineNumber":97,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-17"},{"lineNumber":98,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"        // different studio -\u003e returns false","lastModifiedDate":"2024-03-14"},{"lineNumber":100,"author":{"gitId":"delishad21"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withStudio(\"S143\").build();","lastModifiedDate":"2024-03-14"},{"lineNumber":101,"author":{"gitId":"delishad21"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-14"},{"lineNumber":102,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":103,"author":{"gitId":"delishad21"},"content":"        // different scores -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"delishad21"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withScores(Collections.singletonMap(MIDTERM, new Score(70)))","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"                                              .build();","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":109,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-07"},{"lineNumber":110,"author":{"gitId":"Zer0Legion"},"content":"    public void hashCodeMethod() {","lastModifiedDate":"2024-03-07"},{"lineNumber":111,"author":{"gitId":"Zer0Legion"},"content":"        int expected \u003d Objects.hash(","lastModifiedDate":"2024-03-07"},{"lineNumber":112,"author":{"gitId":"Zer0Legion"},"content":"                ALICE.getName(), ALICE.getPhone(), ALICE.getEmail(),","lastModifiedDate":"2024-03-07"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"                ALICE.getAddress(), ALICE.getTags(), ALICE.getMatric(),","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"                ALICE.getReflection(), ALICE.getStudio(), ALICE.getScores());","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"        int actual \u003d ALICE.hashCode();","lastModifiedDate":"2024-03-07"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2024-03-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"Zer0Legion"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress()","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"                + \", tags\u003d\" + ALICE.getTags() + \", matriculation number\u003d\" + ALICE.getMatric()","lastModifiedDate":"2024-03-17"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"                + \", reflection\u003d\" + ALICE.getReflection()","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"                + \", studio\u003d\" + ALICE.getStudio()","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"                + \", scores\u003d\" + ALICE.getScores() + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"danielleloh":7,"delishad21":14,"Zer0Legion":8,"jayllo-c":11,"-":89}},{"path":"src/test/java/seedu/address/model/person/ScoreTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class ScoreTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public void constructor_invalidScore_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        int invalidScore \u003d -1;","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Score(invalidScore));","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    public void isValidScore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"        // negative score","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        assertFalse(Score.isValidScore(-1));","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"        // zero score","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"        assertTrue(Score.isValidScore(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"        // positive score","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertTrue(Score.isValidScore(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public void getScore() {","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        int scoreValue \u003d 100;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"        Score score \u003d new Score(scoreValue);","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"        assertEquals(scoreValue, score.getScore());","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    public void testToString() {","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"        int scoreValue \u003d 100;","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"        Score score \u003d new Score(scoreValue);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"        assertEquals(String.valueOf(scoreValue), score.toString());","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    public void testEquals() {","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"        Score scoreA \u003d new Score(100);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        Score scoreB \u003d new Score(100);","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"        Score scoreC \u003d new Score(200);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"        assertTrue(scoreA.equals(scoreA));","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        assertTrue(scoreA.equals(scoreB));","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"        assertFalse(scoreA.equals(1));","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        assertFalse(scoreA.equals(null));","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        // different score -\u003e returns false","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        assertFalse(scoreA.equals(scoreC));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"    public void testHashCode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"        int scoreValue \u003d 100;","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"        Score score \u003d new Score(scoreValue);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        assertEquals(Integer.hashCode(scoreValue), score.hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"delishad21":72}},{"path":"src/test/java/seedu/address/model/student/MatricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":3,"author":{"gitId":"Zer0Legion"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-06"},{"lineNumber":4,"author":{"gitId":"Zer0Legion"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-06"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"Zer0Legion"},"content":"public class MatricTest {","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"Zer0Legion"},"content":"    public void constructor_validMatricNumber_success() {","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"Zer0Legion"},"content":"        String validMatricNumber \u003d \"A1234567Z\";","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric \u003d new Matric(validMatricNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":16,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(validMatricNumber, matric.matricNumber);","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":18,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":19,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":20,"author":{"gitId":"Zer0Legion"},"content":"    public void constructor_invalidMatricNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-06"},{"lineNumber":21,"author":{"gitId":"Zer0Legion"},"content":"        String invalidMatricNumber \u003d \"InvalidMatric\";","lastModifiedDate":"2024-03-06"},{"lineNumber":22,"author":{"gitId":"Zer0Legion"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Matric(invalidMatricNumber));","lastModifiedDate":"2024-03-06"},{"lineNumber":23,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":24,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":25,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":26,"author":{"gitId":"Zer0Legion"},"content":"    public void isValidConstructorParam_emptyMatric_returnsTrue() {","lastModifiedDate":"2024-03-06"},{"lineNumber":27,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(Matric.isValidConstructorParam(\"\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":28,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":29,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"Zer0Legion"},"content":"    public void isValidConstructorParam_validMatric_returnsTrue() {","lastModifiedDate":"2024-03-06"},{"lineNumber":32,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(Matric.isValidConstructorParam(\"A1234567Z\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":33,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":34,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":35,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":36,"author":{"gitId":"Zer0Legion"},"content":"    public void isValidConstructorParam_invalidMatric_returnsFalse() {","lastModifiedDate":"2024-03-06"},{"lineNumber":37,"author":{"gitId":"Zer0Legion"},"content":"        assertFalse(Matric.isValidConstructorParam(\"InvalidMatric\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":38,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"    public void isValidMatric_validMatric_returnsTrue() {","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(Matric.isValidMatric(\"A1234567Z\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":45,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":46,"author":{"gitId":"Zer0Legion"},"content":"    public void isValidMatric_invalidMatric_returnsFalse() {","lastModifiedDate":"2024-03-06"},{"lineNumber":47,"author":{"gitId":"Zer0Legion"},"content":"        assertFalse(Matric.isValidMatric(\"InvalidMatric\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":48,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":49,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":50,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":51,"author":{"gitId":"Zer0Legion"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2024-03-06"},{"lineNumber":52,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric1 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric2 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(matric1.equals(matric2));","lastModifiedDate":"2024-03-06"},{"lineNumber":55,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"    public void equals_sameMatric_returnsTrue() {","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric1 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"Zer0Legion"},"content":"        assertTrue(matric1.equals(matric1));","lastModifiedDate":"2024-03-06"},{"lineNumber":61,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":62,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":63,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":64,"author":{"gitId":"Zer0Legion"},"content":"    public void equals_differentObject_returnsFalse() {","lastModifiedDate":"2024-03-06"},{"lineNumber":65,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric1 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":66,"author":{"gitId":"Zer0Legion"},"content":"        assertFalse(matric1.equals(\"matric1\"));","lastModifiedDate":"2024-03-06"},{"lineNumber":67,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":70,"author":{"gitId":"Zer0Legion"},"content":"    public void equals_differentMatric_returnsFalse() {","lastModifiedDate":"2024-03-06"},{"lineNumber":71,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric1 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":72,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric2 \u003d new Matric(\"A7654321Y\");","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"        assertFalse(matric1.equals(matric2));","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":75,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":77,"author":{"gitId":"Zer0Legion"},"content":"    public void hashCode_sameMatric_returnsSameHashCode() {","lastModifiedDate":"2024-03-06"},{"lineNumber":78,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric1 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":79,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric2 \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":80,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(matric1.hashCode(), matric2.hashCode());","lastModifiedDate":"2024-03-06"},{"lineNumber":81,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":82,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":83,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":84,"author":{"gitId":"Zer0Legion"},"content":"    public void toString_emptyMatric_returnsNoMatriculationNumber() {","lastModifiedDate":"2024-03-06"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric \u003d new Matric(\"\");","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(\"\", matric.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":88,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":89,"author":{"gitId":"Zer0Legion"},"content":"    @Test","lastModifiedDate":"2024-03-06"},{"lineNumber":90,"author":{"gitId":"Zer0Legion"},"content":"    public void toString_validMatric_returnsMatriculationNumber() {","lastModifiedDate":"2024-03-06"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"        Matric matric \u003d new Matric(\"A1234567Z\");","lastModifiedDate":"2024-03-06"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"        assertEquals(\"A1234567Z\", matric.toString());","lastModifiedDate":"2024-03-06"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"}","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"delishad21":1,"Zer0Legion":92,"jayllo-c":1}},{"path":"src/test/java/seedu/address/model/student/ReflectionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"jayllo-c"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-17"},{"lineNumber":2,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":3,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-17"},{"lineNumber":5,"author":{"gitId":"jayllo-c"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-17"},{"lineNumber":7,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"jayllo-c"},"content":"public class ReflectionTest {","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"jayllo-c"},"content":"    public void constructor_validReflection_success() {","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"        String validReflection \u003d \"R1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection \u003d new Reflection(validReflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"        assertEquals(validReflection, reflection.reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":19,"author":{"gitId":"jayllo-c"},"content":"    public void constructor_invalidReflection_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"        String invalidReflection \u003d \"InvalidReflection\";","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Reflection(invalidReflection));","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":23,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":25,"author":{"gitId":"jayllo-c"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":26,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Reflection(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":27,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":28,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":29,"author":{"gitId":"jayllo-c"},"content":"    @Test void isValidConstructorParam_emptyReflection_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(Reflection.isValidConstructorParam(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":33,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":34,"author":{"gitId":"jayllo-c"},"content":"    public void isValidConstructorParam_validReflection_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":35,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(Reflection.isValidConstructorParam(\"R1\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":36,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":37,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":38,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":39,"author":{"gitId":"jayllo-c"},"content":"    public void isValidConstructorParam_invalidReflection_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(Reflection.isValidConstructorParam(\"InvalidReflection\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"    public void isValidReflection_emptyReflection_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(Reflection.isEmptyReflection(\"\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":49,"author":{"gitId":"jayllo-c"},"content":"    public void isValidReflection_validReflection_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":50,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(Reflection.isValidReflection(\"R1\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":51,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":53,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"    public void isValidReflection_invalidReflection_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(Reflection.isValidReflection(\"InvalidReflection\"));","lastModifiedDate":"2024-03-17"},{"lineNumber":56,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":59,"author":{"gitId":"jayllo-c"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection1 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection2 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(reflection1.equals(reflection2));","lastModifiedDate":"2024-03-17"},{"lineNumber":63,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":64,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":65,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":66,"author":{"gitId":"jayllo-c"},"content":"    public void equals_sameReflection_returnsTrue() {","lastModifiedDate":"2024-03-17"},{"lineNumber":67,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection1 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":68,"author":{"gitId":"jayllo-c"},"content":"        assertTrue(reflection1.equals(reflection1));","lastModifiedDate":"2024-03-17"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"    public void equals_differentReflection_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":73,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection1 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":74,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection2 \u003d new Reflection(\"R2\");","lastModifiedDate":"2024-03-17"},{"lineNumber":75,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(reflection1.equals(reflection2));","lastModifiedDate":"2024-03-17"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":78,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"    public void equals_differentType_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection1 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(reflection1.equals(5));","lastModifiedDate":"2024-03-17"},{"lineNumber":82,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":83,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":84,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":85,"author":{"gitId":"jayllo-c"},"content":"    public void equals_null_returnsFalse() {","lastModifiedDate":"2024-03-17"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"        Reflection reflection1 \u003d new Reflection(\"R1\");","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"        assertFalse(reflection1.equals(null));","lastModifiedDate":"2024-03-17"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"jayllo-c"},"content":"}","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"jayllo-c":89}},{"path":"src/test/java/seedu/address/model/student/StudioTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"delishad21"},"content":"package seedu.address.model.student;","lastModifiedDate":"2024-03-14"},{"lineNumber":2,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-14"},{"lineNumber":4,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-14"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-14"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-14"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-14"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"delishad21"},"content":"public class StudioTest {","lastModifiedDate":"2024-03-14"},{"lineNumber":11,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public void constructor_validStudioNumber_success() {","lastModifiedDate":"2024-03-14"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"        String validStudioNumber \u003d \"S2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"        Studio studio \u003d new Studio(validStudioNumber);","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"        assertEquals(validStudioNumber, studio.studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":19,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"delishad21"},"content":"    public void constructor_invalidStudioNumber_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"delishad21"},"content":"        String invalidStudioNumber \u003d \"InvalidStudio\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Studio(invalidStudioNumber));","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":24,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":25,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"    public void isValidConstructorParam_emptyStudio_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":27,"author":{"gitId":"delishad21"},"content":"        assertTrue(Studio.isValidConstructorParam(\"\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":30,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":31,"author":{"gitId":"delishad21"},"content":"    public void isValidConstructorParam_validStudio_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"        assertTrue(Studio.isValidConstructorParam(\"S2\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public void isValidConstructorParam_invalidStudio_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"        assertFalse(Studio.isValidConstructorParam(\"InvalidStudio\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":38,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":39,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":40,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    public void isValidStudio_validStudio_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        assertTrue(Studio.isValidStudio(\"S2\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    public void isValidStudio_invalidStudio_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"        assertFalse(Studio.isValidStudio(\"InvalidStudio\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"    public void equals_sameValues_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"        Studio studio1 \u003d new Studio(\"S2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"        Studio studio2 \u003d new Studio(\"S2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"        assertTrue(studio1.equals(studio2));","lastModifiedDate":"2024-03-14"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":57,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"    public void equals_sameStudio_returnsTrue() {","lastModifiedDate":"2024-03-14"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"        Studio studio1 \u003d new Studio(\"S2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"delishad21"},"content":"        assertTrue(studio1.equals(studio1));","lastModifiedDate":"2024-03-14"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"    public void equals_differentStudio_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"        Studio studio1 \u003d new Studio(\"S2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"        Studio studio2 \u003d new Studio(\"S3\");","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"        assertFalse(studio1.equals(studio2));","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"    @Test void equals_differentObject_returnsFalse() {","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        Studio studio1 \u003d new Studio(\"S2\");","lastModifiedDate":"2024-03-14"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"        assertFalse(studio1.equals(\"studio1\"));","lastModifiedDate":"2024-03-14"},{"lineNumber":73,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":74,"author":{"gitId":"delishad21"},"content":"}","lastModifiedDate":"2024-03-14"}],"authorContributionMap":{"delishad21":74}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"delishad21"},"content":"import static seedu.address.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"jayllo-c"},"content":"    private static final String INVALID_MATRIC \u003d \"zz\";","lastModifiedDate":"2024-03-17"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"    private static final String INVALID_REFLECTION \u003d \"R\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    private static final String INVALID_STUDIO \u003d \"T23\";","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"Zer0Legion"},"content":"    private static final String VALID_MATRIC \u003d \"A1234567M\";","lastModifiedDate":"2024-03-06"},{"lineNumber":42,"author":{"gitId":"jayllo-c"},"content":"    private static final String VALID_REFLECTION \u003d \"R1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"    private static final String VALID_STUDIO \u003d \"S1\";","lastModifiedDate":"2024-03-14"},{"lineNumber":44,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"    private static final String VALID_EXAM_NAME \u003d \"Midterm\";","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"delishad21"},"content":"    private static final int VALID_EXAM_MAX_SCORE \u003d 100;","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"delishad21"},"content":"    private static final int VALID_EXAM_SCORE \u003d 70;","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"    private static final List\u003cJsonAdaptedExamScore\u003e EMPTY_SCORES \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"delishad21"},"content":"    private static final List\u003cJsonAdaptedExamScore\u003e VALID_SCORES \u003d new ArrayList\u003c\u003e(List.of(","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            new JsonAdaptedExamScore(VALID_EXAM_NAME, VALID_EXAM_MAX_SCORE, VALID_EXAM_SCORE)","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"delishad21"},"content":"    ));","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"    public void toModelType_validPersonDetailsWithScores_returnsPerson() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(GEORGE);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"delishad21"},"content":"        assertEquals(GEORGE, person.toModelType());","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"jayllo-c"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"                                      VALID_ADDRESS, VALID_TAGS, VALID_MATRIC, VALID_REFLECTION,","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"delishad21"},"content":"                                      VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"jayllo-c"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"delishad21"},"content":"                VALID_TAGS, VALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"jayllo-c"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":89,"author":{"gitId":"delishad21"},"content":"                                      VALID_ADDRESS, VALID_TAGS, VALID_MATRIC,","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"delishad21"},"content":"                                      VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"delishad21"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":98,"author":{"gitId":"delishad21"},"content":"                                                         VALID_TAGS, VALID_MATRIC, VALID_REFLECTION,","lastModifiedDate":"2024-03-26"},{"lineNumber":99,"author":{"gitId":"delishad21"},"content":"                                                         VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"delishad21"},"content":"                                      VALID_TAGS, VALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"                VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"                VALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"                                                        VALID_TAGS, VALID_MATRIC, VALID_REFLECTION,","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"                                                        VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"Zer0Legion"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2024-03-06"},{"lineNumber":134,"author":{"gitId":"delishad21"},"content":"                VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS, VALID_MATRIC,","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"delishad21"},"content":"                VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"                                      invalidTags, VALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":151,"author":{"gitId":"jayllo-c"},"content":"    public void toModelType_invalidMatric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":152,"author":{"gitId":"jayllo-c"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":153,"author":{"gitId":"jayllo-c"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":154,"author":{"gitId":"delishad21"},"content":"                        VALID_ADDRESS, VALID_TAGS, INVALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"jayllo-c"},"content":"        String expectedMessage \u003d Matric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":159,"author":{"gitId":"jayllo-c"},"content":"    @Test","lastModifiedDate":"2024-03-17"},{"lineNumber":160,"author":{"gitId":"jayllo-c"},"content":"    public void toModelType_invalidReflection_throwsIllegalValueException() {","lastModifiedDate":"2024-03-17"},{"lineNumber":161,"author":{"gitId":"jayllo-c"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-17"},{"lineNumber":162,"author":{"gitId":"jayllo-c"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2024-03-17"},{"lineNumber":163,"author":{"gitId":"delishad21"},"content":"                        VALID_ADDRESS, VALID_TAGS, VALID_MATRIC, INVALID_REFLECTION, VALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"jayllo-c"},"content":"        String expectedMessage \u003d Reflection.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-17"},{"lineNumber":165,"author":{"gitId":"jayllo-c"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-17"},{"lineNumber":166,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":167,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-14"},{"lineNumber":169,"author":{"gitId":"delishad21"},"content":"    public void toModelType_invalidStudio_throwsIllegalValueException() {","lastModifiedDate":"2024-03-14"},{"lineNumber":170,"author":{"gitId":"delishad21"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-14"},{"lineNumber":171,"author":{"gitId":"delishad21"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-14"},{"lineNumber":172,"author":{"gitId":"delishad21"},"content":"                                      VALID_TAGS, VALID_MATRIC, VALID_REFLECTION, INVALID_STUDIO, EMPTY_SCORES);","lastModifiedDate":"2024-03-26"},{"lineNumber":173,"author":{"gitId":"delishad21"},"content":"        String expectedMessage \u003d Studio.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-14"},{"lineNumber":174,"author":{"gitId":"delishad21"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-14"},{"lineNumber":175,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":176,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"delishad21"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"delishad21"},"content":"    public void toModelType_invalidScores_throwsIllegalValueException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"delishad21"},"content":"        List\u003cJsonAdaptedExamScore\u003e invalidScores \u003d new ArrayList\u003c\u003e(VALID_SCORES);","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"delishad21"},"content":"        invalidScores.add(new JsonAdaptedExamScore(VALID_EXAM_NAME, VALID_EXAM_MAX_SCORE, -1));","lastModifiedDate":"2024-03-27"},{"lineNumber":181,"author":{"gitId":"delishad21"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"delishad21"},"content":"                VALID_TAGS, VALID_MATRIC, VALID_REFLECTION, VALID_STUDIO, invalidScores);","lastModifiedDate":"2024-03-27"},{"lineNumber":183,"author":{"gitId":"delishad21"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2024-03-27"},{"lineNumber":184,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"delishad21":56,"Zer0Legion":3,"jayllo-c":26,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"Pughal77"},"content":" import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"Pughal77"},"content":" import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"Pughal77"},"content":" import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"Pughal77"},"content":" import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataLoadingException() {","lastModifiedDate":"2023-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2024-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"Pughal77"},"content":"        jsonAddressBookStorage.saveAddressBook(original);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"Pughal77"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get();","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Pughal77":6,"-":100}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataLoadingException;","lastModifiedDate":"2023-06-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataLoadingException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2023-06-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataLoadingException {","lastModifiedDate":"2023-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"Zer0Legion"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"avengersassemble.json\"));","lastModifiedDate":"2024-03-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataLoadingException, IOException {","lastModifiedDate":"2023-06-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"Zer0Legion":1,"-":122}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"delishad21"},"content":"// import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"// import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"// import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2024-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"delishad21":3,"-":68}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"Zer0Legion"},"content":"        descriptor.setMatric(person.getMatric());","lastModifiedDate":"2024-03-06"},{"lineNumber":44,"author":{"gitId":"jayllo-c"},"content":"        descriptor.setReflection(person.getReflection());","lastModifiedDate":"2024-03-17"},{"lineNumber":45,"author":{"gitId":"delishad21"},"content":"        descriptor.setStudio(person.getStudio());","lastModifiedDate":"2024-03-14"},{"lineNumber":46,"author":{"gitId":"jayllo-c"},"content":"        // descriptor will never have setScore as it is not used in EditCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-07"},{"lineNumber":92,"author":{"gitId":"Zer0Legion"},"content":"     * Sets the {@code Matric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-07"},{"lineNumber":93,"author":{"gitId":"Zer0Legion"},"content":"     * @param matric matric number of the person","lastModifiedDate":"2024-03-07"},{"lineNumber":94,"author":{"gitId":"Zer0Legion"},"content":"     * @return EditPersonDescriptorBuilder object","lastModifiedDate":"2024-03-07"},{"lineNumber":95,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-07"},{"lineNumber":96,"author":{"gitId":"Zer0Legion"},"content":"    public EditPersonDescriptorBuilder withMatric(String matric) {","lastModifiedDate":"2024-03-07"},{"lineNumber":97,"author":{"gitId":"Zer0Legion"},"content":"        descriptor.setMatric(new Matric(matric));","lastModifiedDate":"2024-03-07"},{"lineNumber":98,"author":{"gitId":"Zer0Legion"},"content":"        return this;","lastModifiedDate":"2024-03-07"},{"lineNumber":99,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-07"},{"lineNumber":100,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-07"},{"lineNumber":101,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":102,"author":{"gitId":"jayllo-c"},"content":"     * Sets the {@code Reflection} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":103,"author":{"gitId":"jayllo-c"},"content":"     * @param reflection reflection of the person","lastModifiedDate":"2024-03-17"},{"lineNumber":104,"author":{"gitId":"jayllo-c"},"content":"     * @return EditPersonDescriptorBuilder object","lastModifiedDate":"2024-03-17"},{"lineNumber":105,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":106,"author":{"gitId":"jayllo-c"},"content":"    public EditPersonDescriptorBuilder withReflection(String reflection) {","lastModifiedDate":"2024-03-17"},{"lineNumber":107,"author":{"gitId":"jayllo-c"},"content":"        descriptor.setReflection(new Reflection(reflection));","lastModifiedDate":"2024-03-17"},{"lineNumber":108,"author":{"gitId":"jayllo-c"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":109,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":110,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":111,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"delishad21"},"content":"     * Sets the {@code Studio} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"delishad21"},"content":"     * @param studio studio of the person","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"delishad21"},"content":"     * @return EditPersonDescriptorBuilder object","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":116,"author":{"gitId":"delishad21"},"content":"    public EditPersonDescriptorBuilder withStudio(String studio) {","lastModifiedDate":"2024-03-14"},{"lineNumber":117,"author":{"gitId":"delishad21"},"content":"        descriptor.setStudio(new Studio(studio));","lastModifiedDate":"2024-03-14"},{"lineNumber":118,"author":{"gitId":"delishad21"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":119,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":120,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"delishad21":12,"Zer0Legion":11,"jayllo-c":14,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"delishad21"},"content":"import java.util.HashMap;","lastModifiedDate":"2024-03-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"delishad21"},"content":"import java.util.Map;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":8,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Matric;","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"jayllo-c"},"content":"import seedu.address.model.student.Reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.student.Studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"Zer0Legion"},"content":"    public static final String DEFAULT_MATRIC \u003d \"A1234567X\";","lastModifiedDate":"2024-03-06"},{"lineNumber":31,"author":{"gitId":"jayllo-c"},"content":"    public static final String DEFAULT_REFLECTION \u003d \"R1\";","lastModifiedDate":"2024-03-17"},{"lineNumber":32,"author":{"gitId":"delishad21"},"content":"    public static final String DEFAULT_STUDIO \u003d \"S2\";","lastModifiedDate":"2024-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"Zer0Legion"},"content":"    private Matric matric;","lastModifiedDate":"2024-03-06"},{"lineNumber":40,"author":{"gitId":"jayllo-c"},"content":"    private Reflection reflection;","lastModifiedDate":"2024-03-17"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"    private Studio studio;","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"    private Map\u003cExam, Score\u003e scores;","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"Zer0Legion"},"content":"        matric \u003d new Matric(DEFAULT_MATRIC);","lastModifiedDate":"2024-03-06"},{"lineNumber":54,"author":{"gitId":"jayllo-c"},"content":"        reflection \u003d new Reflection(DEFAULT_REFLECTION);","lastModifiedDate":"2024-03-17"},{"lineNumber":55,"author":{"gitId":"delishad21"},"content":"        studio \u003d new Studio(DEFAULT_STUDIO);","lastModifiedDate":"2024-03-14"},{"lineNumber":56,"author":{"gitId":"delishad21"},"content":"        scores \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"Zer0Legion"},"content":"        matric \u003d personToCopy.getMatric();","lastModifiedDate":"2024-03-06"},{"lineNumber":69,"author":{"gitId":"jayllo-c"},"content":"        reflection \u003d personToCopy.getReflection();","lastModifiedDate":"2024-03-17"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"        studio \u003d personToCopy.getStudio();","lastModifiedDate":"2024-03-14"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"        scores \u003d personToCopy.getScores();","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"Zer0Legion"},"content":"    /**","lastModifiedDate":"2024-03-06"},{"lineNumber":115,"author":{"gitId":"Zer0Legion"},"content":"     * Sets the {@code Matric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-06"},{"lineNumber":116,"author":{"gitId":"Zer0Legion"},"content":"     * @param matric matric number","lastModifiedDate":"2024-03-06"},{"lineNumber":117,"author":{"gitId":"Zer0Legion"},"content":"     * @return PersonBuilder","lastModifiedDate":"2024-03-06"},{"lineNumber":118,"author":{"gitId":"Zer0Legion"},"content":"     */","lastModifiedDate":"2024-03-06"},{"lineNumber":119,"author":{"gitId":"Zer0Legion"},"content":"    public PersonBuilder withMatric(String matric) {","lastModifiedDate":"2024-03-06"},{"lineNumber":120,"author":{"gitId":"Zer0Legion"},"content":"        this.matric \u003d new Matric(matric);","lastModifiedDate":"2024-03-06"},{"lineNumber":121,"author":{"gitId":"Zer0Legion"},"content":"        return this;","lastModifiedDate":"2024-03-06"},{"lineNumber":122,"author":{"gitId":"Zer0Legion"},"content":"    }","lastModifiedDate":"2024-03-06"},{"lineNumber":123,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":124,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-14"},{"lineNumber":125,"author":{"gitId":"delishad21"},"content":"     * Sets the {@code Studio} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-14"},{"lineNumber":126,"author":{"gitId":"delishad21"},"content":"     * @param studio studio number","lastModifiedDate":"2024-03-14"},{"lineNumber":127,"author":{"gitId":"delishad21"},"content":"     * @return PersonBuilder","lastModifiedDate":"2024-03-14"},{"lineNumber":128,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-14"},{"lineNumber":129,"author":{"gitId":"delishad21"},"content":"    public PersonBuilder withStudio(String studio) {","lastModifiedDate":"2024-03-14"},{"lineNumber":130,"author":{"gitId":"delishad21"},"content":"        this.studio \u003d new Studio(studio);","lastModifiedDate":"2024-03-14"},{"lineNumber":131,"author":{"gitId":"delishad21"},"content":"        return this;","lastModifiedDate":"2024-03-14"},{"lineNumber":132,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-14"},{"lineNumber":133,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":134,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":135,"author":{"gitId":"jayllo-c"},"content":"     * Sets the {@code Reflection} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-17"},{"lineNumber":136,"author":{"gitId":"jayllo-c"},"content":"     * @param reflection reflection","lastModifiedDate":"2024-03-17"},{"lineNumber":137,"author":{"gitId":"jayllo-c"},"content":"     * @return PersonBuilder","lastModifiedDate":"2024-03-17"},{"lineNumber":138,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":139,"author":{"gitId":"jayllo-c"},"content":"    public PersonBuilder withReflection(String reflection) {","lastModifiedDate":"2024-03-17"},{"lineNumber":140,"author":{"gitId":"jayllo-c"},"content":"        this.reflection \u003d new Reflection(reflection);","lastModifiedDate":"2024-03-17"},{"lineNumber":141,"author":{"gitId":"jayllo-c"},"content":"        return this;","lastModifiedDate":"2024-03-17"},{"lineNumber":142,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-17"},{"lineNumber":143,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-17"},{"lineNumber":144,"author":{"gitId":"delishad21"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"delishad21"},"content":"     * Sets the {@code Exam} and {@code Score} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"delishad21"},"content":"     * @param scores exam scores","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"delishad21"},"content":"     * @return PersonBuilder","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"delishad21"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"delishad21"},"content":"    public PersonBuilder withScores(Map\u003cExam, Score\u003e scores) {","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"delishad21"},"content":"        this.scores \u003d scores;","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"delishad21"},"content":"        return this;","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"delishad21"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":153,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-17"},{"lineNumber":155,"author":{"gitId":"jayllo-c"},"content":"     * Builds the person object.","lastModifiedDate":"2024-03-17"},{"lineNumber":156,"author":{"gitId":"jayllo-c"},"content":"     * @return Person","lastModifiedDate":"2024-03-17"},{"lineNumber":157,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":159,"author":{"gitId":"delishad21"},"content":"        return new Person(name, phone, email, address, tags, matric, reflection, studio, scores);","lastModifiedDate":"2024-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"delishad21":33,"Zer0Legion":14,"jayllo-c":20,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MATRIC_NUMBER;","lastModifiedDate":"2024-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REFLECTION;","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDIO;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Zer0Legion"},"content":"        sb.append(PREFIX_MATRIC_NUMBER + person.getMatric().matricNumber + \" \");","lastModifiedDate":"2024-03-06"},{"lineNumber":41,"author":{"gitId":"jayllo-c"},"content":"        sb.append(PREFIX_REFLECTION + person.getReflection().reflection + \" \");","lastModifiedDate":"2024-03-17"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"        sb.append(PREFIX_STUDIO + person.getStudio().studio + \" \");","lastModifiedDate":"2024-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Zer0Legion"},"content":"        descriptor.getMatric().ifPresent(","lastModifiedDate":"2024-03-06"},{"lineNumber":59,"author":{"gitId":"Zer0Legion"},"content":"                matric -\u003e sb.append(PREFIX_MATRIC_NUMBER).append(matric.matricNumber).append(\" \"));","lastModifiedDate":"2024-03-06"},{"lineNumber":60,"author":{"gitId":"jayllo-c"},"content":"        descriptor.getReflection().ifPresent(","lastModifiedDate":"2024-03-17"},{"lineNumber":61,"author":{"gitId":"jayllo-c"},"content":"                reflection -\u003e sb.append(PREFIX_REFLECTION).append(reflection.reflection).append(\" \"));","lastModifiedDate":"2024-03-17"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"        descriptor.getStudio().ifPresent(studio -\u003e sb.append(PREFIX_STUDIO).append(studio.studio).append(\" \"));","lastModifiedDate":"2024-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"jayllo-c"},"content":"        descriptor.getScores().ifPresent(","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"jayllo-c"},"content":"                scores -\u003e scores.forEach((exam, score) -\u003e sb.append(exam.getName()).append(score).append(\" \")));","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"Zer0Legion"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"delishad21":3,"Zer0Legion":5,"jayllo-c":6,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"delishad21"},"content":"    public static final Index INDEX_FIRST_EXAM \u003d Index.fromOneBased(1);","lastModifiedDate":"2024-03-26"},{"lineNumber":13,"author":{"gitId":"delishad21"},"content":"    public static final Index INDEX_SECOND_EXAM \u003d Index.fromOneBased(2);","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"delishad21":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_AMY;","lastModifiedDate":"2024-03-06"},{"lineNumber":8,"author":{"gitId":"Zer0Legion"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MATRIC_NUMBER_BOB;","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REFLECTION_AMY;","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"jayllo-c"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REFLECTION_BOB;","lastModifiedDate":"2024-03-17"},{"lineNumber":15,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDIO_AMY;","lastModifiedDate":"2024-03-14"},{"lineNumber":16,"author":{"gitId":"delishad21"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STUDIO_BOB;","lastModifiedDate":"2024-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"delishad21"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.exam.Exam;","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"delishad21"},"content":"import seedu.address.model.person.Score;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"delishad21"},"content":"    public static final Exam MIDTERM \u003d new Exam(\"Midterm\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"delishad21"},"content":"    public static final Exam FINAL \u003d new Exam(\"Final\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"delishad21"},"content":"    public static final Exam QUIZ \u003d new Exam(\"Quiz\", new Score(100));","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"delishad21"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"delishad21"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withMatric(\"A1111111A\")","lastModifiedDate":"2024-03-14"},{"lineNumber":42,"author":{"gitId":"delishad21"},"content":"            .withReflection(\"R1\").withStudio(\"S1\")","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"delishad21"},"content":"            .build();","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"jayllo-c"},"content":"            .withTags(\"owesMoney\", \"friends\").withMatric(\"A2222222A\")","lastModifiedDate":"2024-03-17"},{"lineNumber":48,"author":{"gitId":"delishad21"},"content":"            .withReflection(\"R2\").withStudio(\"S2\")","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"delishad21"},"content":"            .build();","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2024-03-14"},{"lineNumber":52,"author":{"gitId":"jayllo-c"},"content":"            .withMatric(\"A3333333A\")","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"delishad21"},"content":"            .withReflection(\"R3\").withStudio(\"S3\")","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"delishad21"},"content":"            .withScores(Collections.singletonMap(MIDTERM, new Score(30))).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"Zer0Legion"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2024-03-06"},{"lineNumber":57,"author":{"gitId":"jayllo-c"},"content":"            .withTags(\"friends\").withMatric(\"A4444444A\")","lastModifiedDate":"2024-03-17"},{"lineNumber":58,"author":{"gitId":"delishad21"},"content":"            .withReflection(\"R4\").withStudio(\"S4\")","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"delishad21"},"content":"            .withScores(Collections.singletonMap(MIDTERM, new Score(40))).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2024-03-14"},{"lineNumber":62,"author":{"gitId":"delishad21"},"content":"            .withMatric(\"A5555555A\").withReflection(\"R5\").withStudio(\"S5\")","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"delishad21"},"content":"            .withScores(Collections.singletonMap(MIDTERM, new Score(50))).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"delishad21"},"content":"            .withMatric(\"A6666666A\").withReflection(\"R6\").withStudio(\"S6\")","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"delishad21"},"content":"            .withScores(Collections.singletonMap(MIDTERM, new Score(60))).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2024-03-14"},{"lineNumber":70,"author":{"gitId":"delishad21"},"content":"            .withMatric(\"A7777777A\").withReflection(\"R7\").withStudio(\"S7\")","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"delishad21"},"content":"            .withScores(Collections.singletonMap(MIDTERM, new Score(70))).build();","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\")","lastModifiedDate":"2024-03-14"},{"lineNumber":76,"author":{"gitId":"jayllo-c"},"content":"            .withMatric(\"A1234567X\")","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"jayllo-c"},"content":"            .withReflection(\"R5\").withStudio(\"S3\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"delishad21"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\")","lastModifiedDate":"2024-03-14"},{"lineNumber":80,"author":{"gitId":"jayllo-c"},"content":"            .withMatric(\"A1234567X\")","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"jayllo-c"},"content":"            .withReflection(\"R5\").withStudio(\"S3\").build();","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"Zer0Legion"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-06"},{"lineNumber":86,"author":{"gitId":"jayllo-c"},"content":"            .withTags(VALID_TAG_FRIEND).withMatric(VALID_MATRIC_NUMBER_AMY)","lastModifiedDate":"2024-03-17"},{"lineNumber":87,"author":{"gitId":"jayllo-c"},"content":"            .withReflection(VALID_REFLECTION_AMY).withStudio(VALID_STUDIO_AMY).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":90,"author":{"gitId":"jayllo-c"},"content":"            .withMatric(VALID_MATRIC_NUMBER_BOB).withReflection(VALID_REFLECTION_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"jayllo-c"},"content":"            .withStudio(VALID_STUDIO_BOB).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":105,"author":{"gitId":"delishad21"},"content":"        for (Exam exam : Arrays.asList(MIDTERM, FINAL, QUIZ)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"delishad21"},"content":"            ab.addExam(exam);","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"delishad21"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":111,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":112,"author":{"gitId":"jayllo-c"},"content":"     * Returns a list of typical persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":113,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":117,"author":{"gitId":"jayllo-c"},"content":"","lastModifiedDate":"2024-03-11"},{"lineNumber":118,"author":{"gitId":"jayllo-c"},"content":"    /**","lastModifiedDate":"2024-03-11"},{"lineNumber":119,"author":{"gitId":"jayllo-c"},"content":"     * Returns the emails of all the typical persons.","lastModifiedDate":"2024-03-11"},{"lineNumber":120,"author":{"gitId":"jayllo-c"},"content":"     */","lastModifiedDate":"2024-03-11"},{"lineNumber":121,"author":{"gitId":"jayllo-c"},"content":"    public static String getTypicalPersonsEmails() {","lastModifiedDate":"2024-03-11"},{"lineNumber":122,"author":{"gitId":"jayllo-c"},"content":"        StringBuilder emails \u003d new StringBuilder();","lastModifiedDate":"2024-03-11"},{"lineNumber":123,"author":{"gitId":"jayllo-c"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2024-03-11"},{"lineNumber":124,"author":{"gitId":"jayllo-c"},"content":"            emails.append(person.getEmail().value).append(\"; \");","lastModifiedDate":"2024-03-12"},{"lineNumber":125,"author":{"gitId":"jayllo-c"},"content":"        }","lastModifiedDate":"2024-03-11"},{"lineNumber":126,"author":{"gitId":"jayllo-c"},"content":"        return emails.toString().trim();","lastModifiedDate":"2024-03-11"},{"lineNumber":127,"author":{"gitId":"jayllo-c"},"content":"    }","lastModifiedDate":"2024-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"delishad21":33,"Zer0Legion":4,"jayllo-c":27,"-":64}}]
