[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2324S2-CS2103T-F10-3/tp/graph/badge.svg?token\u003dX33TASQ7AY)](https://codecov.io/gh/AY2324S2-CS2103T-F10-3/tp)","lastModifiedDate":"2024-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"* This is **a Command Line Interface (CLI) application for users who prefer CLI to keep track of healthcare appointments and patient information**.\u003cbr\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"  * store and retrieve patient information such as name, contact information and medical allergies","lastModifiedDate":"2024-03-06"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"  * schedule an appointment for the patient","lastModifiedDate":"2024-03-06"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"  * view upcoming appointments in a concise and accessible format","lastModifiedDate":"2024-03-06"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"* The project simulates an ongoing software project for a desktop application (called CLInic) used for managing patient and appointment details.","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"  * It is built on the AddressBook-Level3 project.","lastModifiedDate":"2024-03-06"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"  * It is **written in OOP fashion**.","lastModifiedDate":"2024-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-06"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2024-03-06"}],"authorContributionMap":{"xuelinglow":10,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"About Us\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"# About Us","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"### Ang Zi Jun Dayn","lastModifiedDate":"2024-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"\u003cimg src\u003d\"images/dayn-1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"[[github](https://github.com/dayn-1)]","lastModifiedDate":"2024-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"* Role: Testing","lastModifiedDate":"2024-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"### Chee Wei Xiong Clifton","lastModifiedDate":"2024-03-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"\u003cimg src\u003d\"images/cliftonchee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"[[github](http://github.com/cliftonchee)]","lastModifiedDate":"2024-03-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"* Role: Documentation","lastModifiedDate":"2024-03-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"### Jaime Ng Jia Min","lastModifiedDate":"2024-03-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"\u003cimg src\u003d\"images/thatgirljam.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"[[github](http://github.com/thatgirljam)]","lastModifiedDate":"2024-03-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"* Role: Scheduling and Tracking","lastModifiedDate":"2024-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Responsibilities: Data","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"### Lim Rik","lastModifiedDate":"2024-03-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"\u003cimg src\u003d\"images/limrik.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"[[github](http://github.com/limrik)]","lastModifiedDate":"2024-03-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"* Role: Code quality","lastModifiedDate":"2024-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"### Low Xue Ling","lastModifiedDate":"2024-03-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"\u003cimg src\u003d\"images/xuelinglow.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2024-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"[[github](http://github.com/xuelinglow)]","lastModifiedDate":"2024-03-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"* Role: Integration","lastModifiedDate":"2024-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dayn-1":4,"-":36,"cliftonchee":16}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"Developer Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"# CLInic Developer Guide","lastModifiedDate":"2024-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"_{ list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well }_","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureDiagram.puml\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**`Main`** (consisting of classes [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java)) is in charge of the app launch and shut down.","lastModifiedDate":"2023-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* At app launch, it initializes the other components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At shut down, it shuts down the other components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"The bulk of the app\u0027s work is done by the following four components:","lastModifiedDate":"2023-09-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete S1234567A`.","lastModifiedDate":"2024-03-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ArchitectureSequenceDiagram.puml\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ComponentManagers.puml\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UiClassDiagram.puml\" alt\u003d\"Structure of the UI Component\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/LogicClassDiagram.puml\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"The sequence diagram below illustrates the interactions within the `Logic` component, taking `execute(\"delete S1234567A\")` API call as an example.","lastModifiedDate":"2024-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"\u003cpuml src\u003d\"diagrams/DeleteSequenceDiagram.puml\" alt\u003d\"Interactions Inside the Logic Component for the `delete S1234567A` Command\" /\u003e","lastModifiedDate":"2024-03-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline continues till the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it is passed to an `AddressBookParser` object which in turn creates a parser that matches the command (e.g., `DeleteCommandParser`) and uses it to parse the command.","lastModifiedDate":"2023-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `DeleteCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to delete a person).\u003cbr\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Note that although this is shown as a single step in the diagram above (for simplicity), in the code it can take several interactions (between the command object and the `Model`) to achieve.","lastModifiedDate":"2024-02-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ParserClasses.puml\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/ModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"* stores the address book data i.e., all `Person` and `Appointment` objects (which are contained in a `UniquePersonList` and `AppointmentList` objects respectively).","lastModifiedDate":"2024-03-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"**Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/BetterModelClassDiagram.puml\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/StorageClassDiagram.puml\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in JSON format, and read them back into corresponding objects.","lastModifiedDate":"2023-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState0.puml\" alt\u003d\"UndoRedoState0\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState1.puml\" alt\u003d\"UndoRedoState1\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState2.puml\" alt\u003d\"UndoRedoState2\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"**Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState3.puml\" alt\u003d\"UndoRedoState3\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-09-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"The following sequence diagram shows how an undo operation goes through the `Logic` component:","lastModifiedDate":"2024-02-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Logic.puml\" alt\u003d\"UndoSequenceDiagram-Logic\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"**Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-09-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Similarly, how an undo operation goes through the `Model` component is shown below:","lastModifiedDate":"2024-02-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoSequenceDiagram-Model.puml\" alt\u003d\"UndoSequenceDiagram-Model\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-02-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"**Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-09-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState4.puml\" alt\u003d\"UndoRedoState4\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/UndoRedoState5.puml\" alt\u003d\"UndoRedoState5\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cpuml src\u003d\"diagrams/CommitActivityDiagram.puml\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"limrik"},"content":"* has a need to manage a significant number of patient information","lastModifiedDate":"2024-03-05"},{"lineNumber":278,"author":{"gitId":"limrik"},"content":"* has a need to schedule patients for appointments","lastModifiedDate":"2024-03-05"},{"lineNumber":279,"author":{"gitId":"limrik"},"content":"* prefers to manage patient information and appointments in one application","lastModifiedDate":"2024-03-05"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"limrik"},"content":"**Value proposition**: manage patient appointments faster than a typical mouse/GUI driven app","lastModifiedDate":"2024-03-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"| Priority | As a …​ | I want to …​                                                                       | So that I can…​                                                                  |","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"limrik"},"content":"|----------|---------|------------------------------------------------------------------------------------|----------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-05"},{"lineNumber":294,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | add a new patient                                                                  |                                                                                  |","lastModifiedDate":"2024-03-05"},{"lineNumber":295,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | delete a patient                                                                   |                                                                                  |","lastModifiedDate":"2024-03-05"},{"lineNumber":296,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | schedule an appointment for a patient                                              |                                                                                  |","lastModifiedDate":"2024-03-05"},{"lineNumber":297,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | cancel an appointment                                                              | account for changes in scheduling                                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":298,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | have an overall view of upcoming patient appointments                              | have situational awareness of the schedule for the day                           |","lastModifiedDate":"2024-03-05"},{"lineNumber":299,"author":{"gitId":"limrik"},"content":"| `* * *`  | user    | mark patients who have been seen for the day                                       | track patient\u0027s appointment attendance                                           |","lastModifiedDate":"2024-03-05"},{"lineNumber":300,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | update a patient\u0027s information                                                     | keep the database up to date                                                     |","lastModifiedDate":"2024-03-05"},{"lineNumber":301,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | easily filter the patients by their medical records                                | see which is in need of more assistance or follow up care                        |","lastModifiedDate":"2024-03-05"},{"lineNumber":302,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | search for patients by their name                                                  | look up their appointment information quickly                                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":303,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | update the details of the appointment                                              | reschedule appointments as needed                                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":304,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | view the list of patients for the given hour                                       | see the immediate schedule                                                       |","lastModifiedDate":"2024-03-05"},{"lineNumber":305,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | tag appointments based on appointment type                                         | I can categorize which appointments require test or room bookings                |","lastModifiedDate":"2024-03-05"},{"lineNumber":306,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | tag appointments based on insurance type                                           | prepare necessary insurance documents before patient’s appointments              |","lastModifiedDate":"2024-03-05"},{"lineNumber":307,"author":{"gitId":"limrik"},"content":"| `* *`    | user    | input commands without having inputs to be in a specific order                     | key in commands fast in busy periods                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":308,"author":{"gitId":"limrik"},"content":"| `*`      | user    | sort the time to a patient\u0027s appointment                                           | remind patients of their appointment                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":309,"author":{"gitId":"limrik"},"content":"| `*`      | user    | see how long it has been since a patient\u0027s last appointment                        | remind patients to come for another checkup                                      |","lastModifiedDate":"2024-03-05"},{"lineNumber":310,"author":{"gitId":"limrik"},"content":"| `*`      | user    | see what appointments are overlapping                                              | ensure the patients have enough time to be seen for their different appointments |","lastModifiedDate":"2024-03-05"},{"lineNumber":311,"author":{"gitId":"limrik"},"content":"| `*`      | user    | set notifications for upcoming appointments                                        | staff and patients can be well informed early in advance                         |","lastModifiedDate":"2024-03-05"},{"lineNumber":312,"author":{"gitId":"limrik"},"content":"| `*`      | user    | track if the patients have been sent reminders on their appointments               | patients do not get spammed with reminders                                       |","lastModifiedDate":"2024-03-05"},{"lineNumber":313,"author":{"gitId":"limrik"},"content":"| `*`      | user    | be notified of upcoming appointments on entry into the system                      | will not miss approaching deadlines                                              |","lastModifiedDate":"2024-03-05"},{"lineNumber":314,"author":{"gitId":"limrik"},"content":"| `*`      | user    | easily contact the patients via SMS or email through the program                   | update patients about their details and upcoming appointments                    |","lastModifiedDate":"2024-03-05"},{"lineNumber":315,"author":{"gitId":"limrik"},"content":"| `*`      | user    | quickly navigate the CLI with intuitive commands                                   | increase my efficiency                                                           |","lastModifiedDate":"2024-03-05"},{"lineNumber":316,"author":{"gitId":"limrik"},"content":"| `*`      | user    | check if patients are related to one another                                       | have alternate contacts                                                          |","lastModifiedDate":"2024-03-05"},{"lineNumber":317,"author":{"gitId":"limrik"},"content":"| `*`      | user    | update or create new records in bulk                                               | process a family more efficiently                                                |","lastModifiedDate":"2024-03-05"},{"lineNumber":318,"author":{"gitId":"limrik"},"content":"| `*`      | user    | set recurring tasks                                                                | I do not have to keep scheduling recurring appointments                          |","lastModifiedDate":"2024-03-05"},{"lineNumber":319,"author":{"gitId":"limrik"},"content":"| `*`      | user    | retrieve past records or revert changes easily                                     | revert my changes if I accidentally delete or wrongly edit a patient’s records   |","lastModifiedDate":"2024-03-05"},{"lineNumber":320,"author":{"gitId":"limrik"},"content":"| `*`      | user    | select what information is available when I view the list of patients              | cater the view to my needs                                                       |","lastModifiedDate":"2024-03-05"},{"lineNumber":321,"author":{"gitId":"limrik"},"content":"| `*`      | user    | add notes to a patient                                                             | include other additional information                                             |","lastModifiedDate":"2024-03-05"},{"lineNumber":322,"author":{"gitId":"limrik"},"content":"| `*`      | user    | easily generate reports of the patient details and export it to the doctor/patient | have easy access                                                                 |","lastModifiedDate":"2024-03-05"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"limrik"},"content":"(For all use cases below, the **System** is the `CLInic` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2024-03-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC1) : Add new patient information to the database**","lastModifiedDate":"2024-03-05"},{"lineNumber":329,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":330,"author":{"gitId":"ThatGirlJam"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":331,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":332,"author":{"gitId":"ThatGirlJam"},"content":"1.  User requests to add new patient information","lastModifiedDate":"2024-03-05"},{"lineNumber":333,"author":{"gitId":"limrik"},"content":"2.  CLInic validates the information","lastModifiedDate":"2024-03-08"},{"lineNumber":334,"author":{"gitId":"limrik"},"content":"3.  CLInic adds the patient\u0027s information to the database","lastModifiedDate":"2024-03-08"},{"lineNumber":335,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":336,"author":{"gitId":"ThatGirlJam"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":337,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":338,"author":{"gitId":"ThatGirlJam"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":339,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":340,"author":{"gitId":"ThatGirlJam"},"content":"* 1a. The required information is missing.","lastModifiedDate":"2024-03-05"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":342,"author":{"gitId":"limrik"},"content":"    * 1a1. CLInic prompts user to input required information.","lastModifiedDate":"2024-03-08"},{"lineNumber":343,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":344,"author":{"gitId":"ThatGirlJam"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2024-03-05"},{"lineNumber":345,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":346,"author":{"gitId":"ThatGirlJam"},"content":"* 2a. The given information is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":347,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":348,"author":{"gitId":"limrik"},"content":"    * 2a1. CLInic shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":349,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":350,"author":{"gitId":"ThatGirlJam"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2024-03-05"},{"lineNumber":351,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":352,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC2) : Delete patient information from the database**","lastModifiedDate":"2024-03-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-05"},{"lineNumber":357,"author":{"gitId":"limrik"},"content":"2.  CLInic shows a list of persons","lastModifiedDate":"2024-03-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":359,"author":{"gitId":"limrik"},"content":"4.  CLInic deletes the person","lastModifiedDate":"2024-03-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":363,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":367,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":371,"author":{"gitId":"limrik"},"content":"    * 3a1. CLInic shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":373,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":375,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC3) : Schedule an appointment for the patient**","lastModifiedDate":"2024-03-05"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":377,"author":{"gitId":"ThatGirlJam"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":378,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":379,"author":{"gitId":"ThatGirlJam"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-05"},{"lineNumber":380,"author":{"gitId":"limrik"},"content":"2.  CLInic shows a list of persons","lastModifiedDate":"2024-03-08"},{"lineNumber":381,"author":{"gitId":"ThatGirlJam"},"content":"3.  User requests to schedule an appointment for a specific person in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":382,"author":{"gitId":"limrik"},"content":"4.  CLInic prompts User to input appointment details","lastModifiedDate":"2024-03-08"},{"lineNumber":383,"author":{"gitId":"ThatGirlJam"},"content":"5.  User inputs appointment details","lastModifiedDate":"2024-03-05"},{"lineNumber":384,"author":{"gitId":"limrik"},"content":"6.  CLInic schedules appointment for the patient","lastModifiedDate":"2024-03-08"},{"lineNumber":385,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":386,"author":{"gitId":"ThatGirlJam"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":387,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":388,"author":{"gitId":"ThatGirlJam"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":389,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":390,"author":{"gitId":"ThatGirlJam"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":391,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":392,"author":{"gitId":"ThatGirlJam"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":393,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":394,"author":{"gitId":"ThatGirlJam"},"content":"* 5a. The given appointment details are invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":395,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":396,"author":{"gitId":"limrik"},"content":"    * 5a1. CLInic shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":397,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":398,"author":{"gitId":"ThatGirlJam"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2024-03-05"},{"lineNumber":399,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":400,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC4) : Cancel an appointment**","lastModifiedDate":"2024-03-05"},{"lineNumber":401,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":402,"author":{"gitId":"ThatGirlJam"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":403,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":404,"author":{"gitId":"ThatGirlJam"},"content":"1.  User requests to list persons","lastModifiedDate":"2024-03-05"},{"lineNumber":405,"author":{"gitId":"limrik"},"content":"2.  CLInic shows a list of persons","lastModifiedDate":"2024-03-08"},{"lineNumber":406,"author":{"gitId":"ThatGirlJam"},"content":"3.  User requests to cancel an appointment for a specific person in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":407,"author":{"gitId":"limrik"},"content":"4.  CLInic prompts User to input appointment details","lastModifiedDate":"2024-03-08"},{"lineNumber":408,"author":{"gitId":"ThatGirlJam"},"content":"5.  User inputs appointment details","lastModifiedDate":"2024-03-05"},{"lineNumber":409,"author":{"gitId":"limrik"},"content":"6.  CLInic cancels appointment for the patient","lastModifiedDate":"2024-03-08"},{"lineNumber":410,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":411,"author":{"gitId":"ThatGirlJam"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":412,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":413,"author":{"gitId":"ThatGirlJam"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":415,"author":{"gitId":"ThatGirlJam"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":416,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":417,"author":{"gitId":"ThatGirlJam"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":418,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":419,"author":{"gitId":"ThatGirlJam"},"content":"* 5a. The given appointment details are invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":420,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":421,"author":{"gitId":"limrik"},"content":"    * 5a1. CLInic shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":422,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":423,"author":{"gitId":"ThatGirlJam"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2024-03-05"},{"lineNumber":424,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":425,"author":{"gitId":"ThatGirlJam"},"content":"* 6a. There is no appointment scheduled for that slot.","lastModifiedDate":"2024-03-05"},{"lineNumber":426,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":427,"author":{"gitId":"ThatGirlJam"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":428,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":429,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC5) : View all upcoming appointments displayed in a concise and accessible format**","lastModifiedDate":"2024-03-05"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":431,"author":{"gitId":"ThatGirlJam"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":432,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":433,"author":{"gitId":"ThatGirlJam"},"content":"1.  User requests to view all upcoming appointments","lastModifiedDate":"2024-03-05"},{"lineNumber":434,"author":{"gitId":"limrik"},"content":"2.  CLInic shows a list of upcoming appointments","lastModifiedDate":"2024-03-08"},{"lineNumber":435,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":436,"author":{"gitId":"ThatGirlJam"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":437,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":438,"author":{"gitId":"ThatGirlJam"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":439,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":440,"author":{"gitId":"ThatGirlJam"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":441,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":442,"author":{"gitId":"ThatGirlJam"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":443,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":444,"author":{"gitId":"ThatGirlJam"},"content":"**Use case (UC6) : Mark patient appointment as seen for that day**","lastModifiedDate":"2024-03-05"},{"lineNumber":445,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":446,"author":{"gitId":"ThatGirlJam"},"content":"**MSS**","lastModifiedDate":"2024-03-05"},{"lineNumber":447,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":448,"author":{"gitId":"ThatGirlJam"},"content":"1.  User requests to \u003cins\u003e view all upcoming appointments (UC5) \u003c/ins\u003e","lastModifiedDate":"2024-03-05"},{"lineNumber":449,"author":{"gitId":"limrik"},"content":"2.  CLInic shows a list of upcoming appointments","lastModifiedDate":"2024-03-08"},{"lineNumber":450,"author":{"gitId":"ThatGirlJam"},"content":"3.  User requests to mark a specific appointment in the list","lastModifiedDate":"2024-03-05"},{"lineNumber":451,"author":{"gitId":"limrik"},"content":"4.  CLInic marks the appointment","lastModifiedDate":"2024-03-08"},{"lineNumber":452,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":453,"author":{"gitId":"ThatGirlJam"},"content":"    Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":454,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":455,"author":{"gitId":"ThatGirlJam"},"content":"**Extensions**","lastModifiedDate":"2024-03-05"},{"lineNumber":456,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":457,"author":{"gitId":"ThatGirlJam"},"content":"* 2a. The list is empty.","lastModifiedDate":"2024-03-05"},{"lineNumber":458,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":459,"author":{"gitId":"ThatGirlJam"},"content":"  Use case ends.","lastModifiedDate":"2024-03-05"},{"lineNumber":460,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":461,"author":{"gitId":"ThatGirlJam"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2024-03-05"},{"lineNumber":462,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":463,"author":{"gitId":"limrik"},"content":"    * 3a1. CLInic shows an error message.","lastModifiedDate":"2024-03-08"},{"lineNumber":464,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-05"},{"lineNumber":465,"author":{"gitId":"ThatGirlJam"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2024-03-05"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"dayn-1"},"content":"1. Patients should not have overlapping appointments","lastModifiedDate":"2024-03-06"},{"lineNumber":469,"author":{"gitId":"dayn-1"},"content":"2. Appointments cannot be backdated or scheduled for past dates","lastModifiedDate":"2024-03-06"},{"lineNumber":470,"author":{"gitId":"dayn-1"},"content":"3. Should be compatible with any _mainstream OS_ with Java `11` or above installed.","lastModifiedDate":"2024-03-06"},{"lineNumber":471,"author":{"gitId":"dayn-1"},"content":"4. Should load patient records and appointment details within three seconds","lastModifiedDate":"2024-03-06"},{"lineNumber":472,"author":{"gitId":"dayn-1"},"content":"5. Should be able to hold up to 1000 patients without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2024-03-06"},{"lineNumber":473,"author":{"gitId":"dayn-1"},"content":"6. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2024-03-06"},{"lineNumber":474,"author":{"gitId":"dayn-1"},"content":"7. The project is expected to adhere to a schedule that delivers a feature set for each milestone","lastModifiedDate":"2024-03-06"},{"lineNumber":475,"author":{"gitId":"dayn-1"},"content":"8. The product is not required to have mouse-click navigation","lastModifiedDate":"2024-03-06"},{"lineNumber":476,"author":{"gitId":"dayn-1"},"content":"9. The product is not required to integrate with other systems","lastModifiedDate":"2024-03-06"},{"lineNumber":477,"author":{"gitId":"dayn-1"},"content":"10. The product should avoid terminology or graphics that are insensitive to patients","lastModifiedDate":"2024-03-06"},{"lineNumber":478,"author":{"gitId":"dayn-1"},"content":"11. The product should be for a single user (not a multi-user product)","lastModifiedDate":"2024-03-06"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, MacOS","lastModifiedDate":"2024-02-09"},{"lineNumber":483,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"dayn-1"},"content":"* **Appointment**: A designated time slot for a patient to visit the clinic","lastModifiedDate":"2024-03-06"},{"lineNumber":485,"author":{"gitId":"dayn-1"},"content":"* **Appointment Type**: Categorises the purpose of visit eg. Vaccination, Medical Check-up, etc","lastModifiedDate":"2024-03-06"},{"lineNumber":486,"author":{"gitId":"dayn-1"},"content":"* **Insurance Type**: Categorises insurance schemes applicable to the patient eg. Medisave, ElderShield, etc.","lastModifiedDate":"2024-03-06"},{"lineNumber":487,"author":{"gitId":"dayn-1"},"content":"* **Medical Records**: Refer to details of patients\u0027 medical allergies only (as at v1.2)","lastModifiedDate":"2024-03-06"},{"lineNumber":488,"author":{"gitId":"dayn-1"},"content":"* **Recurring Appointments**: Refer to appointments that occur regularly eg. weekly or monthly","lastModifiedDate":"2024-03-06"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":490,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":492,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":494,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":498,"author":{"gitId":"-"},"content":"**Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-09-12"},{"lineNumber":499,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"limrik":55,"dayn-1":17,"ThatGirlJam":99,"-":372}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"User Guide\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"  pageNav: 3","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"# CLInic User Guide","lastModifiedDate":"2024-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"Welcome to **CLInic**, your digital assistant for managing patients and appointments! CLInic is a desktop app designed for clinic assistants, optimized for use via a Command Line Interface (CLI) while still offering the benefits of a Graphical User Interface (GUI). \u003cbr/\u003e \u003cbr/\u003eIf you\u0027re familiar with digitalized software or have used a CLI before, you\u0027ll find CLInic intuitive. Don\u0027t worry if you\u0027re new to CLI; we\u0027ll guide you through every step.","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c!-- * Table of Contents --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cpage-nav-print /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"1. System Requirements: Ensure you have [**Java 11**](https://www.oracle.com/java/technologies/downloads/#java11) or above installed on your computer.","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"1. Download the latest `CLInic.jar` from [here](https://github.com/AY2324S2-CS2103T-F10-3/tp/releases).","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"1. Save the file to a location on your computer that will serve as your home folder for CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"1. Open a command terminal on your computer. If you\u0027re unsure how to do this, we\u0027ll walk you through it.","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"   * **Windows**: Press `Win + R`, type `cmd`, and press `Enter`.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"   * **MacOS**: Press `Cmd + Space`, type `Terminal`, and press `Enter`.","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"   * **Linux**: Press `Ctrl + Alt + T`.","lastModifiedDate":"2024-03-27"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"1. Navigate to the folder where you saved the `CLInic.jar` file. If you saved it in your `Downloads` folder, you can use the following commands:","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"   * **Windows**: `cd Downloads`","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"   * **MacOS**: `cd ~/Downloads`","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"   * **Linux**: `cd ~/Downloads`","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"1. Type `java -jar CLInic.jar` command into terminal to run the application.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"      ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"   * `list` : Lists all patients.","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"   * `addPatient n/John Doe i/T0123456A b/2001-05-02 p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"   * `deletePatient T0123456A` : Deletes patient with NRIC T0123456A and corresponding appointments.","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"info\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"  e.g. in `addPatient n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* If you are using a PDF version of this document, be careful when copying and pasting commands that span multiple lines as space characters surrounding line-breaks may be omitted when copied over to the application.","lastModifiedDate":"2023-06-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"cliftonchee"},"content":"### Adding a patient: `addPatient`","lastModifiedDate":"2024-03-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"cliftonchee"},"content":"Adds a patient to CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"cliftonchee"},"content":"Format: `addPatient n/NAME i/NRIC b/DOB p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"tip\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"**Tip:** A patient must have a unique NRIC in CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"cliftonchee"},"content":"* `addPatient n/John Doe i/T0123456A b/2001-05-02 p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"cliftonchee"},"content":"* `addPatient n/Betsy Crowe i/S1234567A b/2001-02-03 t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"cliftonchee"},"content":"### Deleting a patient : `deletePatient`","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"cliftonchee"},"content":"Deletes the specified patient (identified by NRIC) from CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"cliftonchee"},"content":"Corresponding appointments for the specified patient will be deleted too.","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"cliftonchee"},"content":"Format: `deletePatient NRIC`","lastModifiedDate":"2024-03-27"},{"lineNumber":109,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":110,"author":{"gitId":"cliftonchee"},"content":"* Deletes the patient with specified `NRIC`.","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"cliftonchee"},"content":"* The NRIC **must exist within database**.","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"* `deletePatient S1234567A` deletes the patient with NRIC S1234567A in CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"cliftonchee"},"content":"### Editing a patient : `editPatient`","lastModifiedDate":"2024-03-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"cliftonchee"},"content":"Edits an existing patient in CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"cliftonchee"},"content":"Format: `editPatient NRIC [b/DOB] [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"cliftonchee"},"content":"* Edits the patient with the specified NRIC.","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"cliftonchee"},"content":"* Ensure the NRIC is valid and exists in the system.","lastModifiedDate":"2024-03-27"},{"lineNumber":124,"author":{"gitId":"cliftonchee"},"content":"* Provide at least one optional field for editing.","lastModifiedDate":"2024-03-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"cliftonchee"},"content":"* When editing tags, existing tags of the patient will be removed, i.e., adding tags is not cumulative. Use t/ to remove all tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"cliftonchee"},"content":"*  `editPatient T0123456A p/91234567 e/johndoe@example.com` Edits the phone number and email address of the patient with NRIC:`T0123456A` to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2024-03-27"},{"lineNumber":130,"author":{"gitId":"cliftonchee"},"content":"*  `editPatient S8765432Z n/Betsy Crower t/` Edits the name of the patient with NRIC:`S8765432Z` to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2024-03-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"cliftonchee"},"content":"### Locating patients: `findPatient`","lastModifiedDate":"2024-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"cliftonchee"},"content":"Finds patients whose name OR NRIC fit the given keywords.","lastModifiedDate":"2024-03-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"cliftonchee"},"content":"Format: `findPatient n/ KEYWORD [MORE_KEYWORDS]` OR `findPatient i/ KEYWORD`","lastModifiedDate":"2024-03-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"cliftonchee"},"content":"* Only the name OR NRIC is searched at once. e.g. `n/ Bob i/ T0123456A` is illegal","lastModifiedDate":"2024-03-27"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"* Partial words will be matched only if the start of the word is the same e.g. `Han` will match `Hans`","lastModifiedDate":"2024-03-23"},{"lineNumber":142,"author":{"gitId":"cliftonchee"},"content":"* For name search: patients matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"  e.g. `n/ Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2024-03-23"},{"lineNumber":144,"author":{"gitId":"cliftonchee"},"content":"* For NRIC search: patients matching the given keyword will be returned.","lastModifiedDate":"2024-03-27"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"  e.g. `n/ T0` will return `T0123456A`, `T0234567B`","lastModifiedDate":"2024-03-23"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"  e.g. `n/ T01 T012` will NOT return `T0123456A` as the given keyword is `T01 T012`","lastModifiedDate":"2024-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"cliftonchee"},"content":"* `findPatient i/ S9` returns patients with NRICs `S9876543A` and `S9765432A`","lastModifiedDate":"2024-03-27"},{"lineNumber":150,"author":{"gitId":"cliftonchee"},"content":"* `findPatient n/ John` returns patients with names `john` and `John Doe`","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"cliftonchee"},"content":"* `findPatient n/ alex david` returns patients with names `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"cliftonchee"},"content":"### Listing all patients : `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"cliftonchee"},"content":"Shows a list of all patients in CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"cliftonchee"},"content":"Format: `list`","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"cliftonchee"},"content":"### Adding an Appointment: `addAppt`","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":162,"author":{"gitId":"cliftonchee"},"content":"Adds an appointment to the CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":164,"author":{"gitId":"cliftonchee"},"content":"Format: `addAppt i/NRIC d/DATE from/START_TIME to/END_TIME t/APPOINTMENT_TYPE [note/NOTE]`","lastModifiedDate":"2024-03-27"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":166,"author":{"gitId":"cliftonchee"},"content":"* Adds an appointment for the patient with specified `NRIC`, on `DATE` from `START_TIME` to `END_TIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"cliftonchee"},"content":"* Patient with this NRIC **must exist within database**.","lastModifiedDate":"2024-03-27"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"* Details of `APPOINTMENT_TYPE` and `NOTE` will be captured for reference","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"* `note/` is an optional field","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"Examples:","lastModifiedDate":"2024-03-19"},{"lineNumber":172,"author":{"gitId":"cliftonchee"},"content":"* `addAppt i/ T0123456A d/ 2024-02-20 from/ 11:00 to/ 11:30 t/ Medical Check-up note/ Routine check-in`","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"cliftonchee"},"content":"* `addAppt i/ S1234567A d/ 2024-02-20 from/ 15:00 to/ 15:30 t/ Blood Test note/ Follow-up from last consultation`","lastModifiedDate":"2024-03-27"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":175,"author":{"gitId":"cliftonchee"},"content":"### Deleting an Appointment: `deleteAppt`","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":177,"author":{"gitId":"cliftonchee"},"content":"Deleting an appointment from CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":179,"author":{"gitId":"cliftonchee"},"content":"Format: `deleteAppt i/NRIC d/DATE from/START_TIME to/END_TIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":181,"author":{"gitId":"cliftonchee"},"content":"* Deletes an appointment for the patient with specified `NRIC`, on `DATE` from `START_TIME` to `END_TIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"cliftonchee"},"content":"* Appointment with the following details **must exist within database**.","lastModifiedDate":"2024-03-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":184,"author":{"gitId":"cliftonchee"},"content":"Examples:","lastModifiedDate":"2024-03-21"},{"lineNumber":185,"author":{"gitId":"cliftonchee"},"content":"* `deleteAppt i/ S8743880A d/ 2024-02-20 from/ 11:00 to/ 11:30`","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":187,"author":{"gitId":"cliftonchee"},"content":"### Finding appointments: `findAppt`","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"cliftonchee"},"content":"Finds appointments based on the given parameters.","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"cliftonchee"},"content":"Format: `findAppt [i/NRIC] [d/DATE] [from/START_TIME]`","lastModifiedDate":"2024-03-26"},{"lineNumber":192,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"cliftonchee"},"content":"* Filters an appointment with specific `NRIC`, `DATE` or `START_TIME` (any combination of the 3)","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"cliftonchee"},"content":"* If invalid parameters, error detailing what went wrong will be displayed.","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"cliftonchee"},"content":"* For argument concerning TIME, all appointments that start at the given time and later than that are returned.","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"cliftonchee"},"content":"* Fetching for TIME without DATE will return all appointments whose start from that time or later than that on any date.","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"cliftonchee"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"cliftonchee"},"content":"* `findAppt d/ 2024-02-20 from/ 11:00`","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"cliftonchee"},"content":"*  returns you all appointments on `2024-02-20` starting from `11:00` and later. ","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"xuelinglow"},"content":"### Marking an Appointment: `mark`","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"xuelinglow"},"content":"Marks an appointment from the address book.","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"xuelinglow"},"content":"Format: `mark i/ NRIC d/ DATE /from START_TIME /to END_TIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"xuelinglow"},"content":"* Marks an appointment for the person with specified `NRIC`, on `DATE` from `START_TIME` to `END_TIME`","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"xuelinglow"},"content":"* Appointment with the following details **must exist within database**.","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"xuelinglow"},"content":"* `mark i/ T0123456A d/ 2024-02-20 from/ 11:00 to/ 11:30`","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"xuelinglow"},"content":"### Marking an Appointment: `mark`","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"xuelinglow"},"content":"Marks an appointment from the address book.","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"xuelinglow"},"content":"Format: `mark i/ NRIC d/ DATE /from START_TIME /to END_TIME`","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"xuelinglow"},"content":"* Marks an appointment for the person with specified `NRIC`, on `DATE` from `START_TIME` to `END_TIME`","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"xuelinglow"},"content":"* Appointment with the following details **must exist within database**.","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"xuelinglow"},"content":"Examples:","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"xuelinglow"},"content":"* `mark i/ T0123456A d/ 2024-02-20 from/ 11:00 to/ 11:30`","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"dayn-1"},"content":"Clears all entries from CLInic.","lastModifiedDate":"2024-03-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"cliftonchee"},"content":"CLInic data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2024-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":245,"author":{"gitId":"cliftonchee"},"content":"CLInic data are saved automatically as a JSON file `[JAR file location]/data/CLInic.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2024-03-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":247,"author":{"gitId":"-"},"content":"\u003cbox type\u003d\"warning\" seamless\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Caution:**","lastModifiedDate":"2023-09-12"},{"lineNumber":250,"author":{"gitId":"cliftonchee"},"content":"If your changes to the data file makes its format invalid, CLInic will discard all data and start with an empty data file at the next run.  Hence, it is recommended to take a backup of the file before editing it.\u003cbr\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":251,"author":{"gitId":"cliftonchee"},"content":"Furthermore, certain edits can cause the CLInic to behave in unexpected ways (e.g., if a value entered is outside the acceptable range). Therefore, edit the data file only if you are confident that you can update it correctly.","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/box\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"cliftonchee"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CLInic home folder.","lastModifiedDate":"2024-03-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"## Known issues","lastModifiedDate":"2023-09-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"1. **When using multiple screens**, if you move the application to a secondary screen, and later switch to using only the primary screen, the GUI will open off-screen. The remedy is to delete the `preferences.json` file created by the application before running the application again.","lastModifiedDate":"2023-09-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-09-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-08"},{"lineNumber":273,"author":{"gitId":"cliftonchee"},"content":"## Glossary","lastModifiedDate":"2024-03-27"},{"lineNumber":274,"author":{"gitId":"cliftonchee"},"content":"| Term                 | Explanation                                                                                                                                    |","lastModifiedDate":"2024-03-27"},{"lineNumber":275,"author":{"gitId":"cliftonchee"},"content":"|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"cliftonchee"},"content":"| **CLI**              | Command Line Interface, a text-based interface for interacting with software by typing commands.                                               |","lastModifiedDate":"2024-03-27"},{"lineNumber":277,"author":{"gitId":"cliftonchee"},"content":"| **GUI**              | Graphical User Interface, a visual interface that allows users to interact with software using graphical elements such as windows and buttons. |","lastModifiedDate":"2024-03-27"},{"lineNumber":278,"author":{"gitId":"cliftonchee"},"content":"| **JSON**             | JavaScript Object Notation, a lightweight data-interchange format.                                                                             |","lastModifiedDate":"2024-03-27"},{"lineNumber":279,"author":{"gitId":"cliftonchee"},"content":"| **NRIC**             | National Registration Identity Card, a unique identifier for individuals in Singapore.                                                         |","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"cliftonchee"},"content":"| **TAG**              | A keyword or term assigned to a piece of information, making it easier to search for and organize.                                             |","lastModifiedDate":"2024-03-27"},{"lineNumber":281,"author":{"gitId":"cliftonchee"},"content":"| **APPOINTMENT_TYPE** | The type of appointment, e.g., Medical Check-up, Blood Test, etc.                                                                              |","lastModifiedDate":"2024-03-27"},{"lineNumber":282,"author":{"gitId":"cliftonchee"},"content":"| **NOTE**             | Additional information or comments about an appointment.                                                                                       |","lastModifiedDate":"2024-03-27"},{"lineNumber":283,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":284,"author":{"gitId":"cliftonchee"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2024-03-27"},{"lineNumber":285,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"cliftonchee"},"content":"| Action            | Format, Examples                                                                                                                                                                                 |","lastModifiedDate":"2024-03-27"},{"lineNumber":289,"author":{"gitId":"cliftonchee"},"content":"|-------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2024-03-27"},{"lineNumber":290,"author":{"gitId":"cliftonchee"},"content":"| **AddPatient**    | `addPatient n/NAME i/NRIC b/DOB p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/John Doe i/T0123456A b/2001-05-02 p/98765432 e/johnd@example.com a/John street, block 123, #01-01` |","lastModifiedDate":"2024-03-27"},{"lineNumber":291,"author":{"gitId":"cliftonchee"},"content":"| **DeletePatient** | `deletePatient NRIC`\u003cbr\u003e e.g., `delete T0123456A`                                                                                                                                                |                                                                 |","lastModifiedDate":"2024-03-27"},{"lineNumber":292,"author":{"gitId":"cliftonchee"},"content":"| **EditPatient**   | `editPatient NRIC [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`editPatient T0123456A n/James Lee e/jameslee@example.com`                                                 |","lastModifiedDate":"2024-03-27"},{"lineNumber":293,"author":{"gitId":"cliftonchee"},"content":"| **FindPatient**   | `findPatient n/ KEYWORD [MORE_KEYWORDS]` OR `findPatient i/ KEYWORD`\u003cbr\u003e e.g., `findPatient n/ James Jake`                                                                                       |","lastModifiedDate":"2024-03-27"},{"lineNumber":294,"author":{"gitId":"cliftonchee"},"content":"| **List**          | `list`                                                                                                                                                                                           |","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"cliftonchee"},"content":"| **AddAppt**       | `addAppt i/NRIC d/DATE from/START_TIME to/END_TIME t/APPOINTMENT_TYPE note/NOTE`\u003cbr\u003e e.g., `addAppt i/ T0123456A d/ 2024-02-20 from/ 11:00 to/ 11:30 t/ Medical Check-up note/ Routine check-in` |","lastModifiedDate":"2024-03-27"},{"lineNumber":296,"author":{"gitId":"cliftonchee"},"content":"| **DeleteAppt**    | `deleteAppt i/NRIC d/DATE from/START_TIME to/END_TIME` \u003cbr\u003e e.g., `deleteAppt i/ S8743880A d/ 2024-02-20 from/ 11:00 to/ 11:30`                                                                  |","lastModifiedDate":"2024-03-27"},{"lineNumber":297,"author":{"gitId":"cliftonchee"},"content":"| **FindAppt**      | `findAppt [i/NRIC] [d/DATE] [from/START_TIME]` \u003cbr\u003e e.g., `findAppt i/ T0123456A d/ 2024-02-20 from/ 11:00`                                                                                      |","lastModifiedDate":"2024-03-27"},{"lineNumber":298,"author":{"gitId":"xuelinglow"},"content":"| **Mark**      | `mark [i/NRIC] [d/DATE] [from/START_TIME]` \u003cbr\u003e e.g., `mark i/ T0123456A d/ 2024-02-20 from/ 11:00 to/ 11:30`                                                                                      |","lastModifiedDate":"2024-03-27"},{"lineNumber":299,"author":{"gitId":"cliftonchee"},"content":"| **Clear**         | `clear`                                                                                                                                                                                          |","lastModifiedDate":"2024-03-27"},{"lineNumber":300,"author":{"gitId":"cliftonchee"},"content":"| **Exit**          | `exit`                                                                                                                                                                                           |","lastModifiedDate":"2024-03-27"},{"lineNumber":301,"author":{"gitId":"cliftonchee"},"content":"| **Help**          | `help`                                                                                                                                                                                           |","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"xuelinglow":22,"dayn-1":14,"-":146,"cliftonchee":119}},{"path":"docs/_markbind/layouts/default.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003chead-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \u003clink rel\u003d\"stylesheet\" href\u003d\"{{baseUrl}}/stylesheets/main.css\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c/head-bottom\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003cheader sticky\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  \u003cnavbar type\u003d\"dark\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \u003ca slot\u003d\"brand\" href\u003d\"{{baseUrl}}/index.html\" title\u003d\"Home\" class\u003d\"navbar-brand\"\u003eCLInic\u003c/a\u003e","lastModifiedDate":"2024-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/index.html\" class\u003d\"nav-link\"\u003eHome\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2024-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/UserGuide.html\" class\u003d\"nav-link\"\u003eUser Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/DeveloperGuide.html\" class\u003d\"nav-link\"\u003eDeveloper Guide\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \u003cli\u003e\u003ca href\u003d\"{{baseUrl}}/AboutUs.html\" class\u003d\"nav-link\"\u003eAbout Us\u003c/a\u003e\u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    \u003cli\u003e\u003ca href\u003d\"https://github.com/AY2324S2-CS2103T-F10-3/tp\" target\u003d\"_blank\" class\u003d\"nav-link\"\u003e\u003cmd\u003e:fab-github:\u003c/md\u003e\u003c/a\u003e","lastModifiedDate":"2024-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cli slot\u003d\"right\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cform class\u003d\"navbar-form\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003csearchbar :data\u003d\"searchData\" placeholder\u003d\"Search\" :on-hit\u003d\"searchCallback\" menu-align-right\u003e\u003c/searchbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003c/form\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/li\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/navbar\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003c/header\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv id\u003d\"flex-body\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"site-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"site-nav-top\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cdiv class\u003d\"fw-bold mb-2\" style\u003d\"font-size: 1.25rem;\"\u003eSite Map\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003csite-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Home]({{ baseUrl }}/index.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [User Guide]({{ baseUrl }}/UserGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * [Quick Start]({{ baseUrl }}/UserGuide.html#quick-start)","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * [Features]({{ baseUrl }}/UserGuide.html#features)","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * [FAQ]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  * [Command Summary]({{ baseUrl }}/UserGuide.html#faq)","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"* [Developer Guide]({{ baseUrl }}/DeveloperGuide.html) :expanded:","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  * [Acknowledgements]({{ baseUrl }}/DeveloperGuide.html#acknowledgements)","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * [Setting Up]({{ baseUrl }}/DeveloperGuide.html#setting-up-getting-started)","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * [Design]({{ baseUrl }}/DeveloperGuide.html#design)","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * [Implementation]({{ baseUrl }}/DeveloperGuide.html#implementation)","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * [Documentation, logging, testing, configuration, dev-ops]({{ baseUrl }}/DeveloperGuide.html#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * [Appendix: Requirements]({{ baseUrl }}/DeveloperGuide.html#appendix-requirements)","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * [Appendix: Instructions for manual testing]({{ baseUrl }}/DeveloperGuide.html#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Tutorials","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * [Tracing code]({{ baseUrl }}/tutorials/TracingCode.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * [Adding a command]({{ baseUrl }}/tutorials/AddRemark.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * [Removing Fields]({{ baseUrl }}/tutorials/RemovingFields.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [About Us]({{ baseUrl }}/AboutUs.html)","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"      \u003c/site-nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  \u003cdiv id\u003d\"content-wrapper\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    {{ content }}","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  \u003cnav id\u003d\"page-nav\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \u003cdiv class\u003d\"nav-component slim-scroll\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003cpage-nav /\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/nav\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003cscroll-top-button\u003e\u003c/scroll-top-button\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cfooter\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  \u003c!-- Support MarkBind by including a link to us on your landing page! --\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003cdiv class\u003d\"text-center\"\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \u003csmall\u003e[\u003cmd\u003e**Powered by**\u003c/md\u003e \u003cimg src\u003d\"https://markbind.org/favicon.ico\" width\u003d\"30\"\u003e {{MarkBind}}, generated on {{timestamp}}]\u003c/small\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  \u003c/div\u003e","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/footer\u003e","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"dayn-1":1,"-":66}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"user -[USER_COLOR]\u003e ui : \"delete T0123456A\"","lastModifiedDate":"2024-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete T0123456A\")","lastModifiedDate":"2024-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteAppointmentsWithNric(Nric: T0123456A)","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePersonWithNric(Nric: T0123456A)","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dayn-1":2,"ThatGirlJam":3,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"AddressBook *-down-\u003e \"1\" UniqueAppointmentList","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"AddressBook *-down-\u003e \"1\" UniqueAppointmentViewList","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"UniqueAppointmentList -down-\u003e Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"UniqueAppointmentViewList -down-\u003e AppointmentView","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"Person *--\u003e Nric","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"Person *--\u003e DateOfBirth","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"Appointment *--\u003e Nric","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"Appointment *--\u003e Date","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"Appointment *--\u003e TimePeriod","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"Appointment *--\u003e Notes","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"AppointmentView *--\u003e Name","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"AppointmentView *--\u003e Appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"TimePeriod *--\u003e startTime","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"TimePeriod *--\u003e endTime","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xuelinglow":18,"-":21}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ArrowFontStyle plain","lastModifiedDate":"2023-07-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"participant \"r:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \"m:Model\" as Model MODEL_COLOR","lastModifiedDate":"2024-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"[-\u003e LogicManager : execute(\"delete T1234567A\")","lastModifiedDate":"2024-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete S1234567A\")","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"T1234567A\")","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser :","lastModifiedDate":"2024-02-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute(m)","lastModifiedDate":"2024-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"DeleteCommand -\u003e Model : deleteAppointmentsWithNric(Nric: S1234567A)","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"DeleteCommand -\u003e Model : deletePersonWithNric(Nric: S1234567A)","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : r","lastModifiedDate":"2024-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dayn-1":2,"ThatGirlJam":3,"-":66,"cliftonchee":1}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model as ModelPackage \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"Class Nric","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"Class DateOfBirth","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"Class Nric","lastModifiedDate":"2024-03-19"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"Class AppointmentList","lastModifiedDate":"2024-03-19"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"Class Appointment","lastModifiedDate":"2024-03-19"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"Class Date","lastModifiedDate":"2024-03-19"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"Class TimePeriod","lastModifiedDate":"2024-03-19"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"Class Time","lastModifiedDate":"2024-03-19"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"Class AppointmentType","lastModifiedDate":"2024-03-19"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"Class Note","lastModifiedDate":"2024-03-19"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class I #FFFFFF","lastModifiedDate":"2023-07-27"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"Class J #FFFFFF","lastModifiedDate":"2024-03-19"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"Person *--\u003e Nric","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"Person *--\u003e DateOfBirth","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Person -[hidden]up--\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"UniquePersonList -[hidden]right-\u003e I","lastModifiedDate":"2023-07-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-27"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"Name -[hidden]right-\u003e Nric","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"Nric -[hidden]right-\u003e DateOfBirth","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"DateOfBirth -[hidden]right-\u003e Address","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"Address -[hidden]right-\u003e Phone","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"AddressBook *--\u003e \"1\" AppointmentList","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"AppointmentList --\u003e \"~* all\" Appointment","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"Appointment *--\u003e Nric","lastModifiedDate":"2024-03-19"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"Appointment *--\u003e Date","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"Appointment *--\u003e TimePeriod","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"TimePeriod *--\u003e \"2\" Time","lastModifiedDate":"2024-03-19"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"Appointment *--\u003e AppointmentType","lastModifiedDate":"2024-03-19"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"Appointment *--\u003e Note","lastModifiedDate":"2024-03-19"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"Appointment -[hidden]up--\u003e J","lastModifiedDate":"2024-03-19"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"AppointmentList -[hidden]right-\u003e J","lastModifiedDate":"2024-03-19"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"Nric -[hidden]right-\u003e Date","lastModifiedDate":"2024-03-19"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"Date -[hidden]right-\u003e TimePeriod","lastModifiedDate":"2024-03-19"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"TimePeriod -[hidden]right-\u003e AppointmentType","lastModifiedDate":"2024-03-19"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"AppointmentType -[hidden]right-\u003e Note","lastModifiedDate":"2024-03-19"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ModelManager --\u003e \"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"ModelManager --\u003e \"~* filtered\" Appointment","lastModifiedDate":"2024-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"limrik":8,"dayn-1":30,"-":53}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage as StoragePackage {","lastModifiedDate":"2023-07-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"Class JsonAdaptedAppointment","lastModifiedDate":"2024-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedAppointment","lastModifiedDate":"2024-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"dayn-1":2,"-":43}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"PersonListPanel -down-\u003e \"*\" AppointmentCard","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"AppointmentCard --|\u003e UiPart","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"AppointmentCard ..\u003e Model","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"xuelinglow":3,"-":60}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  layout: default.md","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  title: \"\"","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"# CLInic","lastModifiedDate":"2024-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3)","lastModifiedDate":"2020-08-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"**CLInic is a desktop application for managing patient details and appointments in a clinic.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2024-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"* If you are interested in using CLInic, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2024-03-08"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"* If you are interested about developing CLInic, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2024-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"dayn-1":4,"-":17}},{"path":"src/main/java/seedu/address/commons/core/date/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.commons.core.date;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" * Represents a date","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"public class Date implements Comparable\u003cDate\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String DATE_FORMAT \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"            \"Date should be in the format \" + DATE_FORMAT + \" and must be a valid date after 1 Jan 1900\";","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(DATE_FORMAT);","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"    public final LocalDate value;","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"     * Creates a Date Object","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"     * @param dateString Date string that has to satisfy validation requirements","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    public Date(String dateString) {","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"        checkArgument(isValidDate(dateString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        this.value \u003d LocalDate.parse(dateString);","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns if a given string is a valid date.","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"     * Valid date must also be after 1 Jan 1900.","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    public static boolean isValidDate(String dateString) {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(dateString);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"        try {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"            LocalDate validDate \u003d LocalDate.parse(dateString);","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"            return validDate.isAfter(LocalDate.of(1900, 1, 1));","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        } catch (Exception e) {","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns if date is before today","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    public static boolean isBeforeToday(String date) {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        return LocalDate.parse(date).isBefore(LocalDate.now());","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        return this.value.format(DATE_FORMATTER);","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"        if (!(other instanceof Date)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"        Date otherDate \u003d (Date) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        return this.value.equals(otherDate.value);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        return this.value.hashCode();","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"    public int compareTo(Date other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"        return this.value.compareTo(other.value);","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"xuelinglow":6,"limrik":42,"dayn-1":10,"ThatGirlJam":24}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"     * Returns true if the {@code sentence} contains {@code word}.","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"     *   Ignores case, but a partial match (start of word) required","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true //start of word matches","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    public static boolean startsWithWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"                .anyMatch(nextWord -\u003e nextWord.startsWith(preppedWord));","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dayn-1":7,"-":61}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"    /** Returns an unmodifiable view of the filtered list of appointments for viewing */","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"    ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"    /** Returns an unmodifiable view of the list of appointments filtered by the current date for viewing */","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"    ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xuelinglow":4,"limrik":3,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_FORMAT \u003d \"Could not save data due to the following error: %s\";","lastModifiedDate":"2023-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_PERMISSION_ERROR_FORMAT \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \"Could not save data to file %s due to insufficient permissions to write to the file or the folder.\";","lastModifiedDate":"2023-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (AccessDeniedException e) {","lastModifiedDate":"2023-06-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_PERMISSION_ERROR_FORMAT, e.getMessage()), e);","lastModifiedDate":"2023-06-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(String.format(FILE_OPS_ERROR_FORMAT, ioe.getMessage()), ioe);","lastModifiedDate":"2023-06-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"    public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"        return model.getFilteredAppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"    public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"        return model.getFilteredAppointmentDayViewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xuelinglow":6,"limrik":5,"-":88}},{"path":"src/main/java/seedu/address/logic/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2023-07-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-07-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-07-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-07-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-07-14"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_APPOINTMENT_NOT_FOUND \u003d \"The appointment provided is not found in the system\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_PERSON_NRIC_NOT_FOUND \u003d \"The NRIC provided is not found in the system\";","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"    public static final String MESSAGE_APPOINTMENTS_LISTED_OVERVIEW \u003d \"%1$d appointments listed!\";","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_FIELDS \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \"Multiple values specified for the following single-valued field(s): \";","lastModifiedDate":"2023-07-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-07-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an error message indicating the duplicate prefixes.","lastModifiedDate":"2023-07-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-07-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getErrorMessageForDuplicatePrefixes(Prefix... duplicatePrefixes) {","lastModifiedDate":"2023-07-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assert duplicatePrefixes.length \u003e 0;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Set\u003cString\u003e duplicateFields \u003d","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                Stream.of(duplicatePrefixes).map(Prefix::toString).collect(Collectors.toSet());","lastModifiedDate":"2023-07-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return MESSAGE_DUPLICATE_FIELDS + String.join(\" \", duplicateFields);","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Formats the {@code person} for display to the user.","lastModifiedDate":"2019-02-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static String format(Person person) {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        builder.append(person.getName())","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"                .append(person.getNric())","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"                .append(\"; Date of Birth: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"                .append(person.getDob())","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .append(person.getPhone())","lastModifiedDate":"2019-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .append(person.getEmail())","lastModifiedDate":"2019-02-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2019-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .append(person.getAddress())","lastModifiedDate":"2019-02-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                .append(\"; Tags: \");","lastModifiedDate":"2019-02-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().forEach(builder::append);","lastModifiedDate":"2019-02-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"     * Formats the {@code appointment} for display to the user.","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"    public static String format(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        builder.append(appointment.getNric())","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"                .append(appointment.getDate())","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"                .append(\"; Time: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"                .append(appointment.getTimePeriod())","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"                .append(\"; Type: \")","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"                .append(appointment.getAppointmentType())","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"                .append(\"; Notes: \")","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"                .append(appointment.getNote());","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        return builder.toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xuelinglow":1,"dayn-1":24,"-":50,"cliftonchee":1}},{"path":"src/main/java/seedu/address/logic/commands/AddAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":" * Creates an AddAppCommand to add the specified {@code Appointment}","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"public class AddAppCommand extends Command {","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String COMMAND_WORD \u003d \"addApp\";","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"            + \": Adds an appointment for the patient identified by the NRIC given. \\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_START_TIME + \"START_TIME \"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_END_TIME + \"END_TIME \"","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_TAG + \"APPOINTMENT_TYPE \"","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"            + \"[\" + PREFIX_NOTE + \"NOTE] \\n\"","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_NRIC + \"T0123456A \"","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_DATE + \"2024-02-20 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_START_TIME + \"11:00 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_END_TIME + \"11:30 \"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_TAG + \"Medical Check-up \"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_NOTE + \"May come earlier \";","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_ADD_APPOINTMENT_SUCCESS \u003d \"New appointment added: %1$s\";","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"This appointment already exists in CLInic\";","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    private final Appointment apptToAdd;","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     * Creates an AddAppCommand to add the specified {@code Appointment}","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    public AddAppCommand(Appointment appointment) {","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        this.apptToAdd \u003d appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d apptToAdd.getNric();","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        if (!model.hasPersonWithNric(targetNric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        if (model.hasAppointment(apptToAdd)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        model.addAppointment(apptToAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_APPOINTMENT_SUCCESS, Messages.format(apptToAdd)));","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof AddAppCommand)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"        AddAppCommand otherAddAppCommand \u003d (AddAppCommand) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"        return apptToAdd.equals(otherAddAppCommand.apptToAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"                .add(\"appointment\", apptToAdd)","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"                .toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"dayn-1":7,"ThatGirlJam":91}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a patient to the CLInic. \"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"            + PREFIX_DOB + \"DOB \"","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"            + \"[\" + PREFIX_TAG + \"MEDICAL ALLERGIES]...\\n\"","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            + PREFIX_NRIC + \"T0123456A \"","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"            + PREFIX_DOB + \"2001-01-30 \"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            + PREFIX_TAG + \"insulin \"","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"            + PREFIX_TAG + \"panadol\";","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This patient already exists in the CLInic\";","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, Messages.format(toAdd)));","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return toAdd.equals(otherAddCommand.toAdd);","lastModifiedDate":"2023-07-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .add(\"toAdd\", toAdd)","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limrik":11,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/CancelAppCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":" * Cancels an appointment identified using its NRIC, date, start time and end time.","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"public class CancelAppCommand extends Command {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String COMMAND_WORD \u003d \"cancelApp\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"            + \": Cancels the appointment identified by the NRIC, date, start time and end time given.\\n\"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_START_TIME + \"START_TIME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_END_TIME + \"END_TIME \"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_NRIC + \"T0123456A \"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_DATE + \"2024-02-20 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_START_TIME + \"11:00 \"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"            + PREFIX_END_TIME + \"11:30 \";","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_CANCEL_APPOINTMENT_SUCCESS \u003d \"Cancelled Appointment: %1$s\";","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    private Appointment apptToCancel;","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    private final Nric nricToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    private final Date dateToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    private final TimePeriod timePeriodToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"     * Creates a CancelAppCommand to add the specified {@code Nric, Date, TimePeriod}","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    public CancelAppCommand(Nric nricToMatch, Date dateToMatch, TimePeriod timePeriodToMatch) {","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        this.nricToMatch \u003d nricToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        this.dateToMatch \u003d dateToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        this.timePeriodToMatch \u003d timePeriodToMatch;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        this.apptToCancel \u003d null;","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        if (!model.hasPersonWithNric(nricToMatch)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        Appointment mockAppointmentToMatch \u003d new Appointment(nricToMatch, dateToMatch, timePeriodToMatch,","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"            new AppointmentType(\"Anything\"), new Note(\"Anything\"), new Mark(false));","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        if (!model.hasAppointment(mockAppointmentToMatch)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"            throw new CommandException(Messages.MESSAGE_APPOINTMENT_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"        this.apptToCancel \u003d model.getMatchingAppointment(nricToMatch, dateToMatch, timePeriodToMatch);","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        model.cancelAppointment(apptToCancel);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        return new CommandResult(String.format(MESSAGE_CANCEL_APPOINTMENT_SUCCESS, Messages.format(apptToCancel)));","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof CancelAppCommand)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand otherCancelAppCommand \u003d (CancelAppCommand) other;","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"        // Check if all fields are equal except apptToCancel as not initialised until execute","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"        return nricToMatch.equals(otherCancelAppCommand.nricToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"                \u0026\u0026 dateToMatch.equals(otherCancelAppCommand.dateToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"                \u0026\u0026 timePeriodToMatch.equals(otherCancelAppCommand.timePeriodToMatch);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"        // Build based on all fields except apptToCancel as not initialised until execute","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"                .add(\"nric\", nricToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"                .add(\"date\", dateToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"                .add(\"timePeriod\", timePeriodToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"                .toString();","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"xuelinglow":3,"dayn-1":8,"ThatGirlJam":95}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ViewMode.OVERALL);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limrik":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    private final boolean isShowHelp;","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    private final boolean isExit;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    /** Specifies the viewing mode that the application should be in after command execution. */","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    private final ViewMode viewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public CommandResult(String feedbackToUser, boolean isShowHelp,","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"                         boolean isExit, ViewMode viewMode) {","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        this.isShowHelp \u003d isShowHelp;","lastModifiedDate":"2024-03-27"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2024-03-27"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        this.viewMode \u003d viewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code isOverallCommand},","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"    public CommandResult(String feedbackToUser, ViewMode viewMode) {","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        this(feedbackToUser, false, false, viewMode);","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        this(feedbackToUser, false, false, ViewMode.ANY);","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        return isShowHelp;","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"        return isExit;","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"    public ViewMode getViewMode() {","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"        return viewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"                \u0026\u0026 isShowHelp \u003d\u003d otherCommandResult.isShowHelp","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"                \u0026\u0026 isExit \u003d\u003d otherCommandResult.isExit","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"                \u0026\u0026 viewMode \u003d\u003d otherCommandResult.viewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"        return Objects.hash(feedbackToUser, isShowHelp, isExit, viewMode);","lastModifiedDate":"2024-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .add(\"feedbackToUser\", feedbackToUser)","lastModifiedDate":"2019-02-23"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"                .add(\"isShowHelp\", isShowHelp)","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"                .add(\"isExit\", isExit)","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"limrik"},"content":"                .add(\"viewMode\", viewMode)","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limrik":32,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"            + \": Deletes the person identified by the NRIC number used in the displayed person list.\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"            + \"Parameters: NRIC (must be a existing NRIC in database)\\n\"","lastModifiedDate":"2024-03-14"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"            + \"Example: \" + COMMAND_WORD + \" S1234567A\";","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"    private final Nric targetNric;","lastModifiedDate":"2024-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"    public DeleteCommand(Nric targetNric) {","lastModifiedDate":"2024-03-14"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"        this.targetNric \u003d targetNric;","lastModifiedDate":"2024-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        if (!model.hasPersonWithNric(targetNric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        String message \u003d String.format(MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"                Messages.format(model.getPersonWithNric(targetNric)));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        model.deleteAppointmentsWithNric(targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"        model.deletePersonWithNric(targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        return new CommandResult(message);","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!(other instanceof DeleteCommand)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand otherDeleteCommand \u003d (DeleteCommand) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"        return targetNric.equals(otherDeleteCommand.targetNric);","lastModifiedDate":"2024-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"                .add(\"targetNric\", targetNric)","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xuelinglow":1,"dayn-1":4,"ThatGirlJam":1,"-":51,"cliftonchee":11}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":" * Edits the details of an existing person in CLInic.","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    public static final String COMMAND_WORD \u003d \"editPerson\";","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"            + \": Edits the details of the person identified by their Nric number. \"","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"            + \"Parameters: NRIC (must be a valid NRIC in the system) \"","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"            + \"[\" + PREFIX_DOB + \"DOB] \"","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"            + \"Example: \" + COMMAND_WORD + \" T0123456A \"","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_EDIT_PERSON_NO_FIELDS \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    private final Nric targetNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"     * @param nric of the person to edit","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    public EditPersonCommand(Nric nric, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        this.targetNric \u003d nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        if (!model.hasPersonWithNric(targetNric)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        Person personToEdit \u003d model.getPersonWithNric(targetNric);","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, Messages.format(editedPerson)));","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"        DateOfBirth updatedDob \u003d editPersonDescriptor.getDateOfBirth().orElse(personToEdit.getDob());","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"        return new Person(updatedName, personToEdit.getNric(), updatedDob, updatedPhone,","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"                updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand otherEditPersonCommand \u003d (EditPersonCommand) other;","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"        return targetNric.equals(otherEditPersonCommand.targetNric)","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 editPersonDescriptor.equals(otherEditPersonCommand.editPersonDescriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"                .add(\"nric\", targetNric)","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .add(\"editPersonDescriptor\", editPersonDescriptor)","lastModifiedDate":"2019-02-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"     * Nric cannot be edited.","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"limrik"},"content":"        private DateOfBirth dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"limrik"},"content":"            setDateOfBirth(toCopy.dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"            return CollectionUtil.isAnyNonNull(name, dob, phone, email, address, tags);","lastModifiedDate":"2024-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"limrik"},"content":"        public void setDateOfBirth(DateOfBirth dob) {","lastModifiedDate":"2024-03-12"},{"lineNumber":172,"author":{"gitId":"limrik"},"content":"            this.dob \u003d dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":173,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":174,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":175,"author":{"gitId":"limrik"},"content":"        public Optional\u003cDateOfBirth\u003e getDateOfBirth() {","lastModifiedDate":"2024-03-12"},{"lineNumber":176,"author":{"gitId":"limrik"},"content":"            return Optional.ofNullable(dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":177,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":178,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            EditPersonDescriptor otherEditPersonDescriptor \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return Objects.equals(name, otherEditPersonDescriptor.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"limrik"},"content":"                    \u0026\u0026 Objects.equals(dob, otherEditPersonDescriptor.dob)","lastModifiedDate":"2024-03-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(phone, otherEditPersonDescriptor.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(email, otherEditPersonDescriptor.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(address, otherEditPersonDescriptor.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 Objects.equals(tags, otherEditPersonDescriptor.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":244,"author":{"gitId":"limrik"},"content":"                    .add(\"dob\", dob)","lastModifiedDate":"2024-03-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                    .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                    .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"                    .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-02-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"limrik":18,"dayn-1":24,"-":210}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, ViewMode.ANY);","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"limrik":2,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FindApptCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":" * Finds and lists all appointments in address book whose details fit any of the argument keywords.","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"public class FindApptCommand extends Command {","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"    public static final String COMMAND_WORD \u003d \"findAppt\";","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-26"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"            + \": Finds the details of the appointment identified either by patient\u0027s NRIC, Date, or Start time.\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-26"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"            + \"[\" + PREFIX_NRIC + \" NRIC] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"            + \"[\" + PREFIX_NAME + \"DATE] \"","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"            + \"[\" + PREFIX_START_TIME + \"START_TIME]\\n\"","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"            + PREFIX_NRIC + \" T0123456A \"","lastModifiedDate":"2024-03-26"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"            + PREFIX_DATE + \" 2024-02-03 \"","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"            + PREFIX_START_TIME + \" 11:00\";","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"    private final AppointmentContainsKeywordsPredicate predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"    public FindApptCommand(AppointmentContainsKeywordsPredicate predicate) {","lastModifiedDate":"2024-03-26"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"        model.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"        return new CommandResult(","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"                String.format(Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"                        model.getFilteredAppointmentViewList().size()), ViewMode.OVERALL);","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"        if (!(other instanceof FindApptCommand)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand otherFindCommand \u003d (FindApptCommand) other;","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"        return predicate.equals(otherFindCommand.predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"limrik":2,"cliftonchee":67}},{"path":"src/main/java/seedu/address/logic/commands/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    public static final String COMMAND_WORD \u003d \"findPerson\";","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"            + \": Finds all persons whose names OR nric start with \"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"            + PREFIX_NAME + \"NAME(S) OR  \"","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"            + PREFIX_NRIC + \"NRIC \\n\"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NAME + \"Alex\"","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"            + \" OR \" + COMMAND_WORD + \" \" + PREFIX_NRIC + \"T0123456A\";","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_MULTIPLE_FIELDS_PROVIDED \u003d \"Find by either NRIC or name, not both!\";","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"    public FindPersonCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"                        model.getFilteredPersonList().size()), ViewMode.OVERALL);","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        if (!(other instanceof FindPersonCommand)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand otherFindPersonCommand \u003d (FindPersonCommand) other;","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        return predicate.equals(otherFindPersonCommand.predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .add(\"predicate\", predicate)","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dayn-1":22,"limrik":3,"-":45}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, ViewMode.ANY);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limrik":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        return new CommandResult(MESSAGE_SUCCESS, ViewMode.OVERALL);","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"limrik":2,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_APPOINTMENTS_VIEW;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-26"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":" * Edits the details of an existing person in the CLInic.","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"            + \": Mark the appointment of the person identified as completed\"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"            + \"Parameters: \"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"            + PREFIX_START_TIME + \"START_TIME \"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"            + PREFIX_END_TIME + \"END_TIME\";","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"    public static final String MESSAGE_MARK_PERSON_SUCCESS \u003d \"Appointment successfully marked as seen: %1$s\";","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    private final Date date;","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"    private final TimePeriod timePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"    public MarkCommand(Nric nric, Date date, TimePeriod timePeriod) {","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"        requireNonNull(timePeriod);","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        requireNonNull(model);","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"        Appointment mockAppointmentToMatch \u003d new Appointment(nric, date, timePeriod,","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"            new AppointmentType(\"Anything\"), new Note(\"Anything\"), new Mark(false));","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"        if (!model.hasAppointment(mockAppointmentToMatch)) {","lastModifiedDate":"2024-03-26"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"            throw new CommandException(Messages.MESSAGE_APPOINTMENT_NOT_FOUND);","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"        Appointment appt \u003d model.getMatchingAppointment(nric, date, timePeriod);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"        Appointment newAppt \u003d new Appointment(appt.getNric(), appt.getDate(), appt.getTimePeriod(),","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"            appt.getAppointmentType(), appt.getNote(), new Mark(true));","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"        model.setAppointment(appt, newAppt);","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        model.updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS_VIEW);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_PERSON_SUCCESS, Messages.format(newAppt)));","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"        if (!(other instanceof MarkCommand)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand otherMarkCommand \u003d (MarkCommand) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"        return nric.equals(otherMarkCommand.nric)","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 date.equals(otherMarkCommand.date)","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 timePeriod.equals(otherMarkCommand.timePeriod);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"                .add(\"date\", date)","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"                .add(\"timePeriod\", timePeriod)","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":103}},{"path":"src/main/java/seedu/address/logic/commands/SwitchViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":" * Allows the user to switch between the Overall View and Day View.","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"public class SwitchViewCommand extends Command {","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    public static final String COMMAND_WORD \u003d \"switchView\";","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_SWITCH_VIEW_SUCCESS \u003d \"Successfully switched view\";","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"        return new CommandResult(MESSAGE_SWITCH_VIEW_SUCCESS, false, false, ViewMode.SWITCH);","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"limrik":18}},{"path":"src/main/java/seedu/address/logic/parser/AddAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"public class AddAppCommandParser implements Parser\u003cAddAppCommand\u003e {","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    public AddAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"                        PREFIX_END_TIME, PREFIX_TAG, PREFIX_NOTE);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"                PREFIX_END_TIME, PREFIX_TAG)","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"                PREFIX_END_TIME, PREFIX_TAG, PREFIX_NOTE);","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        TimePeriod timePeriod \u003d ParserUtil.parseTimePeriod(","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"                argMultimap.getValue(PREFIX_START_TIME).get(),","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"                argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        Note note \u003d new Note(\"\");","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        if (argMultimap.getValue(PREFIX_NOTE).isPresent()) {","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"            note \u003d ParserUtil.parseNote(argMultimap.getValue(PREFIX_NOTE).get());","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"        AppointmentType appointmentType \u003d ParserUtil.parseAppointmentType(","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"                argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        Mark mark \u003d new Mark(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        Appointment appToAdd \u003d new Appointment(nric, date, timePeriod, appointmentType, note, mark);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        return new AddAppCommand(appToAdd);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"xuelinglow":4,"dayn-1":71}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC, PREFIX_DOB, PREFIX_PHONE,","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_NRIC, PREFIX_DOB, PREFIX_ADDRESS,","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"                PREFIX_PHONE, PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC, PREFIX_DOB,","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        DateOfBirth dob \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get());","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"        Person person \u003d new Person(name, nric, dob, phone, email, address, tagList);","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"limrik":13,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-07-29"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.CancelAppCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"import seedu.address.logic.commands.SwitchViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AddressBookParser.class);","lastModifiedDate":"2023-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Note to developers: Change the log level in config.json to enable lower level (i.e., FINE, FINER and lower)","lastModifiedDate":"2023-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // log messages such as the one below.","lastModifiedDate":"2023-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Lower level log messages are used sparingly to minimize noise in the code.","lastModifiedDate":"2023-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.fine(\"Command word: \" + commandWord + \"; Arguments: \" + arguments);","lastModifiedDate":"2023-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"        case FindApptCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"            return new FindApptCommandParser().parse(arguments);","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"        case AddAppCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"            return new AddAppCommandParser().parse(arguments);","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"        case CancelAppCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"            return new CancelAppCommandParser().parse(arguments);","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"        case SwitchViewCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-27"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"            return new SwitchViewCommand();","lastModifiedDate":"2024-03-27"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            logger.finer(\"This user input caused a ParseException: \" + userInput);","lastModifiedDate":"2023-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"xuelinglow":4,"dayn-1":6,"limrik":4,"ThatGirlJam":8,"-":79,"cliftonchee":4}},{"path":"src/main/java/seedu/address/logic/parser/CancelAppCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.CancelAppCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":" * Parses input arguments and creates a new CancelAppCommand object","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"public class CancelAppCommandParser implements Parser\u003cCancelAppCommand\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses the given {@code String} of arguments in the context of the CancelAppCommand","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"     * and returns a CancelAppCommand object for execution.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    public CancelAppCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"                        PREFIX_END_TIME);","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"                PREFIX_END_TIME)","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"                PREFIX_END_TIME);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        TimePeriod timePeriod \u003d ParserUtil.parseTimePeriod(","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                argMultimap.getValue(PREFIX_START_TIME).get(),","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"                argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        return new CancelAppCommand(nric, date, timePeriod);","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ThatGirlJam":57}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    public static final Prefix PREFIX_DOB \u003d new Prefix(\"b/\");","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"from/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"to/\");","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limrik":2,"dayn-1":4,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"            Nric nric \u003d ParserUtil.parseNric(args);","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"            return new DeleteCommand(nric);","lastModifiedDate":"2024-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":26,"cliftonchee":3}},{"path":"src/main/java/seedu/address/logic/parser/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE,","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric;","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"            targetNric \u003d ParserUtil.parseNric(argMultimap.getPreamble());","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"                    EditPersonCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_DOB, PREFIX_PHONE,","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"        if (argMultimap.getValue(PREFIX_DOB).isPresent()) {","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"            editPersonDescriptor.setDateOfBirth(ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DOB).get()));","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_EDIT_PERSON_NO_FIELDS);","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        return new EditPersonCommand(targetNric, editPersonDescriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"limrik":6,"dayn-1":16,"-":70}},{"path":"src/main/java/seedu/address/logic/parser/FindApptCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-26"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":" * Parses input arguments and creates a new FindApptCommand object","lastModifiedDate":"2024-03-26"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"public class FindApptCommandParser implements Parser\u003cFindApptCommand\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"     * Parses the given {@code String} of arguments in the context of the FindApptCommand","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"     * and returns a FindApptCommand object for execution.","lastModifiedDate":"2024-03-26"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"    public FindApptCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-26"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC,","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":"                        PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC,","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"                PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_NAME) || arePrefixesPresent(argMultimap, PREFIX_END_TIME)","lastModifiedDate":"2024-03-26"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cNric\u003e nricFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cDate\u003e dateFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cTime\u003e timeFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"            nricFilter \u003d Optional.of(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"            dateFilter \u003d Optional.of(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"            timeFilter \u003d Optional.of(ParserUtil.parseTime(argMultimap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"                nricFilter, dateFilter, timeFilter);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"        return new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-26"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"cliftonchee":75}},{"path":"src/main/java/seedu/address/logic/parser/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.NricContainsMatchPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(args);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_NRIC);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        boolean isFindPersonByNric \u003d argMultimap.getValue(PREFIX_NRIC).isPresent();","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        boolean isFindPersonByName \u003d argMultimap.getValue(PREFIX_NAME).isPresent();","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        if (isFindPersonByNric \u0026\u0026 isFindPersonByName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"            throw new ParseException(FindPersonCommand.MESSAGE_MULTIPLE_FIELDS_PROVIDED);","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        if (isFindPersonByName) {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"            String trimmedNameArgs \u003d argMultimap.getValue(PREFIX_NAME).get().trim();","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"            if (trimmedNameArgs.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"                throw new ParseException(","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"            String[] nameKeywords \u003d trimmedNameArgs.split(\"\\\\s+\");","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"            return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        } else if (isFindPersonByNric) {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"            String trimmedNricArgs \u003d argMultimap.getValue(PREFIX_NRIC).get().trim();","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"            if (trimmedNricArgs.isEmpty()) {","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"                throw new ParseException(","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"            return new FindPersonCommand(new NricContainsMatchPredicate(trimmedNricArgs));","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        throw new ParseException(","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dayn-1":58}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"     * and returns an MarkCommand object for execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"                        PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"                PREFIX_END_TIME)","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"                PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"        TimePeriod timePeriod \u003d ParserUtil.parseTimePeriod(","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"                argMultimap.getValue(PREFIX_START_TIME).get(),","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"                argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"        return new MarkCommand(nric, date, timePeriod);","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":58}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2024-03-12"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2024-03-12"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"     * Parses a {@code String dob} into a {@code dob}.","lastModifiedDate":"2024-03-12"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-12"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"     * @throws ParseException if the given {@code dob} is invalid.","lastModifiedDate":"2024-03-12"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"    public static DateOfBirth parseDateOfBirth(String dob) throws ParseException {","lastModifiedDate":"2024-03-12"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"        requireNonNull(dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"        String trimmedDob \u003d dob.trim();","lastModifiedDate":"2024-03-12"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"        if (!DateOfBirth.isValidDateOfBirth(trimmedDob)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":87,"author":{"gitId":"limrik"},"content":"        return new DateOfBirth(trimmedDob);","lastModifiedDate":"2024-03-12"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a {@code String date} into a {@code date}.","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(date);","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a {@code String appointmentType} into a {@code AppointmentType}.","lastModifiedDate":"2024-03-15"},{"lineNumber":179,"author":{"gitId":"ThatGirlJam"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":180,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":181,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws ParseException if the given {@code appointmentType} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":182,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":183,"author":{"gitId":"ThatGirlJam"},"content":"    public static AppointmentType parseAppointmentType(String apptType)","lastModifiedDate":"2024-03-15"},{"lineNumber":184,"author":{"gitId":"ThatGirlJam"},"content":"            throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":185,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(apptType);","lastModifiedDate":"2024-03-15"},{"lineNumber":186,"author":{"gitId":"ThatGirlJam"},"content":"        String trimmedApptType \u003d apptType.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"        if (!AppointmentType.isValidAppointmentType(trimmedApptType)) {","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"ThatGirlJam"},"content":"            throw new ParseException(AppointmentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":189,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"        return new AppointmentType(trimmedApptType);","lastModifiedDate":"2024-03-24"},{"lineNumber":191,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":192,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":193,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":194,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a {@code String note} into a {@code Note}.","lastModifiedDate":"2024-03-15"},{"lineNumber":195,"author":{"gitId":"ThatGirlJam"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":196,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":197,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"    public static Note parseNote(String note) {","lastModifiedDate":"2024-03-24"},{"lineNumber":199,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":200,"author":{"gitId":"ThatGirlJam"},"content":"        String trimmedNote \u003d note.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"        return new Note(trimmedNote);","lastModifiedDate":"2024-03-24"},{"lineNumber":202,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":203,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":204,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":205,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2024-03-15"},{"lineNumber":206,"author":{"gitId":"ThatGirlJam"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2024-03-15"},{"lineNumber":207,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":208,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":209,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":210,"author":{"gitId":"ThatGirlJam"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":211,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(time);","lastModifiedDate":"2024-03-15"},{"lineNumber":212,"author":{"gitId":"ThatGirlJam"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2024-03-15"},{"lineNumber":213,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":214,"author":{"gitId":"ThatGirlJam"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":215,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":218,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":219,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":220,"author":{"gitId":"ThatGirlJam"},"content":"     * Parses a {@code String fromTime} and {@code String toTime}into a {@code TimePeriod}.","lastModifiedDate":"2024-03-15"},{"lineNumber":221,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":222,"author":{"gitId":"ThatGirlJam"},"content":"     * @throws ParseException if the given {@code TimePeriod} is invalid.","lastModifiedDate":"2024-03-15"},{"lineNumber":223,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":224,"author":{"gitId":"ThatGirlJam"},"content":"    public static TimePeriod parseTimePeriod(String fromTime, String toTime) throws ParseException {","lastModifiedDate":"2024-03-15"},{"lineNumber":225,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(fromTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":226,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(toTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":227,"author":{"gitId":"ThatGirlJam"},"content":"        Time startTime \u003d parseTime(fromTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":228,"author":{"gitId":"ThatGirlJam"},"content":"        Time endTime \u003d parseTime(toTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":229,"author":{"gitId":"ThatGirlJam"},"content":"        if (!TimePeriod.isValidTimePeriod(startTime, endTime)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":230,"author":{"gitId":"ThatGirlJam"},"content":"            throw new ParseException(TimePeriod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":231,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":232,"author":{"gitId":"ThatGirlJam"},"content":"        return new TimePeriod(startTime, endTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":233,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"limrik":32,"dayn-1":5,"ThatGirlJam":73,"-":124}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentList;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentViewList;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    private final AppointmentList appointments;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    private final AppointmentViewList appointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        appointments \u003d new AppointmentList();","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        appointmentView \u003d new AppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"        setAppointments(newData.getAppointmentList());","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"     * Returns true if a person with the same name as {@code person} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"    public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        return persons.hasPersonWithNric(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"     * Returns true if a person with the same name as {@code person} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"    public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"        return persons.getPersonWithNric(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"cliftonchee"},"content":"     * Deletes if a person with the same nric as {@code nric} exists in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"cliftonchee"},"content":"    public void deletePersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"cliftonchee"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"cliftonchee"},"content":"        persons.deletePersonWithNric(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"    //// appointment-level operations","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"        this.appointments.setAppointments(appointments);","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"xuelinglow"},"content":"        this.appointmentView.setAppointmentViews(persons, appointments);","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"     * Returns true if an appointment with the same identity as {@code appointment}","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"     * exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"        return appointments.contains(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"     * Adds an appointment to the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"     * The appointment must not already exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"xuelinglow"},"content":"    public void addAppointment(Appointment appt) {","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"xuelinglow"},"content":"        appointments.add(appt);","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"xuelinglow"},"content":"        this.appointmentView.setAppointmentViews(persons, appointments);","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":163,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":164,"author":{"gitId":"xuelinglow"},"content":"     * Replaces the given person {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-03-21"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"xuelinglow"},"content":"     * The person identity of {@code editedAppointment} must not be the same as another","lastModifiedDate":"2024-03-21"},{"lineNumber":167,"author":{"gitId":"xuelinglow"},"content":"     * existing person in the address book.","lastModifiedDate":"2024-03-21"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(editedAppointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"        appointments.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":172,"author":{"gitId":"xuelinglow"},"content":"        this.appointmentView.setAppointmentViews(persons, appointments);","lastModifiedDate":"2024-03-27"},{"lineNumber":173,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"     * Cancels {@code key} from this {@code AddressBook}.","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"dayn-1"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":178,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":179,"author":{"gitId":"xuelinglow"},"content":"    public void cancelAppointment(Appointment key) {","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"        appointments.remove(key);","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"xuelinglow"},"content":"        this.appointmentView.setAppointmentViews(persons, appointments);","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                .add(\"persons\", persons)","lastModifiedDate":"2019-02-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"    public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"        return appointments.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"xuelinglow"},"content":"    public ObservableList\u003cAppointmentView\u003e getAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"xuelinglow"},"content":"        return appointmentView.asUnmodifiableObservableList();","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"ThatGirlJam"},"content":"    public Appointment getMatchingAppointment(Nric nric, Date date, TimePeriod timePeriod) {","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"ThatGirlJam"},"content":"        return appointments.getMatchingAppointment(nric, date, timePeriod);","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"xuelinglow"},"content":"    /** delete appointments when person is deleted */","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric(Nric targetNric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"ThatGirlJam"},"content":"        appointments.deleteAppointmentsWithNric(targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"xuelinglow"},"content":"        this.appointmentView.setAppointmentViews(persons, appointments);","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":219,"author":{"gitId":"xuelinglow"},"content":"     * Create AppointmentView from appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":220,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":221,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentView createAppointmentView(Appointment appointment) {","lastModifiedDate":"2024-03-21"},{"lineNumber":222,"author":{"gitId":"xuelinglow"},"content":"        Person person \u003d getPersonWithNric(appointment.getNric());","lastModifiedDate":"2024-03-21"},{"lineNumber":223,"author":{"gitId":"xuelinglow"},"content":"        return new AppointmentView(person.getName(), appointment);","lastModifiedDate":"2024-03-21"},{"lineNumber":224,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":225,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (!(other instanceof AddressBook)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        AddressBook otherAddressBook \u003d (AddressBook) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        return persons.equals(otherAddressBook.persons);","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xuelinglow":32,"dayn-1":64,"ThatGirlJam":11,"-":130,"cliftonchee":8}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"    Predicate\u003cAppointmentView\u003e PREDICATE_SHOW_ALL_APPOINTMENTS_VIEW \u003d unused -\u003e true;","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"     * Returns true if a person with the same nric as {@code nric} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"    boolean hasPersonWithNric(Nric nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"     * Returns person with the same nric as {@code nric}.","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"    Person getPersonWithNric(Nric nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"     * Deletes person with the same nric as {@code nric}.","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"    void deletePersonWithNric(Nric nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"     * Returns true if an appointment with the same identity as {@code appointment} exists in CLInic.","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"    boolean hasAppointment(Appointment appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"     * Cancels the given appointment.","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"     * The appointment must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"xuelinglow"},"content":"    void cancelAppointment(Appointment key);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"     * Adds the given appointment.","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"     * {@code appointment} must not already exist in CLInic","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"    void addAppointment(Appointment appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"     * Replaces the given appointment {@code target} with {@code editedAppointment}.","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"     * The appointment details of {@code editedAppointment} must","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"     * not be the same as another existing appointment in CLInic.","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"    void setAppointment(Appointment target, Appointment editedAppointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":134,"author":{"gitId":"xuelinglow"},"content":"    /** Returns an unmodifiable view of the filtered appointment view list */","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"xuelinglow"},"content":"    ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"     * Updates the filter of the filtered appointment list to filter by the given {@code predicate}.","lastModifiedDate":"2024-03-13"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2024-03-13"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":141,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":142,"author":{"gitId":"xuelinglow"},"content":"    void updateFilteredAppointmentList(Predicate\u003cAppointmentView\u003e predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"limrik"},"content":"    /** Returns an unmodifiable view of the appointment day-view list */","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"limrik"},"content":"    ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":146,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":147,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-26"},{"lineNumber":148,"author":{"gitId":"limrik"},"content":"     * Updates the appointment day-view list, filtering by today\u0027s date","lastModifiedDate":"2024-03-26"},{"lineNumber":149,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-26"},{"lineNumber":150,"author":{"gitId":"limrik"},"content":"    void updateFilteredAppointmentDayViewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":151,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"    /** Returns an Appointment that matches based on Nric, Date and TimePeriod given **/","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"    Appointment getMatchingAppointment(Nric nric, Date date, TimePeriod timePeriod);","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"    /** Deletes all appointments of a targetNric **/","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"    void deleteAppointmentsWithNric(Nric targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"xuelinglow":8,"dayn-1":40,"limrik":8,"ThatGirlJam":9,"-":87,"cliftonchee":5}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"    private final FilteredList\u003cAppointmentView\u003e filteredAppointmentsView;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    private final FilteredList\u003cAppointmentView\u003e filteredAppointmentsDayView;","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        this.filteredAppointmentsView \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        this.filteredAppointmentsDayView \u003d new FilteredList\u003c\u003e(this.addressBook.getAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        this.updateFilteredAppointmentDayViewList();","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        return addressBook.hasPersonWithNric(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"        return addressBook.getPersonWithNric(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"cliftonchee"},"content":"    public void deletePersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"cliftonchee"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"cliftonchee"},"content":"        addressBook.deletePersonWithNric(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"    public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"        return addressBook.hasAppointment(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"xuelinglow"},"content":"    public void cancelAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-27"},{"lineNumber":153,"author":{"gitId":"xuelinglow"},"content":"        addressBook.cancelAppointment(appointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"    public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"        addressBook.addAppointment(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":159,"author":{"gitId":"xuelinglow"},"content":"        updateFilteredAppointmentList(PREDICATE_SHOW_ALL_APPOINTMENTS_VIEW);","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"        addressBook.setAppointment(target, editedAppointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":166,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":167,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"    public Appointment getMatchingAppointment(Nric nric, Date date, TimePeriod timePeriod) {","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"        return addressBook.getMatchingAppointment(nric, date, timePeriod);","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric(Nric targetNric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"        addressBook.deleteAppointmentsWithNric(targetNric);","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"     * Returns an unmodifiable view of the list of {@code Appointment} backed by the internal list of","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":204,"author":{"gitId":"xuelinglow"},"content":"    public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":205,"author":{"gitId":"xuelinglow"},"content":"        return filteredAppointmentsView;","lastModifiedDate":"2024-03-21"},{"lineNumber":206,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":207,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":208,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":209,"author":{"gitId":"xuelinglow"},"content":"    public void updateFilteredAppointmentList(Predicate\u003cAppointmentView\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2024-03-13"},{"lineNumber":211,"author":{"gitId":"xuelinglow"},"content":"        filteredAppointmentsView.setPredicate(predicate);","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":213,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"limrik"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Appointment Day-View List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":217,"author":{"gitId":"limrik"},"content":"    public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":218,"author":{"gitId":"limrik"},"content":"        return filteredAppointmentsDayView;","lastModifiedDate":"2024-03-26"},{"lineNumber":219,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":220,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":221,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":222,"author":{"gitId":"limrik"},"content":"    public void updateFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":223,"author":{"gitId":"limrik"},"content":"        Predicate\u003cAppointmentView\u003e predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"limrik"},"content":"            Optional.empty(),","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"limrik"},"content":"            Optional.of(new Date(LocalDate.now().toString())),","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"limrik"},"content":"            Optional.empty());","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"limrik"},"content":"        filteredAppointmentsDayView.setPredicate(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-07-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        if (!(other instanceof ModelManager)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        ModelManager otherModelManager \u003d (ModelManager) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        return addressBook.equals(otherModelManager.addressBook)","lastModifiedDate":"2023-07-13"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(otherModelManager.userPrefs)","lastModifiedDate":"2023-07-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(otherModelManager.filteredPersons);","lastModifiedDate":"2023-07-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xuelinglow":13,"limrik":24,"dayn-1":45,"ThatGirlJam":13,"-":147,"cliftonchee":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"     * Returns an unmodifiable view of the appointments list.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"     * This list will not contain any duplicate appointments.","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    ObservableList\u003cAppointment\u003e getAppointmentList();","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    ObservableList\u003cAppointmentView\u003e getAppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xuelinglow":3,"dayn-1":7,"-":17}},{"path":"src/main/java/seedu/address/model/appointment/Appointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":" * Represents an Appointment in the application.","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"public class Appointment {","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    // Identity fields","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    // Data fields","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    private final Date date;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    private final TimePeriod timePeriod;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    private final AppointmentType appointmentType;","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    private final Note note;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    private Mark mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    public Appointment(Nric nric, Date date, TimePeriod timePeriod,","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"                       AppointmentType appointmentType, Note note, Mark mark) {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        requireAllNonNull(nric, date, timePeriod, appointmentType, note);","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        this.timePeriod \u003d timePeriod;","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        this.appointmentType \u003d appointmentType;","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        return nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    public Date getDate() {","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        return date;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"    public TimePeriod getTimePeriod() {","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        return timePeriod;","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    public Time getStartTime() {","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        return timePeriod.getStartTime();","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"    public Time getEndTime() {","lastModifiedDate":"2024-03-26"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        return timePeriod.getEndTime();","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"    public AppointmentType getAppointmentType() {","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        return appointmentType;","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"    public Note getNote() {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        return note;","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"    public Mark getMark() {","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"        return mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"     * Returns true if both appointments have the same patient, date and time periods.","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"     * This defines a weaker notion of equality between two appointments.","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"    public boolean isSameAppointment(Appointment otherAppointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 otherAppointment.nric.equals(nric)","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 otherAppointment.date.equals(date)","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 otherAppointment.timePeriod.equals(timePeriod);","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"     * Returns true if both appointments have the same patient and data fields.","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"     * This defines a stronger notion of equality between two appointments.","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        if (!(other instanceof Appointment)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"        Appointment otherAppointment \u003d (Appointment) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"        return nric.equals(otherAppointment.nric)","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 date.equals(otherAppointment.date)","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 timePeriod.equals(otherAppointment.timePeriod)","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 appointmentType.equals(otherAppointment.appointmentType)","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 note.equals(otherAppointment.note)","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 mark.equals(otherAppointment.mark);","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"xuelinglow"},"content":"        return Objects.hash(nric, date, timePeriod, appointmentType, note, mark);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"                .add(\"date\", date)","lastModifiedDate":"2024-03-13"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"                .add(\"timePeriod\", timePeriod)","lastModifiedDate":"2024-03-13"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"                .add(\"appointmentType\", appointmentType)","lastModifiedDate":"2024-03-13"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"                .add(\"note\", note)","lastModifiedDate":"2024-03-13"},{"lineNumber":125,"author":{"gitId":"xuelinglow"},"content":"                .add(\"mark\", mark)","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"                .toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"xuelinglow":11,"dayn-1":109,"limrik":8}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":" * Tests that a {@code Appointment}\u0027s {@code NRIC}, {@code Date}, {@code Time} matches any of the filters given.","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"cliftonchee"},"content":"public class AppointmentContainsKeywordsPredicate implements Predicate\u003cAppointmentView\u003e {","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"    private final Optional\u003cNric\u003e nricFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"    private final Optional\u003cDate\u003e dateFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"    private final Optional\u003cTime\u003e timeFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"     * Constructs a {@code AppointmentContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"     * @param nricFilter","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"     * @param dateFilter","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"     * @param timeFilter","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"    public AppointmentContainsKeywordsPredicate(Optional\u003cNric\u003e nricFilter,","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"                                                Optional\u003cDate\u003e dateFilter,","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"                                                Optional\u003cTime\u003e timeFilter) {","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"        this.nricFilter \u003d nricFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"        this.dateFilter \u003d dateFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"        this.timeFilter \u003d timeFilter;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"    public boolean test(AppointmentView appointment) {","lastModifiedDate":"2024-03-26"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"        boolean matchesNric \u003d true;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"        boolean matchesDate \u003d true;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"        boolean matchesTimePeriod \u003d true;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":"        if (nricFilter.isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"            Nric filterNric \u003d nricFilter.get();","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"            matchesNric \u003d appointment.getAppointment().getNric().equals(filterNric);","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"        if (dateFilter.isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"            Date filterDate \u003d dateFilter.get();","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"            matchesDate \u003d appointment.getAppointment().getDate().equals(filterDate);","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"        if (timeFilter.isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"            Time filterTime \u003d timeFilter.get();","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"            matchesTimePeriod \u003d appointment.getAppointment().getStartTime().compareTo(filterTime) \u003d\u003d 1","lastModifiedDate":"2024-03-26"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"                    || appointment.getAppointment().getStartTime().equals(filterTime);","lastModifiedDate":"2024-03-26"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"        return matchesNric \u0026\u0026 matchesDate \u0026\u0026 matchesTimePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"        if (!(other instanceof AppointmentContainsKeywordsPredicate)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"cliftonchee"},"content":"                (AppointmentContainsKeywordsPredicate) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"        return nricFilter.equals(otherNameContainsKeywordsPredicate.nricFilter)","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"                \u0026\u0026 dateFilter.equals(otherNameContainsKeywordsPredicate.dateFilter)","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"                \u0026\u0026 timeFilter.equals(otherNameContainsKeywordsPredicate.timeFilter);","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"cliftonchee"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"cliftonchee"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"cliftonchee"},"content":"        return new ToStringBuilder(this).add(\"nricFilter\", nricFilter)","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"cliftonchee"},"content":"                .add(\"dateFilter\", dateFilter)","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"cliftonchee"},"content":"                .add(\"timeFilter\", timeFilter)","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"cliftonchee"},"content":"                .toString();","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"limrik":2,"cliftonchee":82}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.List;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":" * A list of appointments that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":" * An appointment is considered unique by comparing using {@code Appointment#isSameAppointment(Appointment)}.","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":" * As such, adding and updating of appointments uses Appointment#isSameAppointment(Appointment) for equality","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":" * to ensure that the appointment being added or updated is unique and not duplicated.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":" * However, the removal of an appointment uses Person#equals(Object) to ensure that the","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":" * appointment with exactly the same fields will be removed.","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":" *","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":" *","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":" * @see Appointment#isSameAppointment(Appointment)","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"public class AppointmentList implements Iterable\u003cAppointment\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    private final ObservableList\u003cAppointment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    private final ObservableList\u003cAppointment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns true if the list contains an equivalent appointment as the given argument.","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean contains(Appointment toCheck) {","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        return internalList.stream().anyMatch(toCheck::isSameAppointment);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"     * Adds an appointment to the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"     * The appointment must not already exist in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    public void add(Appointment toAdd) {","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"     * Replaces the appointment {@code target} in the list with {@code editedAppointment}.","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"     * The appointment of {@code editedAppointment} must not be the same as another existing appointment in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        requireAllNonNull(target, editedAppointment);","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        if (!target.isSameAppointment(editedAppointment) \u0026\u0026 contains(editedAppointment)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"        internalList.set(index, editedAppointment);","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"     * Removes the equivalent appointment from the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"     * The appointment must exist in the list.","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    public void remove(Appointment toRemove) {","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AppointmentNotFoundException();","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments(AppointmentList replacement) {","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2024-03-15"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"     * Replaces the contents of this list with {@code appointments}.","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"     * {@code appointments} must not contain duplicate appointments.","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        requireAllNonNull(appointments);","lastModifiedDate":"2024-03-15"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        if (!appointmentsAreUnique(appointments)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"            throw new DuplicateAppointmentException();","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"        internalList.setAll(appointments);","lastModifiedDate":"2024-03-15"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"    public ObservableList\u003cAppointment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"    public Iterator\u003cAppointment\u003e iterator() {","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns an Appointment that matches from the Appointment list based on {@code Nric, Date, TimePeriod} given.","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"     * Throws an {@code AppointmentNotFoundException} if no matching appointment is found.","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"    public Appointment getMatchingAppointment(Nric nricToMatch, Date dateToMatch, TimePeriod timePeriodToMatch) {","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(nricToMatch);","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(dateToMatch);","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(timePeriodToMatch);","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"        for (Appointment appointment : this) {","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"            if (appointment.getNric().equals(nricToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"                    \u0026\u0026 appointment.getDate().equals(dateToMatch)","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"                    \u0026\u0026 appointment.getTimePeriod().equals(timePeriodToMatch)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"                return appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"        throw new AppointmentNotFoundException();","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof AppointmentList)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList otherAppointmentList \u003d (AppointmentList) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"        return internalList.equals(otherAppointmentList.internalList);","lastModifiedDate":"2024-03-15"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns true if {@code appointments} contains only unique appointments.","lastModifiedDate":"2024-03-15"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"    private boolean appointmentsAreUnique(List\u003cAppointment\u003e appointments) {","lastModifiedDate":"2024-03-15"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2024-03-15"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"                if (appointments.get(i).isSameAppointment(appointments.get(j))) {","lastModifiedDate":"2024-03-15"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"                    return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"                }","lastModifiedDate":"2024-03-15"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"            }","lastModifiedDate":"2024-03-15"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"        return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":175,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"    /** Delete all appointments with given Nric if such appointments exist without exceptions **/","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"ThatGirlJam"},"content":"        internalList.removeIf(appointment -\u003e appointment.getNric().equals(nric));","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"xuelinglow":1,"dayn-1":1,"ThatGirlJam":180}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":" * Represents an AppointmentType in CLInic.","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":" * Guarantees: immutable; typeName is valid as declared in {@link #isValidAppointmentType(String)}","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"public class AppointmentType {","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Appointment type should not be empty\";","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^.+$\";","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    public final String typeName;","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"     * Constructs an {@code AppointmentType}.","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"     * @param typeName A valid appointment type name.","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    public AppointmentType(String typeName) {","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(typeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        checkArgument(isValidAppointmentType(typeName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        this.typeName \u003d typeName;","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"     * Returns true if a given string is a valid appointment type name.","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    public static boolean isValidAppointmentType(String test) {","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        return test.trim().matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"            return true;","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        if (!(other instanceof AppointmentType)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        AppointmentType otherType \u003d (AppointmentType) other;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        return typeName.equals(otherType.typeName);","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        return typeName.hashCode();","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        return \u0027[\u0027 + typeName + \u0027]\u0027;","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"dayn-1":62}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":" * Represents an AppointmentView in CLInic.","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentView {","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"    private final Name name;","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"    private final Appointment appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"     * Constructs an {@code AppointmentView}.","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentView(Name name, Appointment appointment) {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"        requireAllNonNull(name, appointment);","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"        this.name \u003d name;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"        this.appointment \u003d appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public Name getName() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        return name;","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"    public Appointment getAppointment() {","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        return appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"     * Returns true if both appointments view have the same patient, date and time periods.","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"     * This defines a weaker notion of equality between two appointment views.","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    public boolean isSameAppointmentView(AppointmentView otherAppointment) {","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"        if (otherAppointment \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"        return otherAppointment !\u003d null","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 otherAppointment.name.equals(name)","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 otherAppointment.appointment.equals(appointment);","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"     * Returns true if both appointment views have the same patient and data fields.","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"     * This defines a stronger notion of equality between two appointment views.","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        if (!(other instanceof AppointmentView)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        AppointmentView otherAppointment \u003d (AppointmentView) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"        return name.equals(otherAppointment.name)","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"                \u0026\u0026 appointment.equals(otherAppointment.appointment);","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"        return Objects.hash(name, appointment);","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"                .add(\"name\", name)","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"                .add(\"appointment\", appointment)","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"                .toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":82}},{"path":"src/main/java/seedu/address/model/appointment/AppointmentViewList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import java.util.Comparator;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import java.util.Iterator;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":" * A list of appointmentViews that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":" * An appointmentView is considered unique by comparing using","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":" * {@code AppointmentView#isSameAppointment(AppointmentView)}.","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":" * As such, adding and updating of appointments uses AppointmentView#isSameAppointment(AppointmentView) for equality","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":" * to ensure that the appointmentView being added or updated is unique and not duplicated.","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":" * However, the removal of an appointmentView uses Person#equals(Object) to ensure that the","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":" * appointmentView with exactly the same fields will be removed.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":" *","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":" *","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":" * @see AppointmentView#isSameAppointmentView(AppointmentView)","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentViewList implements Iterable\u003cAppointmentView\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"    private final ObservableList\u003cAppointmentView\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"    private final ObservableList\u003cAppointmentView\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews(UniquePersonList personList, List\u003cAppointment\u003e appointmentList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        requireAllNonNull(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        internalList.clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"        for (Person person : personList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"            Nric personNric \u003d person.getNric();","lastModifiedDate":"2024-03-27"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"            for (Appointment appointment : appointmentList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"                Nric appointmentNric \u003d appointment.getNric();","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"                // Check if the NRICs match","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"                if (personNric.equals(appointmentNric)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"                    AppointmentView appointmentView \u003d new AppointmentView(person.getName(), appointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"                    internalList.add(appointmentView);","lastModifiedDate":"2024-03-27"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"                }","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"        sortList();","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews(UniquePersonList personList, AppointmentList appointmentList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"        requireAllNonNull(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        internalList.clear();","lastModifiedDate":"2024-03-27"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"        for (Person person : personList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"            Nric personNric \u003d person.getNric();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"            for (Appointment appointment : appointmentList) {","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"                Nric appointmentNric \u003d appointment.getNric();","lastModifiedDate":"2024-03-27"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"                // Check if the NRICs match","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"                if (personNric.equals(appointmentNric)) {","lastModifiedDate":"2024-03-27"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"                    AppointmentView appointmentView \u003d new AppointmentView(person.getName(), appointment);","lastModifiedDate":"2024-03-27"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"                    internalList.add(appointmentView);","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        sortList();","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2024-03-21"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"    public ObservableList\u003cAppointmentView\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2024-03-21"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"    public Iterator\u003cAppointmentView\u003e iterator() {","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"        return internalList.iterator();","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"            return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"xuelinglow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"        if (!(other instanceof AppointmentViewList)) {","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"            return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"        AppointmentViewList otherAppointmentList \u003d (AppointmentViewList) other;","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"        return internalList.equals(otherAppointmentList.internalList);","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":103,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":104,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":105,"author":{"gitId":"xuelinglow"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-21"},{"lineNumber":106,"author":{"gitId":"xuelinglow"},"content":"        return internalList.hashCode();","lastModifiedDate":"2024-03-21"},{"lineNumber":107,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":108,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":109,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-03-21"},{"lineNumber":111,"author":{"gitId":"xuelinglow"},"content":"        return internalList.toString();","lastModifiedDate":"2024-03-21"},{"lineNumber":112,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":113,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":114,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":115,"author":{"gitId":"xuelinglow"},"content":"     * Returns true if {@code appointmentViews} contains only unique appointmentViews.","lastModifiedDate":"2024-03-21"},{"lineNumber":116,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":117,"author":{"gitId":"xuelinglow"},"content":"    private boolean appointmentViewsAreUnique(List\u003cAppointmentView\u003e appointments) {","lastModifiedDate":"2024-03-21"},{"lineNumber":118,"author":{"gitId":"xuelinglow"},"content":"        for (int i \u003d 0; i \u003c appointments.size() - 1; i++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":119,"author":{"gitId":"xuelinglow"},"content":"            for (int j \u003d i + 1; j \u003c appointments.size(); j++) {","lastModifiedDate":"2024-03-21"},{"lineNumber":120,"author":{"gitId":"xuelinglow"},"content":"                if (appointments.get(i).isSameAppointmentView(appointments.get(j))) {","lastModifiedDate":"2024-03-21"},{"lineNumber":121,"author":{"gitId":"xuelinglow"},"content":"                    return false;","lastModifiedDate":"2024-03-21"},{"lineNumber":122,"author":{"gitId":"xuelinglow"},"content":"                }","lastModifiedDate":"2024-03-21"},{"lineNumber":123,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-03-21"},{"lineNumber":124,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":125,"author":{"gitId":"xuelinglow"},"content":"        return true;","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":127,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":128,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":129,"author":{"gitId":"xuelinglow"},"content":"     * Sort internal list according to date and time","lastModifiedDate":"2024-03-21"},{"lineNumber":130,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":131,"author":{"gitId":"xuelinglow"},"content":"    private void sortList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":132,"author":{"gitId":"xuelinglow"},"content":"        internalList.sort(","lastModifiedDate":"2024-03-21"},{"lineNumber":133,"author":{"gitId":"xuelinglow"},"content":"            Comparator.comparing((AppointmentView appointmentView) -\u003e appointmentView.getAppointment().getDate())","lastModifiedDate":"2024-03-21"},{"lineNumber":134,"author":{"gitId":"xuelinglow"},"content":"                .thenComparing((AppointmentView appointmentView) -\u003e appointmentView.getAppointment().getTimePeriod()));","lastModifiedDate":"2024-03-21"},{"lineNumber":135,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":136,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":136}},{"path":"src/main/java/seedu/address/model/appointment/Mark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":" * Represents a Mark in the appointment","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":" * Guarantees: immutable; isMarked is valid as a declared boolean value","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"public class Mark {","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"            \"Mark should only be true or false, and it should not be blank\";","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"    public final boolean isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"     * Constructs a {@code Mark}.","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"     *","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"     * @param isMarked A valid Mark.","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"    public Mark(boolean isMarked) {","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    public String toString() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"        return Boolean.toString(isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"            return true;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"        if (!(other instanceof Mark)) {","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"            return false;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        Mark otherMark \u003d (Mark) other;","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        return (isMarked \u003d\u003d otherMark.isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"        return Boolean.hashCode(isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":47}},{"path":"src/main/java/seedu/address/model/appointment/Note.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":" * Represents a Note in the appointment","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":" * Guarantees: immutable; note can take any value","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"public class Note {","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"    public final String note;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a {@code Note}.","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"     * @param note Any note.","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    public Note(String note) {","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        return note;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof Note)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        Note otherNote \u003d (Note) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        return note.equals(otherNote.note);","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        return note.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"dayn-1":2,"ThatGirlJam":47}},{"path":"src/main/java/seedu/address/model/appointment/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" * Represents a time.","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTime(String)}","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"public class Time implements Comparable\u003cTime\u003e {","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String TIME_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be of the format \" + TIME_FORMAT","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"            + \"1. The HH part should only contain integers between 0 to 23 (24-hour clock) \\n\"","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"            + \"2. The mm part should only contain integers between 0 to 59\\n\";","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"    private static final DateTimeFormatter TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(TIME_FORMAT);","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String HOUR_REGEX \u003d \"([01]?[0-9]|2[0-3])\";","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String MINUTE_REGEX \u003d \"[0-5][0-9]\";","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    private static final String VALIDATION_REGEX \u003d HOUR_REGEX + \":\" + MINUTE_REGEX;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    public final LocalTime value;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"     * @param time A valid time string in the format \"HH:mm\".","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    public Time(String time) {","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(time);","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        value \u003d LocalTime.parse(time);","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns if a given string is a valid time.","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    public int compareTo(Time otherTime) {","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"        return value.compareTo(otherTime.value);","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        return value.format(TIME_FORMATTER);","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof Time)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        Time otherTime \u003d (Time) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        return value.equals(otherTime.value);","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"ThatGirlJam":75}},{"path":"src/main/java/seedu/address/model/appointment/TimePeriod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Objects;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":" * Represents a time period with start and end times","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTimePeriod(Time, Time)}","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"public class TimePeriod implements Comparable\u003cTimePeriod\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"End time of time period \"","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"            + \"should be after start time\";","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"    private final Time startTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"    private final Time endTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"     * Constructs a {@code TimePeriod} with the given start and end times.","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"     * @param startTime The start time of the period.","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"     * @param endTime   The end time of the period.","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    public TimePeriod(Time startTime, Time endTime) {","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"        checkArgument(isValidTimePeriod(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns the start time of the period.","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The start time.","lastModifiedDate":"2024-03-15"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    public Time getStartTime() {","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        return startTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns the end time of the period.","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"     * @return The end time.","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    public Time getEndTime() {","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"        return endTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"     * Checks if the given start time is before the end time.","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"     * @param startTime The start time.","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"     * @param endTime   The end time.","lastModifiedDate":"2024-03-15"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"     * @return True if the start time is before the end time, false otherwise.","lastModifiedDate":"2024-03-15"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"    public static boolean isValidTimePeriod(Time startTime, Time endTime) {","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        return startTime.compareTo(endTime) \u003c 0;","lastModifiedDate":"2024-03-15"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"    public String toString() {","lastModifiedDate":"2024-03-15"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        return startTime.toString() + \" to \" + endTime.toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"            return true;","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"        if (!(other instanceof TimePeriod)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"            return false;","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"        TimePeriod otherTimePeriod \u003d (TimePeriod) other;","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"        return startTime.equals(otherTimePeriod.startTime)","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"                \u0026\u0026 endTime.equals(otherTimePeriod.endTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"    @Override","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        return Objects.hash(startTime, endTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"    @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"    public int compareTo(TimePeriod other) {","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"        return startTime.compareTo(other.startTime);","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"xuelinglow":6,"ThatGirlJam":86}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/AppointmentNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":" * Signals that the operation is unable to find the specified appointment.","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"public class AppointmentNotFoundException extends RuntimeException {}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"dayn-1":6}},{"path":"src/main/java/seedu/address/model/appointment/exceptions/DuplicateAppointmentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment.exceptions;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":" * identity).","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"public class DuplicateAppointmentException extends RuntimeException {","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    public DuplicateAppointmentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"        super(\"Operation would result in duplicate appointments\");","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"dayn-1":11}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":" * Represents a Patient\u0027s Date of Birth in the CLInic.","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateOfBirth(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"public class DateOfBirth extends Date {","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"            \"Date of birth must be before today\u0027s date\";","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"     * Constructs an {@code DateOfBirth}.","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"     *","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"     * @param dateOfBirth A valid date of birth (before today).","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"        super(dateOfBirth);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        checkArgument(isValidDateOfBirth(dateOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     * Returns if a given string is a valid date of birth.","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"    public static boolean isValidDateOfBirth(String dateOfBirth) {","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        return Date.isBeforeToday(dateOfBirth);","lastModifiedDate":"2024-03-15"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"limrik":27,"ThatGirlJam":4}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"                .anyMatch(keyword -\u003e StringUtil.startsWithWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate otherNameContainsKeywordsPredicate \u003d (NameContainsKeywordsPredicate) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return keywords.equals(otherNameContainsKeywordsPredicate.keywords);","lastModifiedDate":"2023-07-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this).add(\"keywords\", keywords).toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dayn-1":1,"-":43}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-12"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-12"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2024-03-12"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-12"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":" * Represents a Patient\u0027s NRIC in the CLInic.","lastModifiedDate":"2024-03-12"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2024-03-12"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"public class Nric {","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"            \"NRIC should start and end with capital letters with 7 numbers in between them.\";","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    public static final String VALIDATION_REGEX \u003d \"[A-Z]\\\\d{7}[A-Z]\";","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    public final String value;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"     * Returns if a given string is a valid NRIC.","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    public Nric(String nric) {","lastModifiedDate":"2024-03-12"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-12"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"        value \u003d nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-12"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2024-03-12"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2024-03-12"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public String toString() {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        return value;","lastModifiedDate":"2024-03-12"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-12"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            return true;","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-12"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        if (!(other instanceof Nric)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"            return false;","lastModifiedDate":"2024-03-12"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        Nric otherNric \u003d (Nric) other;","lastModifiedDate":"2024-03-12"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        return value.equals(otherNric.value);","lastModifiedDate":"2024-03-12"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    @Override","lastModifiedDate":"2024-03-12"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"    public int hashCode() {","lastModifiedDate":"2024-03-12"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        return value.hashCode();","lastModifiedDate":"2024-03-12"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-12"}],"authorContributionMap":{"limrik":56,"cliftonchee":1}},{"path":"src/main/java/seedu/address/model/person/NricContainsMatchPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":" * Tests that a {@code Person}\u0027s {@code Nric} matches the given Nric prefix","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"public class NricContainsMatchPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    private final String prefixToMatch;","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"     * Constructs an {@code NricContainsMatchPredicate}.","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"     *","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"     * @param prefixToMatch A non-null, non-empty value of nric to match","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    public NricContainsMatchPredicate(String prefixToMatch) {","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(prefixToMatch);","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        this.prefixToMatch \u003d prefixToMatch;","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        return StringUtil.startsWithWordIgnoreCase(person.getNric().value, prefixToMatch);","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"            return true;","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        // instanceof handles nulls","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        if (!(other instanceof NricContainsMatchPredicate)) {","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate otherNricContainsMatchPredicate \u003d (NricContainsMatchPredicate) other;","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        return prefixToMatch.equals(otherNricContainsMatchPredicate.prefixToMatch);","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    @Override","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"    public String toString() {","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        return new ToStringBuilder(this).add(\"nricPrefixToMatch\", prefixToMatch).toString();","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dayn-1":50}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ToStringBuilder;","lastModifiedDate":"2019-02-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    private final Nric nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    private final DateOfBirth dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"    public Person(Name name, Nric nric, DateOfBirth dob, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2024-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"     * Placeholder person creation with just name","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    public Person(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        this.name \u003d new Name(\"Placeholder\");","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        this.dob \u003d new DateOfBirth(\"1988-08-08\");","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        this.phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        this.email \u003d new Email(\"test@test.com\");","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        this.address \u003d new Address(\"Placeholder\");","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"    public Nric getNric() {","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"        return nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"    public DateOfBirth getDob() {","lastModifiedDate":"2024-03-12"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        return dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-12"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return name.equals(otherPerson.name)","lastModifiedDate":"2023-07-13"},{"lineNumber":120,"author":{"gitId":"limrik"},"content":"                \u0026\u0026 nric.equals(otherPerson.nric)","lastModifiedDate":"2024-03-12"},{"lineNumber":121,"author":{"gitId":"limrik"},"content":"                \u0026\u0026 dob.equals(otherPerson.dob)","lastModifiedDate":"2024-03-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 phone.equals(otherPerson.phone)","lastModifiedDate":"2023-07-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 email.equals(otherPerson.email)","lastModifiedDate":"2023-07-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 address.equals(otherPerson.address)","lastModifiedDate":"2023-07-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                \u0026\u0026 tags.equals(otherPerson.tags);","lastModifiedDate":"2023-07-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"limrik"},"content":"        return Objects.hash(name, nric, dob, phone, email, address, tags);","lastModifiedDate":"2024-03-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new ToStringBuilder(this)","lastModifiedDate":"2019-02-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                .add(\"name\", name)","lastModifiedDate":"2019-02-23"},{"lineNumber":138,"author":{"gitId":"limrik"},"content":"                .add(\"nric\", nric)","lastModifiedDate":"2024-03-12"},{"lineNumber":139,"author":{"gitId":"limrik"},"content":"                .add(\"dob\", dob)","lastModifiedDate":"2024-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                .add(\"phone\", phone)","lastModifiedDate":"2019-02-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                .add(\"email\", email)","lastModifiedDate":"2019-02-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .add(\"address\", address)","lastModifiedDate":"2019-02-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .add(\"tags\", tags)","lastModifiedDate":"2019-02-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .toString();","lastModifiedDate":"2019-02-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dayn-1":16,"limrik":18,"-":113}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"     * Get person with name {@code name}.","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"     * {@code name} must exist within list.","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        Person equivalentPerson \u003d new Person(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        for (Person person : internalList) {","lastModifiedDate":"2024-03-13"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"            if (person.isSamePerson(equivalentPerson)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"                return person;","lastModifiedDate":"2024-03-13"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"     * Returns true if a person with the same name as {@code person} exists in the address book.","lastModifiedDate":"2024-03-13"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"    public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"        return contains(new Person(nric));","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":121,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"cliftonchee"},"content":"     * Deletes if a person with the same nric as {@code nric} exists in the address book.","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"cliftonchee"},"content":"    public void deletePersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"cliftonchee"},"content":"        requireNonNull(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"cliftonchee"},"content":"        Person key \u003d getPersonWithNric(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"cliftonchee"},"content":"        internalList.remove(key);","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-07-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-07-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-07-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        if (!(other instanceof UniquePersonList)) {","lastModifiedDate":"2023-07-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-07-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-07-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UniquePersonList otherUniquePersonList \u003d (UniquePersonList) other;","lastModifiedDate":"2023-07-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return internalList.equals(otherUniquePersonList.internalList);","lastModifiedDate":"2023-07-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2019-02-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2019-02-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        return internalList.toString();","lastModifiedDate":"2019-02-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dayn-1":21,"-":150,"cliftonchee":9}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2024-03-12"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2024-03-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-12"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Nric(\"T0123456A\"), new DateOfBirth(\"2001-01-01\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"                new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"            new Person(new Name(\"Bernice Yu\"), new Nric(\"T0123456B\"), new DateOfBirth(\"2001-01-02\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"                new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Nric(\"T0123456C\"), new DateOfBirth(\"2001-01-03\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"                new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            new Person(new Name(\"David Li\"), new Nric(\"T0123456D\"), new DateOfBirth(\"2001-01-04\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"                new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Nric(\"T0123456E\"), new DateOfBirth(\"2001-01-05\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"                new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Nric(\"T0123456F\"), new DateOfBirth(\"2001-01-06\"),","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"                new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2024-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2024-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"xuelinglow":1,"limrik":13,"-":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedAppointment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-15"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2024-03-15"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2024-03-15"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-15"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-15"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-15"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-15"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-15"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-15"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-15"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-15"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":" * Jackson-friendly version of {@link Appointment}.","lastModifiedDate":"2024-03-15"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-15"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"public class JsonAdaptedAppointment {","lastModifiedDate":"2024-03-15"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Appointment\u0027s %s field is missing!\";","lastModifiedDate":"2024-03-15"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"    private final String nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"    private final String date;","lastModifiedDate":"2024-03-15"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    private final String startTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"    private final String endTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    private final String appointmentType;","lastModifiedDate":"2024-03-15"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    private final String note;","lastModifiedDate":"2024-03-15"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"    private final boolean isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"     * Constructs a {@code JsonAdaptedAppointment} with the given appointment details.","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    @JsonCreator","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"    public JsonAdaptedAppointment(@JsonProperty(\"nric\") String nric,","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"                             @JsonProperty(\"date\") String date,","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"                             @JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime,","lastModifiedDate":"2024-03-15"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"                             @JsonProperty(\"appointmentType\") String appointmentType,","lastModifiedDate":"2024-03-15"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"                                  @JsonProperty(\"note\") String note, @JsonProperty(\"mark\") boolean isMarked) {","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        this.date \u003d date;","lastModifiedDate":"2024-03-15"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2024-03-15"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"        this.appointmentType \u003d appointmentType;","lastModifiedDate":"2024-03-15"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"        this.note \u003d note;","lastModifiedDate":"2024-03-15"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"     * Converts a given {@code Appointment} into this class for Jackson use.","lastModifiedDate":"2024-03-15"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"    public JsonAdaptedAppointment(Appointment source) {","lastModifiedDate":"2024-03-15"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2024-03-15"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2024-03-15"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentType \u003d source.getAppointmentType().typeName;","lastModifiedDate":"2024-03-15"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        note \u003d source.getNote().note;","lastModifiedDate":"2024-03-15"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"        isMarked \u003d source.getMark().isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-15"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-15"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"     * Converts this Jackson-friendly adapted appointment object into the model\u0027s {@code Appointment} object.","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"     *","lastModifiedDate":"2024-03-15"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted appointment.","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-15"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"    public Appointment toModelType() throws IllegalValueException {","lastModifiedDate":"2024-03-15"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-15"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-15"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2024-03-15"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Time.isValidTime(startTime)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"        final Time modelStartTime \u003d new Time(startTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"        if (endTime \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"        if (!Time.isValidTime(endTime)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"        final Time modelEndTime \u003d new Time(endTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        if (!TimePeriod.isValidTimePeriod(modelStartTime, modelEndTime)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(TimePeriod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"        final TimePeriod modelTimePeriod \u003d new TimePeriod(modelStartTime, modelEndTime);","lastModifiedDate":"2024-03-15"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"        if (appointmentType \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-15"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, AppointmentType.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"        if (!AppointmentType.isValidAppointmentType(appointmentType)) {","lastModifiedDate":"2024-03-15"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(AppointmentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-15"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"        final AppointmentType modelAppointmentType \u003d new AppointmentType(appointmentType);","lastModifiedDate":"2024-03-15"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"        if (note \u003d\u003d null) {","lastModifiedDate":"2024-03-15"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2024-03-15"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, Note.class.getSimpleName()));","lastModifiedDate":"2024-03-15"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-15"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"        final Note modelNote \u003d new Note(note);","lastModifiedDate":"2024-03-15"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"xuelinglow"},"content":"        final Mark modelMarked \u003d new Mark(isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"xuelinglow"},"content":"        Appointment newAppt \u003d new Appointment(modelNric, modelDate, modelTimePeriod,","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"xuelinglow"},"content":"            modelAppointmentType, modelNote, modelMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"xuelinglow"},"content":"        return newAppt;","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-15"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-15"}],"authorContributionMap":{"xuelinglow":16,"limrik":2,"dayn-1":5,"ThatGirlJam":102}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    private final String nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"    private final String dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"nric\") String nric,","lastModifiedDate":"2024-03-12"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"            @JsonProperty(\"dob\") String dob, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2024-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags) {","lastModifiedDate":"2023-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2024-03-12"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        this.dob \u003d dob;","lastModifiedDate":"2024-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2023-01-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2023-01-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"        nric \u003d source.getNric().value;","lastModifiedDate":"2024-03-12"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        dob \u003d source.getDob().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tags.addAll(source.getTags().stream()","lastModifiedDate":"2023-01-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2023-01-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"limrik"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":92,"author":{"gitId":"limrik"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2024-03-12"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-12"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2024-03-12"},{"lineNumber":98,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":99,"author":{"gitId":"limrik"},"content":"        if (dob \u003d\u003d null) {","lastModifiedDate":"2024-03-12"},{"lineNumber":100,"author":{"gitId":"limrik"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-12"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"                    DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2024-03-12"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":103,"author":{"gitId":"limrik"},"content":"        if (!Date.isValidDate(dob)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":104,"author":{"gitId":"limrik"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":105,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-12"},{"lineNumber":106,"author":{"gitId":"limrik"},"content":"        final DateOfBirth modelDob \u003d new DateOfBirth(dob);","lastModifiedDate":"2024-03-12"},{"lineNumber":107,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"limrik"},"content":"        return new Person(modelName, modelNric, modelDob, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2024-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limrik":28,"dayn-1":1,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    public static final String MESSAGE_DUPLICATE_APPOINTMENT \u003d \"Appointment list contains duplicate appointment\";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    private final List\u003cJsonAdaptedAppointment\u003e appointments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"                                       @JsonProperty(\"appointments\") List\u003cJsonAdaptedAppointment\u003e appointments) {","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        if (appointments !\u003d null) {","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"            this.appointments.addAll(appointments);","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        appointments.addAll(source.getAppointmentList().stream()","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"                .map(JsonAdaptedAppointment::new).collect(Collectors.toList()));","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        for (JsonAdaptedAppointment jsonAdaptedAppointment : appointments) {","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"            Appointment appointment \u003d jsonAdaptedAppointment.toModelType();","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"            if (addressBook.hasAppointment(appointment)) {","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"            }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"            addressBook.addAppointment(appointment);","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"dayn-1":16,"limrik":2,"-":59}},{"path":"src/main/java/seedu/address/ui/AppointmentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import java.time.LocalTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import javafx.animation.Animation;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import javafx.beans.binding.BooleanBinding;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"import javafx.util.Duration;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":" * A UI component that displays information of a {@code Appointment}.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"    private static final String FXML \u003d \"AppointmentListCard.fxml\";","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"     *","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"    public final Appointment appt;","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"    public final AppointmentView apptView;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    private HBox cardPane;","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"    private Label name;","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"    private Label nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"    private Label id;","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"    private Label date;","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"    private Label timePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"    private Label appointmentType;","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    private Label note;","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"     * Creates a {@code AppointmentCode} with the given {@code Appointment} and index to display.","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentCard(AppointmentView apptView, int displayedIndex) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        super(FXML);","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"        this.apptView \u003d apptView;","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        this.appt \u003d apptView.getAppointment();","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"        name.setText(apptView.getName().fullName);","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"        nric.setText(appt.getNric().toString() + \" - \");","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"        date.setText(appt.getDate().value.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        timePeriod.setText(appt.getStartTime() + \" - \" + appt.getEndTime());","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"        appointmentType.setText(appt.getAppointmentType().toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"        note.setText(\"Notes: \" + appt.getNote().toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"        Timeline timeline \u003d getTimeline();","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"        timeline.play();","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"        if (appt.getMark().isMarked) {","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"            cardPane.setStyle(\"-fx-background-color:\" + Colors.MARKED_APPOINTMENT_GREEN_COLOR);","lastModifiedDate":"2024-03-28"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"    private Timeline getTimeline() {","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"        EventHandler\u003cActionEvent\u003e appointmentMissedEventHandler \u003d event -\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"            if (!appt.getMark().isMarked) {","lastModifiedDate":"2024-03-27"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"                bindCardPaneStyle();","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-03-27"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"        };","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"        KeyFrame keyframe \u003d new KeyFrame(Duration.seconds(1), appointmentMissedEventHandler);","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"        Timeline timeline \u003d new Timeline(keyframe);","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"        timeline.setCycleCount(Animation.INDEFINITE); // Run indefinitely","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"limrik"},"content":"        return timeline;","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"    private void bindCardPaneStyle() {","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"limrik"},"content":"        cardPane.styleProperty().bind(","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"limrik"},"content":"                Bindings.when(isPastAppointment(appt))","lastModifiedDate":"2024-03-27"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"                        .then(\"-fx-background-color:\" + Colors.PAST_APPOINTMENT_RED_COLOR)","lastModifiedDate":"2024-03-28"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"                        .otherwise(\"\")","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"    private BooleanBinding isPastAppointment(Appointment appt) {","lastModifiedDate":"2024-03-27"},{"lineNumber":98,"author":{"gitId":"limrik"},"content":"        return Bindings.createBooleanBinding(() -\u003e (","lastModifiedDate":"2024-03-27"},{"lineNumber":99,"author":{"gitId":"limrik"},"content":"                appt.getStartTime().value.isBefore(LocalTime.now())","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"limrik"},"content":"                        \u0026\u0026 !appt.getDate().value.isAfter(LocalDate.now()))","lastModifiedDate":"2024-03-27"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"                || appt.getDate().value.isBefore(LocalDate.now())","lastModifiedDate":"2024-03-27"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"xuelinglow":58,"limrik":44,"dayn-1":2}},{"path":"src/main/java/seedu/address/ui/Colors.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":" * The Colors class provides constants for commonly used color values in the user interface.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"public class Colors {","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"    public static final String PAST_APPOINTMENT_RED_COLOR \u003d \"#FFAFB1\";","lastModifiedDate":"2024-03-28"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    public static final String MARKED_APPOINTMENT_GREEN_COLOR \u003d \"#C9FFD4\";","lastModifiedDate":"2024-03-28"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"limrik":7,"dayn-1":2}},{"path":"src/main/java/seedu/address/ui/DayViewListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"public class DayViewListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    private static final String FXML \u003d \"DayViewListPanel.fxml\";","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DayViewListPanel.class);","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    private ListView\u003cAppointmentView\u003e dayViewListView;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    public DayViewListPanel(ObservableList\u003cAppointmentView\u003e dayViewList) {","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"        super(FXML);","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        dayViewListView.setItems(dayViewList);","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        dayViewListView.setCellFactory(listView -\u003e new DayViewListViewCell());","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    class DayViewListViewCell extends ListCell\u003cAppointmentView\u003e {","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        protected void updateItem(AppointmentView apptView, boolean empty) {","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"            super.updateItem(apptView, empty);","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"            if (empty || apptView \u003d\u003d null) {","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"                setText(null);","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"                setGraphic(new AppointmentCard(apptView, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"limrik":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import javafx.scene.control.ToggleButton;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import javafx.scene.control.ToggleGroup;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"    private DayViewListPanel dayViewListPanel;","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"    private ToggleGroup toggleGroup;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    private ViewMode currentView;","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"    private ToggleButton overallViewButton;","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"    private ToggleButton dayViewButton;","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"        setNavbar();","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"        this.currentView \u003d ViewMode.OVERALL;","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"xuelinglow"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), logic.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"limrik"},"content":"        dayViewListPanel \u003d new DayViewListPanel(logic.getFilteredAppointmentDayViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":129,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"limrik"},"content":"    private void setNavbar() {","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"limrik"},"content":"        toggleGroup \u003d new ToggleGroup();","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"limrik"},"content":"        overallViewButton.setToggleGroup(toggleGroup);","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"limrik"},"content":"        dayViewButton.setToggleGroup(toggleGroup);","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"limrik"},"content":"        overallViewButton.setSelected(true);","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":170,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"limrik"},"content":"     * Displays the day-view and hides the overall-view","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"limrik"},"content":"    public void handleShowDayView() {","lastModifiedDate":"2024-03-24"},{"lineNumber":176,"author":{"gitId":"limrik"},"content":"        personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"limrik"},"content":"        personListPanelPlaceholder.getChildren().add(dayViewListPanel.getRoot());","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"limrik"},"content":"        currentView \u003d ViewMode.DAY;","lastModifiedDate":"2024-03-27"},{"lineNumber":179,"author":{"gitId":"limrik"},"content":"        dayViewButton.setSelected(true);","lastModifiedDate":"2024-03-27"},{"lineNumber":180,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":181,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":182,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"limrik"},"content":"     * Displays the overall-view and hides the day-view","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"limrik"},"content":"    public void handleShowOverallView() {","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"limrik"},"content":"        personListPanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"limrik"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"limrik"},"content":"        currentView \u003d ViewMode.OVERALL;","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"limrik"},"content":"        overallViewButton.setSelected(true);","lastModifiedDate":"2024-03-27"},{"lineNumber":191,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":192,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":193,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"limrik"},"content":"     * Switches between displaying the overall view and day-view","lastModifiedDate":"2024-03-27"},{"lineNumber":195,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":196,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-27"},{"lineNumber":197,"author":{"gitId":"limrik"},"content":"    public void setView(ViewMode viewMode) {","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"limrik"},"content":"        if (viewMode \u003d\u003d null) {","lastModifiedDate":"2024-03-27"},{"lineNumber":199,"author":{"gitId":"limrik"},"content":"            return;","lastModifiedDate":"2024-03-27"},{"lineNumber":200,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":201,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":202,"author":{"gitId":"limrik"},"content":"        switch (viewMode) {","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"limrik"},"content":"        case DAY:","lastModifiedDate":"2024-03-27"},{"lineNumber":204,"author":{"gitId":"limrik"},"content":"            handleShowDayView();","lastModifiedDate":"2024-03-27"},{"lineNumber":205,"author":{"gitId":"limrik"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"limrik"},"content":"        case OVERALL:","lastModifiedDate":"2024-03-27"},{"lineNumber":207,"author":{"gitId":"limrik"},"content":"            handleShowOverallView();","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"limrik"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"limrik"},"content":"        case SWITCH:","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"limrik"},"content":"            switchView();","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"limrik"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":212,"author":{"gitId":"limrik"},"content":"        default:","lastModifiedDate":"2024-03-27"},{"lineNumber":213,"author":{"gitId":"limrik"},"content":"            break;","lastModifiedDate":"2024-03-27"},{"lineNumber":214,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":215,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":216,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":217,"author":{"gitId":"limrik"},"content":"    private void switchView() {","lastModifiedDate":"2024-03-27"},{"lineNumber":218,"author":{"gitId":"limrik"},"content":"        if (currentView \u003d\u003d ViewMode.DAY) {","lastModifiedDate":"2024-03-27"},{"lineNumber":219,"author":{"gitId":"limrik"},"content":"            handleShowOverallView();","lastModifiedDate":"2024-03-27"},{"lineNumber":220,"author":{"gitId":"limrik"},"content":"        } else {","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"limrik"},"content":"            handleShowDayView();","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":223,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":224,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"limrik"},"content":"            setView(commandResult.getViewMode());","lastModifiedDate":"2024-03-27"},{"lineNumber":261,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            logger.info(\"An error occurred while executing command: \" + commandText);","lastModifiedDate":"2023-06-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xuelinglow":1,"limrik":79,"-":189}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"    private Label nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"    private Label dob;","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"    @FXML","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"        nric.setText(person.getNric().value);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"        dob.setText(person.getDob().toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"limrik":5,"dayn-1":1,"-":59}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    @FXML","lastModifiedDate":"2024-03-17"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"    private ListView\u003cAppointmentView\u003e appointmentListView;","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, ObservableList\u003cAppointmentView\u003e appointmentList) {","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setItems(appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setCellFactory(listView -\u003e new AppointmentListViewCell());","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Appointment} using a {@code AppointmentCard}.","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"    class AppointmentListViewCell extends ListCell\u003cAppointmentView\u003e {","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        protected void updateItem(AppointmentView apptView, boolean empty) {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"            super.updateItem(apptView, empty);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"            if (empty || apptView \u003d\u003d null) {","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"                setGraphic(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"                setText(null);","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"            } else {","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"                setGraphic(new AppointmentCard(apptView, getIndex() + 1).getRoot());","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"xuelinglow":22,"-":48}},{"path":"src/main/java/seedu/address/ui/ViewMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.ui;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":" * Enum representing different viewing modes that application should be in after command execution.","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"public enum ViewMode {","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"    OVERALL,","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"    DAY,","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    SWITCH,","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"    ANY","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"limrik":11}},{"path":"src/main/resources/view/AppointmentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"85\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"         \u003cLabel fx:id\u003d\"nric\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"         \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"         \u003cLabel fx:id\u003d\"timePeriod\" text\u003d\"\\$timePeriod\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"      \u003cLabel fx:id\u003d\"appointmentType\"  styleClass\u003d\"appointmentType\" text\u003d\"\\$appointmentType\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"      \u003cLabel fx:id\u003d\"note\" text\u003d\"\\$note\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"xuelinglow":35,"dayn-1":1}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#a0d2eb, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"    background-color: #E9F1FA; /* Used in the default.html file */","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    -fx-base: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    -fx-control-inner-background: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #FFF9F2;","lastModifiedDate":"2024-03-27"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    -fx-border-style: solid;","lastModifiedDate":"2024-03-27"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"    -fx-border-width: 0 0 1px 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"    -fx-border-color: #3A3E49;","lastModifiedDate":"2024-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #FFF9F2;","lastModifiedDate":"2024-03-27"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"    -fx-border-style: solid;","lastModifiedDate":"2024-03-27"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"    -fx-border-width: 0 0 1px 0;","lastModifiedDate":"2024-03-27"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"    -fx-border-color: #3A3E49;","lastModifiedDate":"2024-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"     -fx-background-color: derive(#EFFAFD, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"     -fx-background-color: derive(#C4DBF6, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"     -fx-border-color: derive(#C4DBF6, 10%);","lastModifiedDate":"2024-03-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":159,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":166,"author":{"gitId":"dayn-1"},"content":"    -fx-border-color: derive(#EFFAFD, 25%);","lastModifiedDate":"2024-03-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"    -fx-border-color: derive(#EFFAFD, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"    -fx-skin: \"com.sun.javafx.scene.control.skin.ContextMenuSkin\";","lastModifiedDate":"2024-03-27"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"    -fx-background-insets: 0, 1, 2;","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"    -fx-background-radius: 0 6 6 6, 0 5 5 5, 0 4 4 4;","lastModifiedDate":"2024-03-27"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"    -fx-padding: 0.333333em 0.083333em 0.666667em 0.083333em;","lastModifiedDate":"2024-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#082853, 30%);","lastModifiedDate":"2024-03-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"dayn-1"},"content":".menu-bar .menu-item {","lastModifiedDate":"2024-03-27"},{"lineNumber":208,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-27"},{"lineNumber":209,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-27"},{"lineNumber":210,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"dayn-1"},"content":"  -fx-background-color: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":238,"author":{"gitId":"dayn-1"},"content":"  -fx-text-fill: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #EFFAFD;","lastModifiedDate":"2024-03-27"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 25%);","lastModifiedDate":"2024-03-27"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"dayn-1"},"content":"    -fx-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":286,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#EFFAFD, 20%);","lastModifiedDate":"2024-03-27"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: derive(#3B8BEB, 50%);","lastModifiedDate":"2024-03-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: #BA3131;","lastModifiedDate":"2024-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: transparent #E7E3D4 transparent #E7E3D4;","lastModifiedDate":"2024-03-27"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"dayn-1"},"content":"    -fx-border-color: #E9F1FA #E9F1FA #EFFAFD #E9F1FA;","lastModifiedDate":"2024-03-27"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: transparent, #E9F1FA, transparent, #E9F1FA;","lastModifiedDate":"2024-03-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #3B8BEB;","lastModifiedDate":"2024-03-27"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":359,"author":{"gitId":"xuelinglow"},"content":".appointmentType {","lastModifiedDate":"2024-03-18"},{"lineNumber":360,"author":{"gitId":"xuelinglow"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-18"},{"lineNumber":361,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #a0d2eb;","lastModifiedDate":"2024-03-27"},{"lineNumber":362,"author":{"gitId":"xuelinglow"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2024-03-18"},{"lineNumber":363,"author":{"gitId":"xuelinglow"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":364,"author":{"gitId":"xuelinglow"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2024-03-18"},{"lineNumber":365,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":366,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":367,"author":{"gitId":"limrik"},"content":".navbar {","lastModifiedDate":"2024-03-24"},{"lineNumber":368,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #E9F1FA; /* Set background color */","lastModifiedDate":"2024-03-27"},{"lineNumber":369,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":370,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":371,"author":{"gitId":"limrik"},"content":".navbar .toggle-button {","lastModifiedDate":"2024-03-24"},{"lineNumber":372,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #8590AA;","lastModifiedDate":"2024-03-27"},{"lineNumber":373,"author":{"gitId":"limrik"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2024-03-24"},{"lineNumber":374,"author":{"gitId":"limrik"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2024-03-24"},{"lineNumber":375,"author":{"gitId":"dayn-1"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2024-03-27"},{"lineNumber":376,"author":{"gitId":"limrik"},"content":"    -fx-padding: 8px 8px;","lastModifiedDate":"2024-03-24"},{"lineNumber":377,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":379,"author":{"gitId":"limrik"},"content":".navbar .toggle-button:hover {","lastModifiedDate":"2024-03-24"},{"lineNumber":380,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #3B8BEB; /* Set background color for hover state */","lastModifiedDate":"2024-03-27"},{"lineNumber":381,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":382,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":383,"author":{"gitId":"limrik"},"content":".navbar .toggle-button:selected {","lastModifiedDate":"2024-03-24"},{"lineNumber":384,"author":{"gitId":"dayn-1"},"content":"    -fx-background-color: #3B8BEB; /* Set background color for focused state */","lastModifiedDate":"2024-03-27"},{"lineNumber":385,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"xuelinglow":8,"dayn-1":68,"limrik":14,"-":295}},{"path":"src/main/resources/view/DayViewListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"  spacing\u003d\"30.0\"\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"    \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"            \u003cLabel text\u003d\"Today\u0027s Appointments\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"            \u003cListView fx:id\u003d\"dayViewListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"        \u003c/children\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"limrik":15}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"    -fx-background: #FFFFFF;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dayn-1":2,"-":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.control.ToggleButton?\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.scene.control.ToolBar?\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CLInic\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        \u003cToolBar styleClass\u003d\"navbar\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"          \u003cToggleButton fx:id\u003d\"overallViewButton\" onAction\u003d\"#handleShowOverallView\" text\u003d\"Overall-View\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"          \u003cToggleButton fx:id\u003d\"dayViewButton\" onAction\u003d\"#handleShowDayView\" text\u003d\"Day-View\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"        \u003c/ToolBar\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" disable\u003d\"true\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"limrik":15,"dayn-1":1,"-":49}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-07-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"      \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"      \u003cLabel fx:id\u003d\"dob\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$dob\" /\u003e","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"limrik":2,"-":36}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/17\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"  spacing\u003d\"30.0\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"  \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"        \u003cLabel text\u003d\"Patients\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"        \u003cListView fx:id\u003d\"personListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"  \u003cVBox HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"        \u003cLabel text\u003d\"Upcoming Appointments\" /\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"        \u003cListView fx:id\u003d\"appointmentListView\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    \u003c/children\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"  \u003c/VBox\u003e","lastModifiedDate":"2024-03-17"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2024-03-17"}],"authorContributionMap":{"xuelinglow":15,"-":6}},{"path":"src/test/java/seedu/address/commons/core/date/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.commons.core.date;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class DateTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public void isValidDate() {","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        // null time","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        // blank time","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        // missing parts","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"-02-20\")); // missing YYYY part","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-02\")); // only 2 parts","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"02-31\")); // only 2 parts","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-02-\")); // missing dd part","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        // invalid parts","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"0134-12-02\")); // invalid YYYY part","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"20244-12-02\")); // invalid YYYY part","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-13-02\")); // invalid MM part","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-00-02\")); // invalid MM part","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-12-00\")); // invalid dd part","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-02-30\")); // invalid dd part","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024/20/02\")); // invalid delimiters","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024 20 02\")); // invalid delimiters","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024:20:02\")); // invalid delimiters","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024-12-12-03\")); // additional fields given","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"      2024/20/02\")); // leading space","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Date.isValidDate(\"2024/20/02   \")); // trailing space","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        // valid date","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Date.isValidDate(\"2024-03-24\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Date.isValidDate(\"2024-02-02\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Date.isValidDate(\"2024-12-31\"));","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"        Date date \u003d new Date(\"2024-03-24\");","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        assertTrue(date.equals(new Date(\"2024-03-24\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        assertTrue(date.equals(date));","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"        assertFalse(date.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        assertFalse(date.equals(5.0f));","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        assertFalse(date.equals(new Date(\"2024-03-23\")));","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"dayn-1":78}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    public void startsWithWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.startsWithWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"            -\u003e StringUtil.startsWithWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"    public void startsWithWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"            -\u003e StringUtil.startsWithWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"    public void startsWithWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.startsWithWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"     *   - query word matches start of some sentence word","lastModifiedDate":"2024-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"     *   - query word exists within the sentence word","lastModifiedDate":"2024-03-23"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"     *   - query word does not match any sentence word","lastModifiedDate":"2024-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"    public void startsWithWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2024-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"        assertFalse(StringUtil.startsWithWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2024-03-23"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"        assertFalse(StringUtil.startsWithWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        assertFalse(StringUtil.startsWithWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2024-03-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2024-03-23"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2024-03-23"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2024-03-23"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2024-03-23"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2024-03-23"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2024-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"        assertTrue(StringUtil.startsWithWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"dayn-1":21,"-":123}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSON_NRIC_NOT_FOUND;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MISSING_NRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.AccessDeniedException;","lastModifiedDate":"2023-06-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy IO exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_AD_EXCEPTION \u003d new AccessDeniedException(\"dummy access denied exception\");","lastModifiedDate":"2023-06-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"        String deleteCommand \u003d \"delete \" + new Nric(MISSING_NRIC);","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        assertCommandException(deleteCommand, MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_IO_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_ERROR_FORMAT, DUMMY_IO_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-06-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-06-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsAdException_throwsCommandException() {","lastModifiedDate":"2023-06-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandFailureForExceptionFromStorage(DUMMY_AD_EXCEPTION, String.format(","lastModifiedDate":"2023-06-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                LogicManager.FILE_OPS_PERMISSION_ERROR_FORMAT, DUMMY_AD_EXCEPTION.getMessage()));","lastModifiedDate":"2023-06-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":95,"author":{"gitId":"xuelinglow"},"content":"    public void getFilteredAppointmentViewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentViewList().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"limrik"},"content":"    public void getFilteredAppointmentDayViewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredAppointmentDayViewList().remove(0));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Tests the Logic component\u0027s handling of an {@code IOException} thrown by the Storage component.","lastModifiedDate":"2023-06-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-06-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * @param e the exception to be thrown by the Storage component","lastModifiedDate":"2023-06-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @param expectedMessage the message expected inside exception thrown by the Logic component","lastModifiedDate":"2023-06-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void assertCommandFailureForExceptionFromStorage(IOException e, String expectedMessage) {","lastModifiedDate":"2023-06-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Path prefPath \u003d temporaryFolder.resolve(\"ExceptionUserPrefs.json\");","lastModifiedDate":"2023-06-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // Inject LogicManager with an AddressBookStorage that throws the IOException e when saving","lastModifiedDate":"2023-06-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(prefPath) {","lastModifiedDate":"2023-06-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath)","lastModifiedDate":"2023-06-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    throws IOException {","lastModifiedDate":"2023-06-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                throw e;","lastModifiedDate":"2023-06-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2023-06-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-06-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ExceptionUserPrefs.json\"));","lastModifiedDate":"2023-06-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2023-06-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2023-06-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-06-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // Triggers the saveAddressBook method by executing an add command","lastModifiedDate":"2023-06-13"},{"lineNumber":182,"author":{"gitId":"limrik"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + NRIC_DESC_AMY + DOB_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-06-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-06-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2023-06-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2023-06-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"xuelinglow":5,"dayn-1":2,"limrik":9,"-":170,"cliftonchee":3}},{"path":"src/test/java/seedu/address/logic/commands/AddAppCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBookWithAppointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":" * Contains integration tests (interaction with the Model) for {@code AddAppCommand}.","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"public class AddAppCommandIntegrationTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    private Model model;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    @BeforeEach","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    public void setUp() {","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        model \u003d new ModelManager(getTypicalAddressBookWithAppointments(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"    public void execute_newAppointment_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"                .withNric(CARL.getNric().value).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        expectedModel.addAppointment(validAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        assertCommandSuccess(new AddAppCommand(validAppointment), model,","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"                String.format(AddAppCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, Messages.format(validAppointment)),","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"                expectedModel);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    public void execute_appointmentNricNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        Appointment appointmentWithNoMatchNric \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"                .withNric(\"G9876543K\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(new AddAppCommand(appointmentWithNoMatchNric), model,","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"                Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        Appointment appointmentInList \u003d model.getAddressBook().getAppointmentList().get(0);","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(new AddAppCommand(appointmentInList), model,","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"                AddAppCommand.MESSAGE_DUPLICATE_APPOINTMENT);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":58}},{"path":"src/test/java/seedu/address/logic/commands/AddAppCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import java.nio.file.Path;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"public class AddAppCommandTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddAppCommand(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"    public void execute_appointmentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder(ALICE_APPT).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        CommandResult commandResult \u003d new AddAppCommand(validAppointment).execute(modelStub);","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        assertEquals(String.format(AddAppCommand.MESSAGE_ADD_APPOINTMENT_SUCCESS, Messages.format(validAppointment)),","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        assertTrue(modelStub.hasAppointment(validAppointment));","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    public void execute_duplicateAppointment_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAppCommand \u003d new AddAppCommand(validAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        ModelStub modelStub \u003d new ModelStubWithAppointment(validAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        assertThrows(CommandException.class, AddAppCommand.MESSAGE_DUPLICATE_APPOINTMENT, () -\u003e addAppCommand","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"                .execute(modelStub));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    public void execute_patientNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        Appointment validAppointment \u003d new AppointmentBuilder(BOB_APPT).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAppCommand \u003d new AddAppCommand(validAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_PERSON_NRIC_NOT_FOUND, () -\u003e addAppCommand","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"                .execute(modelStub));","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        Appointment aliceAppointment \u003d new AppointmentBuilder().withNric(\"T0000001A\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        Appointment bobAppointment \u003d new AppointmentBuilder().withNric(\"T0000002A\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        Appointment aliceSecondAppointment \u003d new AppointmentBuilder().withDate(\"2023-01-01\").build();","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAliceAppCommand \u003d new AddAppCommand(aliceAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addBobAppCommand \u003d new AddAppCommand(bobAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAliceSecondAppCommand \u003d new AddAppCommand(aliceSecondAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"        assertTrue(addAliceAppCommand.equals(addAliceAppCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAliceAppCommandCopy \u003d new AddAppCommand(aliceAppointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"        assertTrue(addAliceAppCommand.equals(addAliceAppCommandCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        assertFalse(addAliceAppCommand.equals(1));","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        assertFalse(addAliceAppCommand.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        // appointment with different nric -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"        assertFalse(addAliceAppCommand.equals(addBobAppCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        // appointment with different date -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"        assertFalse(addAliceAppCommand.equals(addAliceSecondAppCommand));","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand addAppCommand \u003d new AddAppCommand(ALICE_APPT);","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        String expected \u003d AddAppCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"                + \"{appointment\u003d\" + ALICE_APPT + \"}\";","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expected, addAppCommand.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"        public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"        public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"xuelinglow"},"content":"            return null;","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"cliftonchee"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"cliftonchee"},"content":"        public void deletePersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"cliftonchee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"dayn-1"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":205,"author":{"gitId":"xuelinglow"},"content":"        public void cancelAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-27"},{"lineNumber":206,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":207,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":208,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":209,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":210,"author":{"gitId":"dayn-1"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":211,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":212,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":213,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":214,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":215,"author":{"gitId":"dayn-1"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":216,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":217,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":218,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":219,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":220,"author":{"gitId":"xuelinglow"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointmentView\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":221,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-27"},{"lineNumber":222,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":223,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":224,"author":{"gitId":"limrik"},"content":"        public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":225,"author":{"gitId":"limrik"},"content":"            return null;","lastModifiedDate":"2024-03-26"},{"lineNumber":226,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":227,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":228,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":229,"author":{"gitId":"limrik"},"content":"        public void updateFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":230,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":231,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":232,"author":{"gitId":"ThatGirlJam"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"ThatGirlJam"},"content":"        public Appointment getMatchingAppointment(Nric nric, Date date, TimePeriod timePeriod) {","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"ThatGirlJam"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"ThatGirlJam"},"content":"        public void deleteAppointmentsWithNric(Nric targetNric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":242,"author":{"gitId":"xuelinglow"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":243,"author":{"gitId":"xuelinglow"},"content":"        public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":244,"author":{"gitId":"xuelinglow"},"content":"            return null;","lastModifiedDate":"2024-03-21"},{"lineNumber":245,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":246,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":247,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":248,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":249,"author":{"gitId":"dayn-1"},"content":"     * A Model stub that contains a single appointment.","lastModifiedDate":"2024-03-16"},{"lineNumber":250,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":251,"author":{"gitId":"dayn-1"},"content":"    private class ModelStubWithAppointment extends ModelStub {","lastModifiedDate":"2024-03-16"},{"lineNumber":252,"author":{"gitId":"dayn-1"},"content":"        private final Appointment appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":253,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":254,"author":{"gitId":"dayn-1"},"content":"        ModelStubWithAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":255,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":256,"author":{"gitId":"dayn-1"},"content":"            this.appointment \u003d appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":257,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":258,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":259,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":260,"author":{"gitId":"dayn-1"},"content":"        public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":261,"author":{"gitId":"dayn-1"},"content":"            return true;","lastModifiedDate":"2024-03-16"},{"lineNumber":262,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":263,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":264,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":265,"author":{"gitId":"dayn-1"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":266,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":267,"author":{"gitId":"dayn-1"},"content":"            return this.appointment.equals(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":268,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":269,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":270,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":271,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":272,"author":{"gitId":"dayn-1"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2024-03-16"},{"lineNumber":273,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":274,"author":{"gitId":"dayn-1"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2024-03-16"},{"lineNumber":275,"author":{"gitId":"dayn-1"},"content":"        final ArrayList\u003cAppointment\u003e appointmentsAdded;","lastModifiedDate":"2024-03-16"},{"lineNumber":276,"author":{"gitId":"dayn-1"},"content":"        private final Person person;","lastModifiedDate":"2024-03-16"},{"lineNumber":277,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":278,"author":{"gitId":"dayn-1"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2024-03-16"},{"lineNumber":279,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(person);","lastModifiedDate":"2024-03-16"},{"lineNumber":280,"author":{"gitId":"dayn-1"},"content":"            this.person \u003d person;","lastModifiedDate":"2024-03-16"},{"lineNumber":281,"author":{"gitId":"dayn-1"},"content":"            this.appointmentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2024-03-16"},{"lineNumber":282,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":283,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":284,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":285,"author":{"gitId":"dayn-1"},"content":"        public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":286,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":287,"author":{"gitId":"dayn-1"},"content":"            return person.getNric().equals(nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":288,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":289,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":290,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":291,"author":{"gitId":"dayn-1"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":292,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":293,"author":{"gitId":"dayn-1"},"content":"            return appointmentsAdded.stream().anyMatch(appointment::equals);","lastModifiedDate":"2024-03-16"},{"lineNumber":294,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":295,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":296,"author":{"gitId":"xuelinglow"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":297,"author":{"gitId":"xuelinglow"},"content":"        public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":298,"author":{"gitId":"xuelinglow"},"content":"            requireNonNull(nric);","lastModifiedDate":"2024-03-18"},{"lineNumber":299,"author":{"gitId":"xuelinglow"},"content":"            if (person.getNric().equals(nric)) {","lastModifiedDate":"2024-03-18"},{"lineNumber":300,"author":{"gitId":"xuelinglow"},"content":"                return person;","lastModifiedDate":"2024-03-18"},{"lineNumber":301,"author":{"gitId":"xuelinglow"},"content":"            }","lastModifiedDate":"2024-03-18"},{"lineNumber":302,"author":{"gitId":"xuelinglow"},"content":"            return null;","lastModifiedDate":"2024-03-18"},{"lineNumber":303,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":304,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":305,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":306,"author":{"gitId":"dayn-1"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":307,"author":{"gitId":"dayn-1"},"content":"            requireNonNull(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":308,"author":{"gitId":"dayn-1"},"content":"            appointmentsAdded.add(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":309,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":310,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":311,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-16"},{"lineNumber":312,"author":{"gitId":"dayn-1"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2024-03-16"},{"lineNumber":313,"author":{"gitId":"dayn-1"},"content":"            return new AddressBook();","lastModifiedDate":"2024-03-16"},{"lineNumber":314,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-16"},{"lineNumber":315,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":316,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"},{"lineNumber":317,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xuelinglow":19,"dayn-1":275,"limrik":7,"ThatGirlJam":11,"cliftonchee":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2019-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, Messages.format(validPerson)),","lastModifiedDate":"2019-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2019-02-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(ALICE);","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expected \u003d AddCommand.class.getCanonicalName() + \"{toAdd\u003d\" + ALICE + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expected, addCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"        public boolean hasPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"            return false;","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"        public Person getPersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"            return null;","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"cliftonchee"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"cliftonchee"},"content":"        public void deletePersonWithNric(Nric nric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"cliftonchee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"        public boolean hasAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"xuelinglow"},"content":"        public void cancelAppointment(Appointment key) {","lastModifiedDate":"2024-03-27"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"        public void addAppointment(Appointment appointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":193,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"        public void setAppointment(Appointment target, Appointment editedAppointment) {","lastModifiedDate":"2024-03-13"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":202,"author":{"gitId":"xuelinglow"},"content":"        public void updateFilteredAppointmentList(Predicate\u003cAppointmentView\u003e predicate) {","lastModifiedDate":"2024-03-27"},{"lineNumber":203,"author":{"gitId":"dayn-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":205,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":206,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":207,"author":{"gitId":"limrik"},"content":"        public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":208,"author":{"gitId":"limrik"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":209,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":210,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":211,"author":{"gitId":"limrik"},"content":"        @Override","lastModifiedDate":"2024-03-26"},{"lineNumber":212,"author":{"gitId":"limrik"},"content":"        public void updateFilteredAppointmentDayViewList() {","lastModifiedDate":"2024-03-26"},{"lineNumber":213,"author":{"gitId":"limrik"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-26"},{"lineNumber":214,"author":{"gitId":"limrik"},"content":"        }","lastModifiedDate":"2024-03-26"},{"lineNumber":215,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"        public Appointment getMatchingAppointment(Nric nric, Date date, TimePeriod timePeriod) {","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"ThatGirlJam"},"content":"        @Override","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"ThatGirlJam"},"content":"        public void deleteAppointmentsWithNric(Nric targetNric) {","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"ThatGirlJam"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":226,"author":{"gitId":"xuelinglow"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":227,"author":{"gitId":"xuelinglow"},"content":"        public ObservableList\u003cAppointmentView\u003e getFilteredAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":228,"author":{"gitId":"xuelinglow"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2024-03-21"},{"lineNumber":229,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"xuelinglow":8,"dayn-1":36,"limrik":10,"ThatGirlJam":11,"-":203,"cliftonchee":5}},{"path":"src/test/java/seedu/address/logic/commands/CancelAppCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MISSING_NRIC;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBookWithAppointments;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":" * {@code CancelAppCommand}.","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"public class CancelAppCommandTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithAppointments(), new UserPrefs());","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"    public void execute_validInput_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand cancelAppCommand \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"        // Expected message after successful cancellation","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        String expectedMessage \u003d String.format(CancelAppCommand.MESSAGE_CANCEL_APPOINTMENT_SUCCESS,","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"                Messages.format(ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"        assertCommandSuccess(cancelAppCommand, model, expectedMessage, model);","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    public void execute_appointmentNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        CancelAppCommand cancelAppCommand \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"                new Date(\"1900-02-02\"),","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        );","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(cancelAppCommand, model, Messages.MESSAGE_APPOINTMENT_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    public void execute_nricNotFound_throwsCommandException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        Nric missingNric \u003d new Nric(MISSING_NRIC);","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        CancelAppCommand cancelAppCommand \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"                missingNric,","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        );","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(cancelAppCommand, model, Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    public void equals() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand cancelFirstAppointment \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand cancelSecondAppointment \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT_1.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT_1.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT_1.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"        assertTrue(cancelFirstAppointment.equals(cancelFirstAppointment));","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        //same values --\u003e returns true","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand cancelFirstAppointmentCopy \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"        assertTrue(cancelFirstAppointment.equals(cancelFirstAppointmentCopy));","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"        assertFalse(cancelFirstAppointment.equals(1));","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        assertFalse(cancelFirstAppointment.equals(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"        assertFalse(cancelFirstAppointment.equals(cancelSecondAppointment));","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"        CancelAppCommand cancelAppCommand \u003d new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"        );","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"        String expected \u003d CancelAppCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"                + \"{nric\u003d\" + ALICE_APPT.getNric() + \", \"","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"                + \"date\u003d\" + ALICE_APPT.getDate() + \", \"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"                + \"timePeriod\u003d\" + ALICE_APPT.getTimePeriod() + \"}\";","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expected, cancelAppCommand.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"dayn-1":27,"ThatGirlJam":91}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOverallCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"limrik":3,"-":29}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, ViewMode.ANY)));","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, ViewMode.ANY)));","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, ViewMode.ANY)));","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"        // different isShowHelp value -\u003e returns different hashcode","lastModifiedDate":"2024-03-27"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, ViewMode.ANY).hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"        // different isExit value -\u003e returns different hashcode","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, ViewMode.ANY).hashCode());","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expected \u003d CommandResult.class.getCanonicalName() + \"{feedbackToUser\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"                + commandResult.getFeedbackToUser()","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"                + \", isShowHelp\u003d\" + commandResult.isShowHelp()","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"                + \", isExit\u003d\" + commandResult.isExit() + \", viewMode\u003d\"","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"                + commandResult.getViewMode() + \"}\";","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(expected, commandResult.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"limrik":13,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"    public static final String VALID_NRIC_AMY \u003d \"T0123456A\";","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T0123456B\";","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"    public static final String VALID_DOB_AMY \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"    public static final String VALID_DOB_BOB \u003d \"2001-01-02\";","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_DATE_AMY \u003d \"2024-03-16\";","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_DATE_BOB \u003d \"2024-03-17\";","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_START_TIME_AMY \u003d \"11:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_END_TIME_AMY \u003d \"11:30\";","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_START_TIME_BOB \u003d \"15:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_END_TIME_BOB \u003d \"16:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_TYPE_AMY \u003d \"X-RAY\";","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_TYPE_BOB \u003d \"Health Check-up\";","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_NOTE_AMY \u003d \"Fractured her ankle\";","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"    public static final String VALID_APPOINTMENT_NOTE_BOB \u003d \"Yearly check in\";","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"    public static final String VALID_APPOINTMENT_MARK_AMY \u003d \"true\";","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"    public static final String VALID_APPOINTMENT_MARK_BOB \u003d \"false\";","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"    public static final String DOB_DESC_AMY \u003d \" \" + PREFIX_DOB + VALID_DOB_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"    public static final String DOB_DESC_BOB \u003d \" \" + PREFIX_DOB + VALID_DOB_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"    public static final String DATE_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_DATE + VALID_APPOINTMENT_DATE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"    public static final String DATE_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_DATE + VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"    public static final String START_TIME_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_START_TIME","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"            + VALID_APPOINTMENT_START_TIME_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"    public static final String END_TIME_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_END_TIME","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"            + VALID_APPOINTMENT_END_TIME_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"    public static final String START_TIME_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_START_TIME","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"            + VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"    public static final String END_TIME_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_END_TIME","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"            + VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"    public static final String TYPE_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_TAG + VALID_APPOINTMENT_TYPE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"    public static final String TYPE_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_TAG + VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"    public static final String NOTE_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_NOTE + VALID_APPOINTMENT_NOTE_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"    public static final String NOTE_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_NOTE + VALID_APPOINTMENT_NOTE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"    public static final String MARK_DESC_APPOINTMENT_AMY \u003d \" \" + PREFIX_NOTE + VALID_APPOINTMENT_MARK_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"    public static final String MARK_DESC_APPOINTMENT_BOB \u003d \" \" + PREFIX_NOTE + VALID_APPOINTMENT_MARK_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"t0123456A\"; // first letter must be capital","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_DOB_DESC \u003d \" \" + PREFIX_DOB + \"2025-01-01\"; // must be before today\u0027s date","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2024-32-32\"; // exceeds month and day range","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_TIME_DESC \u003d \" \" + PREFIX_START_TIME + \"24:00\"; // exceeds 24 hour clock range","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_START_TIME + \"11:30\"; // is after end time","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_END_TIME + \"11:00\"; // is before start time","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_APPOINTMENT_TYPE_DESC \u003d \" \" + PREFIX_TAG + \"  \"; // only white spaces","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"    public static final String INVALID_APPOINTMENT_NOTE_DESC \u003d \" \" + PREFIX_NOTE + \"@@\"; // non-alphanumeric","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"xuelinglow"},"content":"    public static final String INVALID_APPOINTMENT_MARK_DESC \u003d \" \" + PREFIX_NOTE + \"abc\"; // not true or false","lastModifiedDate":"2024-03-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"    public static final String MISSING_NRIC \u003d \"G0123456A\";","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"                .withDateOfBirth(VALID_DOB_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"                .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"                .withDateOfBirth(VALID_DOB_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-27"},{"lineNumber":155,"author":{"gitId":"limrik"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2024-03-27"},{"lineNumber":156,"author":{"gitId":"limrik"},"content":"     * that takes a string {@code expectedMessage} and boolean {@code isOverallCommand}.","lastModifiedDate":"2024-03-27"},{"lineNumber":157,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-27"},{"lineNumber":158,"author":{"gitId":"limrik"},"content":"    public static void assertOverallCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2024-03-27"},{"lineNumber":159,"author":{"gitId":"limrik"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2024-03-27"},{"lineNumber":160,"author":{"gitId":"limrik"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, ViewMode.OVERALL);","lastModifiedDate":"2024-03-27"},{"lineNumber":161,"author":{"gitId":"limrik"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"     * - the address book, filtered person list, filtered appointment list and","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"     * - selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"        List\u003cPerson\u003e expectedFilteredPersonList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"xuelinglow"},"content":"        List\u003cAppointmentView\u003e expectedFilteredAppointmentViewList \u003d","lastModifiedDate":"2024-03-27"},{"lineNumber":177,"author":{"gitId":"xuelinglow"},"content":"                new ArrayList\u003c\u003e(actualModel.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedFilteredPersonList, actualModel.getFilteredPersonList());","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(expectedFilteredAppointmentViewList, actualModel.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xuelinglow":9,"dayn-1":46,"limrik":20,"-":119,"cliftonchee":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MISSING_NRIC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.AMY_APPT;","lastModifiedDate":"2024-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"    public void execute_validNric_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"        Person personToDelete \u003d model.getPersonWithNric(new Nric(VALID_NRIC_AMY));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2019-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2019-02-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    public void execute_validNricNoAppointments_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"        Person personToDelete \u003d model.getPersonWithNric(new Nric(VALID_NRIC_AMY));","lastModifiedDate":"2024-03-19"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getNric());","lastModifiedDate":"2024-03-19"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-19"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2024-03-19"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    public void execute_validNricWithAppointments_success() {","lastModifiedDate":"2024-03-19"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"        Person personToDelete \u003d model.getPersonWithNric(new Nric(VALID_NRIC_AMY));","lastModifiedDate":"2024-03-19"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        model.addAppointment(AMY_APPT);","lastModifiedDate":"2024-03-19"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getNric());","lastModifiedDate":"2024-03-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS,","lastModifiedDate":"2024-03-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                Messages.format(personToDelete));","lastModifiedDate":"2024-03-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2024-03-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-19"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(model.getFilteredAppointmentViewList().isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2024-03-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"cliftonchee"},"content":"    public void execute_missingNric_throwsCommandException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"cliftonchee"},"content":"        Nric missingNric \u003d new Nric(MISSING_NRIC);","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(missingNric);","lastModifiedDate":"2024-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"cliftonchee"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":87,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(personToDelete.getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":88,"author":{"gitId":"cliftonchee"},"content":"        Person personToDelete2 \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":89,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(personToDelete2.getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"cliftonchee"},"content":"        Person personToDeleteCopy \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2024-03-14"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(personToDeleteCopy.getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":111,"author":{"gitId":"cliftonchee"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(1);","lastModifiedDate":"2024-03-14"},{"lineNumber":112,"author":{"gitId":"cliftonchee"},"content":"        Nric targetNric \u003d personToDelete.getNric();","lastModifiedDate":"2024-03-14"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(targetNric);","lastModifiedDate":"2024-03-14"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"        String expected \u003d DeleteCommand.class.getCanonicalName() + \"{targetNric\u003d\" + targetNric + \"}\";","lastModifiedDate":"2024-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expected, deleteCommand.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"xuelinglow":1,"dayn-1":1,"ThatGirlJam":16,"-":89,"cliftonchee":19}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-24"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-24"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-24"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-24"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2024-03-24"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2024-03-24"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-24"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-24"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2024-03-24"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"    public void execute_allFieldsSpecified_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        Person editedPerson \u003d new PersonBuilder().withNric(ALICE.getNric().value).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(ALICE.getNric(), descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        expectedModel.setPerson(ALICE, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    public void execute_someFieldsSpecified_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(ALICE);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(editedPerson.getNric(), descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        expectedModel.setPerson(ALICE, editedPerson);","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    public void execute_noFieldSpecified_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(AMY.getNric(), new EditPersonDescriptor());","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        Person editedPerson \u003d model.getPersonWithNric(AMY.getNric());","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(EditPersonCommand.MESSAGE_EDIT_PERSON_SUCCESS,","lastModifiedDate":"2024-03-24"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"                Messages.format(editedPerson));","lastModifiedDate":"2024-03-24"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-24"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"    public void execute_personNricNotFound_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"        Nric notFoundNric \u003d new Nric(\"G9999999X\");","lastModifiedDate":"2024-03-24"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(notFoundNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_PERSON_NRIC_NOT_FOUND);","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-24"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(new Nric(VALID_NRIC_AMY), DESC_AMY);","lastModifiedDate":"2024-03-24"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2024-03-24"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(new Nric(VALID_NRIC_AMY), copyDescriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(new Nric(VALID_NRIC_BOB), DESC_AMY)));","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(new Nric(VALID_NRIC_AMY), DESC_BOB)));","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(new Nric(VALID_NRIC_AMY), editPersonDescriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"        String expected \u003d EditPersonCommand.class.getCanonicalName() + \"{nric\u003d\" + VALID_NRIC_AMY","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"                + \", editPersonDescriptor\u003d\" + editPersonDescriptor + \"}\";","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expected, editPersonCommand.toString());","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-24"}],"authorContributionMap":{"dayn-1":129}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2019-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expected \u003d EditPersonDescriptor.class.getCanonicalName() + \"{name\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"                + editPersonDescriptor.getName().orElse(null) + \", dob\u003d\"","lastModifiedDate":"2024-03-24"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"                + editPersonDescriptor.getDateOfBirth().orElse(null) + \", phone\u003d\"","lastModifiedDate":"2024-03-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getPhone().orElse(null) + \", email\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getEmail().orElse(null) + \", address\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getAddress().orElse(null) + \", tags\u003d\"","lastModifiedDate":"2019-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + editPersonDescriptor.getTags().orElse(null) + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, editPersonDescriptor.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dayn-1":3,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"                false, true, ViewMode.ANY);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"limrik":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindApptCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.commons.core.date.Date.isValidDate;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.Messages.MESSAGE_APPOINTMENTS_LISTED_OVERVIEW;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOverallCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.model.appointment.Time.isValidTime;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.model.person.Nric.isValidNric;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.ALICE_APPT_VIEW;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.ALICE_APPT_VIEW_1;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.getTypicalAddressBookWithAppointmentViews;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"/**","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":" * Contains integration tests (interaction with the Model) for {@code FindAppointmentCommand}.","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":" */","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"public class FindApptCommandTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithAppointmentViews(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBookWithAppointmentViews(), new UserPrefs());","lastModifiedDate":"2024-03-26"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"cliftonchee"},"content":"                );","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Nric(\"T0123456A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(\"2024-12-30\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(\"09:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"                );","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand findFirstCommand \u003d new FindApptCommand(firstPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand findSecondCommand \u003d new FindApptCommand(secondPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand findFirstCommandCopy \u003d new FindApptCommand(firstPredicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"cliftonchee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"cliftonchee"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"cliftonchee"},"content":"    public void execute_zeroKeywords_invalidCommandFormat() {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"cliftonchee"},"content":"        assertThrows(ParseException.class, () -\u003e preparePredicate(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"cliftonchee"},"content":"    public void execute_multipleKeywords_oneAppointmentFound() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"cliftonchee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d preparePredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"cliftonchee"},"content":"                \" i/T0123456A d/2024-03-01 from/16:00\"","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":92,"author":{"gitId":"cliftonchee"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":94,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(Arrays.asList(ALICE_APPT_VIEW), model.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"cliftonchee"},"content":"    public void execute_sameNric_twoAppointmentsFound() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"cliftonchee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-26"},{"lineNumber":100,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d preparePredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"cliftonchee"},"content":"                \" i/T0123456A\"","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"cliftonchee"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":106,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(Arrays.asList(ALICE_APPT_VIEW, ALICE_APPT_VIEW_1),","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"cliftonchee"},"content":"                model.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"cliftonchee"},"content":"    public void execute_sameNricAndTime_twoAppointmentsFound() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"cliftonchee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d preparePredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"                \" i/T0123456A from/16:00\"","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":117,"author":{"gitId":"cliftonchee"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(Arrays.asList(ALICE_APPT_VIEW, ALICE_APPT_VIEW_1),","lastModifiedDate":"2024-03-26"},{"lineNumber":120,"author":{"gitId":"cliftonchee"},"content":"                model.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"cliftonchee"},"content":"    public void execute_missingNric_zeroAppointmentsFound() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"cliftonchee"},"content":"        String expectedMessage \u003d String.format(MESSAGE_APPOINTMENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2024-03-25"},{"lineNumber":126,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d preparePredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"cliftonchee"},"content":"                \" i/T6543210A\"","lastModifiedDate":"2024-03-25"},{"lineNumber":128,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand command \u003d new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"cliftonchee"},"content":"        expectedModel.updateFilteredAppointmentList(predicate);","lastModifiedDate":"2024-03-25"},{"lineNumber":131,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":132,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(Arrays.asList(), model.getFilteredAppointmentViewList());","lastModifiedDate":"2024-03-26"},{"lineNumber":133,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":135,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"cliftonchee"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":138,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand findApptCommand \u003d new FindApptCommand(predicate);","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"cliftonchee"},"content":"        String expected \u003d FindApptCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-26"},{"lineNumber":144,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(expected, findApptCommand.toString());","lastModifiedDate":"2024-03-26"},{"lineNumber":145,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"cliftonchee"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"cliftonchee"},"content":"     * Parses {@code userInput} into a {@code AppointmentContainsKeywordsPredicate}.","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"cliftonchee"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"cliftonchee"},"content":"    private AppointmentContainsKeywordsPredicate preparePredicate(String userInput) throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"cliftonchee"},"content":"        String trimmedArgs \u003d userInput.trim();","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"cliftonchee"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"cliftonchee"},"content":"            throw new ParseException(","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"cliftonchee"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"cliftonchee"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"cliftonchee"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_NRIC,","lastModifiedDate":"2024-03-25"},{"lineNumber":159,"author":{"gitId":"cliftonchee"},"content":"                        PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":161,"author":{"gitId":"cliftonchee"},"content":"        argMultimap.verifyNoDuplicatePrefixesFor(PREFIX_NAME, PREFIX_NRIC,","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"cliftonchee"},"content":"                PREFIX_DATE, PREFIX_START_TIME, PREFIX_END_TIME);","lastModifiedDate":"2024-03-25"},{"lineNumber":163,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":164,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cNric\u003e nricFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cDate\u003e dateFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"cliftonchee"},"content":"        Optional\u003cTime\u003e timeFilter \u003d Optional.empty();","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":168,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"cliftonchee"},"content":"            if (isValidNric(argMultimap.getValue(PREFIX_NRIC).orElse(\"\"))) {","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"cliftonchee"},"content":"                nricFilter \u003d Optional.of(new Nric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"cliftonchee"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":172,"author":{"gitId":"cliftonchee"},"content":"                throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"cliftonchee"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":176,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"cliftonchee"},"content":"            if (isValidDate(argMultimap.getValue(PREFIX_DATE).orElse(\"\"))) {","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"cliftonchee"},"content":"                dateFilter \u003d Optional.of(new Date(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":179,"author":{"gitId":"cliftonchee"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"cliftonchee"},"content":"                throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"cliftonchee"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"cliftonchee"},"content":"        if (argMultimap.getValue(PREFIX_START_TIME).isPresent()) {","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"cliftonchee"},"content":"            if (isValidTime(argMultimap.getValue(PREFIX_START_TIME).orElse(\"\"))) {","lastModifiedDate":"2024-03-25"},{"lineNumber":186,"author":{"gitId":"cliftonchee"},"content":"                timeFilter \u003d Optional.of(new Time(argMultimap.getValue(PREFIX_START_TIME).get()));","lastModifiedDate":"2024-03-26"},{"lineNumber":187,"author":{"gitId":"cliftonchee"},"content":"            } else {","lastModifiedDate":"2024-03-25"},{"lineNumber":188,"author":{"gitId":"cliftonchee"},"content":"                throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":189,"author":{"gitId":"cliftonchee"},"content":"            }","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"cliftonchee"},"content":"        }","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":193,"author":{"gitId":"cliftonchee"},"content":"                nricFilter, dateFilter, timeFilter);","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"cliftonchee"},"content":"        return predicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":196,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"limrik":5,"cliftonchee":191}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOverallCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"keyword\"));","lastModifiedDate":"2019-02-23"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand findPersonCommand \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        String expected \u003d FindPersonCommand.class.getCanonicalName() + \"{predicate\u003d\" + predicate + \"}\";","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expected, findPersonCommand.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"limrik":3,"dayn-1":10,"-":78}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, ViewMode.ANY);","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"limrik":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertOverallCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    public void execute_listIsFilterxed_showsEverything() {","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        assertOverallCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"limrik":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_1;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBookWithAppointments;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"public class MarkCommandTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookWithAppointments(), new UserPrefs());","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    public void constructor_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(NullPointerException.class, () -\u003e new MarkCommand(null, null, null));","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public void execute_mark_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand markCommand \u003d new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"        // Expected message after successful mark","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_PERSON_SUCCESS,","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"                Messages.format(ALICE_APPT));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, model);","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand markFirstAppointment \u003d new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand markSecondAppointment \u003d new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT_1.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT_1.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT_1.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(markFirstAppointment.equals(markFirstAppointment));","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        //same values --\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand markFirstAppointmentCopy \u003d new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(markFirstAppointment.equals(markFirstAppointmentCopy));","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(markFirstAppointment.equals(1));","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(markFirstAppointment.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(markFirstAppointment.equals(markSecondAppointment));","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"        MarkCommand markCommand \u003d new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"                ALICE_APPT.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"        String expected \u003d MarkCommand.class.getCanonicalName()","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"                + \"{nric\u003d\" + ALICE_APPT.getNric() + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"                + \"date\u003d\" + ALICE_APPT.getDate() + \", \"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"                + \"timePeriod\u003d\" + ALICE_APPT.getTimePeriod() + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(expected, markCommand.toString());","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":93}},{"path":"src/test/java/seedu/address/logic/commands/SwitchViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2024-03-27"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2024-03-27"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.SwitchViewCommand.MESSAGE_SWITCH_VIEW_SUCCESS;","lastModifiedDate":"2024-03-27"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-27"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.ui.ViewMode;","lastModifiedDate":"2024-03-27"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"public class SwitchViewCommandTest {","lastModifiedDate":"2024-03-27"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2024-03-27"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    public void execute_switchView_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_SWITCH_VIEW_SUCCESS, false,","lastModifiedDate":"2024-03-27"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"                false, ViewMode.SWITCH);","lastModifiedDate":"2024-03-27"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        assertCommandSuccess(new SwitchViewCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2024-03-27"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-27"}],"authorContributionMap":{"limrik":22}},{"path":"src/test/java/seedu/address/logic/parser/AddAppCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPOINTMENT_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_APPOINTMENT_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_APPOINTMENT_TYPE_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_APPOINTMENT_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NOTE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_APPOINTMENT_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_APPOINTMENT_AMY;","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TYPE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NOTE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"public class AddAppCommandParserTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    private final AddAppCommandParser parser \u003d new AddAppCommandParser();","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BOB_APPT).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"                new AddAppCommand(expectedAppointment));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"    public void parse_repeatedValue_failure() {","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        String validExpectedAppointmentString \u003d NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        // multiple NRICs","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        // multiple dates","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, DATE_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        // multiple start times","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, START_TIME_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"        // multiple end times","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, END_TIME_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_TIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"        // multiple appointment types","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, TYPE_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"        // multiple notes","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NOTE_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NOTE));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        // multiple fields repeated","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"                validExpectedAppointmentString + DATE_DESC_APPOINTMENT_AMY + NRIC_DESC_AMY","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"                        + START_TIME_DESC_APPOINTMENT_AMY + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC, PREFIX_DATE, PREFIX_START_TIME,","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"                        PREFIX_END_TIME, PREFIX_TAG, PREFIX_NOTE));","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"        // invalid NRIC","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"        // invalid date","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_DATE_DESC + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DATE));","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"        // invalid start time","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_START_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_START_TIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"        // invalid end time","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_END_TIME_DESC + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_END_TIME));","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        // invalid appointment type","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_APPOINTMENT_TYPE_DESC + validExpectedAppointmentString,","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_TAG));","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"        // missing NRIC prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, DATE_DESC_APPOINTMENT_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"        // missing date prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"        // missing start time prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"        // missing end time prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"        // missing appointment type prefix","lastModifiedDate":"2024-03-16"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_APPOINTMENT_DATE_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"                + VALID_APPOINTMENT_START_TIME_BOB + VALID_APPOINTMENT_END_TIME_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"                + VALID_APPOINTMENT_TYPE_BOB + VALID_APPOINTMENT_NOTE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-16"},{"lineNumber":159,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":160,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":161,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"    public void parse_optionalFieldMissing_success() {","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"dayn-1"},"content":"        // missing note prefix is ok","lastModifiedDate":"2024-03-24"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"dayn-1"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB + TYPE_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-24"},{"lineNumber":166,"author":{"gitId":"dayn-1"},"content":"                new AddAppCommand(new AppointmentBuilder(BOB_APPT).withNote(\"\").build()));","lastModifiedDate":"2024-03-24"},{"lineNumber":167,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"dayn-1"},"content":"        // invalid NRIC","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"        // invalid date","lastModifiedDate":"2024-03-16"},{"lineNumber":177,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_DATE_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":178,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":179,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":180,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":181,"author":{"gitId":"dayn-1"},"content":"        // invalid time period","lastModifiedDate":"2024-03-16"},{"lineNumber":182,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":183,"author":{"gitId":"dayn-1"},"content":"                + INVALID_START_TIME_DESC + INVALID_END_TIME_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":184,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB, TimePeriod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"        // invalid appointment type","lastModifiedDate":"2024-03-16"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":188,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":189,"author":{"gitId":"dayn-1"},"content":"                + INVALID_APPOINTMENT_TYPE_DESC + NOTE_DESC_APPOINTMENT_BOB, AppointmentType.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":190,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"        // all notes are valid, no tests here","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":193,"author":{"gitId":"dayn-1"},"content":"        // multiple invalid values, only the first one reported","lastModifiedDate":"2024-03-16"},{"lineNumber":194,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + INVALID_DATE_DESC","lastModifiedDate":"2024-03-16"},{"lineNumber":195,"author":{"gitId":"dayn-1"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"                + TYPE_DESC_APPOINTMENT_BOB + NOTE_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-16"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":198,"author":{"gitId":"dayn-1"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-16"},{"lineNumber":199,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":200,"author":{"gitId":"dayn-1"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-16"},{"lineNumber":201,"author":{"gitId":"dayn-1"},"content":"                        + VALID_APPOINTMENT_TYPE_BOB + VALID_APPOINTMENT_NOTE_BOB,","lastModifiedDate":"2024-03-16"},{"lineNumber":202,"author":{"gitId":"dayn-1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-16"},{"lineNumber":203,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":204,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":204}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-07-14"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"                NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_repeatedNonTagValue_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"        String validExpectedPersonString \u003d NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND;","lastModifiedDate":"2023-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple names","lastModifiedDate":"2023-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":92,"author":{"gitId":"limrik"},"content":"        // multiple nrics","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NRIC_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"        // multiple dobs","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, DOB_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-13"},{"lineNumber":99,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // multiple phones","lastModifiedDate":"2023-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PHONE_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple emails","lastModifiedDate":"2023-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, EMAIL_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple addresses","lastModifiedDate":"2023-07-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, ADDRESS_DESC_AMY + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // multiple fields repeated","lastModifiedDate":"2023-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser,","lastModifiedDate":"2023-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                validExpectedPersonString + PHONE_DESC_AMY + EMAIL_DESC_AMY + NAME_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                        + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":116,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME, PREFIX_NRIC, PREFIX_DOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":117,"author":{"gitId":"limrik"},"content":"                        PREFIX_ADDRESS, PREFIX_EMAIL, PREFIX_PHONE));","lastModifiedDate":"2024-03-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // invalid value followed by valid value","lastModifiedDate":"2023-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":125,"author":{"gitId":"limrik"},"content":"        // invalid nric","lastModifiedDate":"2024-03-13"},{"lineNumber":126,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":129,"author":{"gitId":"limrik"},"content":"        // invalid dob","lastModifiedDate":"2024-03-13"},{"lineNumber":130,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, INVALID_DOB_DESC + validExpectedPersonString,","lastModifiedDate":"2024-03-13"},{"lineNumber":131,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_PHONE_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_ADDRESS_DESC + validExpectedPersonString,","lastModifiedDate":"2023-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // valid value followed by invalid value","lastModifiedDate":"2023-07-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2023-07-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NAME_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NAME));","lastModifiedDate":"2023-07-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":147,"author":{"gitId":"limrik"},"content":"        // invalid nric","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_NRIC_DESC,","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_NRIC));","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":151,"author":{"gitId":"limrik"},"content":"        // invalid dob","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_DOB_DESC,","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"limrik"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_DOB));","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2023-07-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_EMAIL_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_EMAIL));","lastModifiedDate":"2023-07-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2023-07-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_PHONE_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2023-07-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, validExpectedPersonString + INVALID_ADDRESS_DESC,","lastModifiedDate":"2023-07-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":172,"author":{"gitId":"limrik"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NRIC_DESC_AMY + DOB_DESC_AMY","lastModifiedDate":"2024-03-13"},{"lineNumber":173,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2024-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":183,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":184,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":185,"author":{"gitId":"limrik"},"content":"        // missing nric prefix","lastModifiedDate":"2024-03-13"},{"lineNumber":186,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_NRIC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":187,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":188,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":189,"author":{"gitId":"limrik"},"content":"        // missing dob prefix","lastModifiedDate":"2024-03-13"},{"lineNumber":190,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + VALID_DOB_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":191,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":195,"author":{"gitId":"limrik"},"content":"                        + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":199,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":203,"author":{"gitId":"limrik"},"content":"                        + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":207,"author":{"gitId":"limrik"},"content":"                        + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB, expectedMessage);","lastModifiedDate":"2024-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":214,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"limrik"},"content":"        // invalid nric","lastModifiedDate":"2024-03-13"},{"lineNumber":218,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_NRIC_DESC + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":219,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":220,"author":{"gitId":"limrik"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":221,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":222,"author":{"gitId":"limrik"},"content":"        //        // invalid dob","lastModifiedDate":"2024-03-13"},{"lineNumber":223,"author":{"gitId":"limrik"},"content":"        //        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + INVALID_DOB_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":224,"author":{"gitId":"limrik"},"content":"        //                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":225,"author":{"gitId":"limrik"},"content":"        //                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-13"},{"lineNumber":226,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":229,"author":{"gitId":"limrik"},"content":"                + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":233,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":234,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":238,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":239,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2024-03-13"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":243,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":244,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":248,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":249,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2024-03-13"},{"lineNumber":250,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":253,"author":{"gitId":"limrik"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + NRIC_DESC_BOB + DOB_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":254,"author":{"gitId":"limrik"},"content":"                + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2024-03-13"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"limrik":87,"-":171}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-07-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"import seedu.address.logic.commands.SwitchViewCommand;","lastModifiedDate":"2024-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.NricContainsMatchPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"import seedu.address.testutil.AppointmentUtil;","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"    public void parseCommand_appApp() throws Exception {","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        Appointment appointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        AddAppCommand command \u003d (AddAppCommand) parser.parseCommand(AppointmentUtil.getAddAppCommand(appointment));","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        assertEquals(new AddAppCommand(appointment), command);","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2024-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + person.getNric());","lastModifiedDate":"2024-03-14"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-14"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(new DeleteCommand(person.getNric()), command);","lastModifiedDate":"2024-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(EditPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2024-03-24"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"                + person.getNric() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        assertEquals(new EditPersonCommand(person.getNric(), descriptor), command);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"                FindPersonCommand.COMMAND_WORD + \" n/\" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2024-03-23"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2024-03-23"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        String keyword \u003d \"foo\";","lastModifiedDate":"2024-03-23"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        command \u003d (FindPersonCommand) parser.parseCommand(","lastModifiedDate":"2024-03-23"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"                FindPersonCommand.COMMAND_WORD + \" i/\" + keyword);","lastModifiedDate":"2024-03-23"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        assertEquals(new FindPersonCommand(new NricContainsMatchPredicate(keyword)), command);","lastModifiedDate":"2024-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"limrik"},"content":"    public void parseCommand_addApp() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"limrik"},"content":"        Appointment appointment \u003d new AppointmentBuilder().build();","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"limrik"},"content":"        AddAppCommand command \u003d (AddAppCommand) parser.parseCommand(AppointmentUtil.getAddAppCommand(appointment));","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"limrik"},"content":"        assertEquals(new AddAppCommand(appointment), command);","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-27"},{"lineNumber":118,"author":{"gitId":"limrik"},"content":"    public void parseCommand_switchView() throws Exception {","lastModifiedDate":"2024-03-27"},{"lineNumber":119,"author":{"gitId":"limrik"},"content":"        assertTrue(parser.parseCommand(SwitchViewCommand.COMMAND_WORD) instanceof SwitchViewCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":120,"author":{"gitId":"limrik"},"content":"        assertTrue(parser.parseCommand(SwitchViewCommand.COMMAND_WORD + \" 3\") instanceof SwitchViewCommand);","lastModifiedDate":"2024-03-27"},{"lineNumber":121,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-27"},{"lineNumber":122,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"limrik":18,"dayn-1":22,"-":89,"cliftonchee":4}},{"path":"src/test/java/seedu/address/logic/parser/CancelAppCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.logic.commands.CancelAppCommand;","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"public class CancelAppCommandParserTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    private final CancelAppCommandParser parser \u003d new CancelAppCommandParser();","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BOB_APPT).build();","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"                new CancelAppCommand(","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"                        expectedAppointment.getNric(),","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"                        expectedAppointment.getDate(),","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"                        expectedAppointment.getTimePeriod()","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"                ));","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelAppCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"        // missing NRIC prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, DATE_DESC_APPOINTMENT_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"        // missing date prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"        // missing start time prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        // missing end time prefix","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_APPOINTMENT_DATE_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"                        + VALID_APPOINTMENT_START_TIME_BOB + VALID_APPOINTMENT_END_TIME_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"        // invalid NRIC","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        // invalid date","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_DATE_DESC","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"        // invalid time period","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"                + INVALID_START_TIME_DESC + INVALID_END_TIME_DESC, TimePeriod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"        // multiple invalid values, only the first one reported","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + INVALID_DATE_DESC","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, CancelAppCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ThatGirlJam":102}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"        assertParseSuccess(parser, VALID_NRIC_AMY, new DeleteCommand(new Nric(VALID_NRIC_AMY)));","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"-":30,"cliftonchee":3}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-07-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOB_DESC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOB_DESC;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-07-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-07-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-07-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.Messages;","lastModifiedDate":"2023-07-14"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand;","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2024-03-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        // no nric specified","lastModifiedDate":"2024-03-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY, EditPersonCommand.MESSAGE_EDIT_PERSON_NO_FIELDS);","lastModifiedDate":"2024-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        // no nric and no field specified","lastModifiedDate":"2024-03-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        // invalid nric","lastModifiedDate":"2024-03-24"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \"T01234567\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \"T01234\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \"some random string\" + VALID_NRIC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + \"some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + \"i/ T0123456A\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2024-03-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2024-03-24"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_DOB_DESC, DateOfBirth.MESSAGE_CONSTRAINTS); // invalid dob","lastModifiedDate":"2024-03-24"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2024-03-24"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2024-03-24"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY","lastModifiedDate":"2024-03-24"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"                + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2024-03-24"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2024-03-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-24"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"                + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-24"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"                + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + TAG_EMPTY + TAG_DESC_FRIEND","lastModifiedDate":"2024-03-24"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"                + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, VALID_NRIC_AMY + INVALID_NAME_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d targetNric + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"                + DOB_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"                .withDateOfBirth(VALID_DOB_AMY).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d targetNric + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d targetNric + NAME_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"limrik"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":148,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":149,"author":{"gitId":"limrik"},"content":"        // dob","lastModifiedDate":"2024-03-13"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + DOB_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"limrik"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDateOfBirth(VALID_DOB_AMY).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"        expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + PHONE_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"dayn-1"},"content":"        expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + EMAIL_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"dayn-1"},"content":"        expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + ADDRESS_DESC_AMY;","lastModifiedDate":"2024-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"dayn-1"},"content":"        expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + TAG_DESC_FRIEND;","lastModifiedDate":"2024-03-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"dayn-1"},"content":"        expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_failure() {","lastModifiedDate":"2023-07-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // More extensive testing of duplicate parameter detections is done in","lastModifiedDate":"2023-07-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // AddCommandParserTest#parse_repeatedNonTagValue_failure()","lastModifiedDate":"2023-07-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":185,"author":{"gitId":"dayn-1"},"content":"        // invalid followed by valid","lastModifiedDate":"2024-03-24"},{"lineNumber":186,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2024-03-24"},{"lineNumber":187,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d targetNric + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2024-03-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":191,"author":{"gitId":"dayn-1"},"content":"        // valid followed by invalid","lastModifiedDate":"2024-03-24"},{"lineNumber":192,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + PHONE_DESC_BOB + INVALID_PHONE_DESC;","lastModifiedDate":"2024-03-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput, Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE));","lastModifiedDate":"2023-07-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-07-14"},{"lineNumber":196,"author":{"gitId":"dayn-1"},"content":"        // multiple valid fields repeated","lastModifiedDate":"2024-03-24"},{"lineNumber":197,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2024-03-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // multiple invalid values","lastModifiedDate":"2023-07-14"},{"lineNumber":205,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d targetNric + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC","lastModifiedDate":"2024-03-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                + INVALID_PHONE_DESC + INVALID_ADDRESS_DESC + INVALID_EMAIL_DESC;","lastModifiedDate":"2023-07-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, userInput,","lastModifiedDate":"2023-07-14"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                Messages.getErrorMessageForDuplicatePrefixes(PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS));","lastModifiedDate":"2023-07-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":214,"author":{"gitId":"dayn-1"},"content":"        Nric targetNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2024-03-24"},{"lineNumber":215,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d targetNric + TAG_EMPTY;","lastModifiedDate":"2024-03-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"dayn-1"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetNric, descriptor);","lastModifiedDate":"2024-03-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"limrik":10,"dayn-1":63,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/FindApptCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-26"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-26"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-26"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.commands.FindApptCommand;","lastModifiedDate":"2024-03-26"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.AppointmentContainsKeywordsPredicate;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"public class FindApptCommandParserTest {","lastModifiedDate":"2024-03-26"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"    private FindApptCommandParser parser \u003d new FindApptCommandParser();","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindApptCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, \" i/  \",","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"                String.format(Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, \" d/  \",","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"                String.format(Date.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, \" from/  \",","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":"                String.format(Time.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"        // no leading and trailing whitespaces for NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand expectedFindApptCommand \u003d","lastModifiedDate":"2024-03-26"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"                new FindApptCommand(new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-26"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty()));","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"        assertParseSuccess(parser, \" i/ S1234567A\", expectedFindApptCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"cliftonchee"},"content":"        // multiple whitespaces between keywords for NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"        assertParseSuccess(parser, \" \\n i/  S1234567A\", expectedFindApptCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"        // leading and trailing whitespaces for nric","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"        assertParseSuccess(parser, \" i/   S1234567A      \", expectedFindApptCommand);","lastModifiedDate":"2024-03-26"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"    public void parse_emptyInput_throwParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"    public void parse_invalidNric_throwParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC, String.format(Nric.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-26"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"    public void parse_invalidDate_throwParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, INVALID_DATE_DESC, String.format(Date.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-26"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"cliftonchee"},"content":"    public void parse_invalidTime_throwParseException() {","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"cliftonchee"},"content":"        assertParseFailure(parser, \" \" + PREFIX_START_TIME + \" 24:00\", String.format(Time.MESSAGE_CONSTRAINTS));","lastModifiedDate":"2024-03-26"},{"lineNumber":78,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"cliftonchee"},"content":"    public void parse_validNricFilter_returnFindAppCommand() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand expectedCommand \u003d new FindApptCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":83,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Nric(VALID_NRIC_AMY)),","lastModifiedDate":"2024-03-26"},{"lineNumber":85,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty()","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"cliftonchee"},"content":"                )","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(expectedCommand, parser.parse(NRIC_DESC_AMY));","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"cliftonchee"},"content":"    public void parse_validDateFilter_returnFindAppCommand() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand expectedCommand \u003d new FindApptCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty()","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"cliftonchee"},"content":"                )","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(expectedCommand, parser.parse(\" \" + PREFIX_DATE + \" 2024-12-31\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"cliftonchee"},"content":"    public void parse_validTimeFilter_returnFindAppCommand() throws ParseException {","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"cliftonchee"},"content":"        FindApptCommand expectedCommand \u003d new FindApptCommand(","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"cliftonchee"},"content":"                )","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"        assertEquals(expectedCommand, parser.parse(\" \" + PREFIX_START_TIME + \" 10:00\"));","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"cliftonchee":116}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.FindPersonCommand;","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.NricContainsMatchPredicate;","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \" n/  \",","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, \" i/  \",","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        // no leading and trailing whitespaces for name","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Ali\", \"Bob\")));","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertParseSuccess(parser, \" n/ Ali Bob\", expectedFindPersonCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        // multiple whitespaces between keywords for name","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        assertParseSuccess(parser, \" \\n n/ Ali \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        // leading and trailing whitespaces for nric","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        expectedFindPersonCommand \u003d","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"                new FindPersonCommand(new NricContainsMatchPredicate(\"T012\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        assertParseSuccess(parser, \" i/   T012      \", expectedFindPersonCommand);","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    public void parse_multipleInputFields_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        String userInput \u003d \" i/ T012    n/ Alex\";","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, userInput, FindPersonCommand.MESSAGE_MULTIPLE_FIELDS_PROVIDED);","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        userInput \u003d \"  n/ Alex  i/ T012  \";","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        assertParseFailure(parser, userInput, FindPersonCommand.MESSAGE_MULTIPLE_FIELDS_PROVIDED);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dayn-1":54}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_APPOINTMENT_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"    private final MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        Appointment expectedAppointment \u003d new AppointmentBuilder(BOB_APPT).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        // whitespace only preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"                new MarkCommand(","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"                        expectedAppointment.getNric(),","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"                        expectedAppointment.getDate(),","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"                        expectedAppointment.getTimePeriod()","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"                ));","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"        // missing NRIC prefix","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, DATE_DESC_APPOINTMENT_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"        // missing date prefix","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + START_TIME_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"        // missing start time prefix","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"                        + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"        // missing end time prefix","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"        // all prefixes missing","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB + VALID_APPOINTMENT_DATE_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"                        + VALID_APPOINTMENT_START_TIME_BOB + VALID_APPOINTMENT_END_TIME_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"                expectedMessage);","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"        // invalid NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"        // invalid date","lastModifiedDate":"2024-03-25"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_DATE_DESC","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"        // invalid time period","lastModifiedDate":"2024-03-25"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"                + INVALID_START_TIME_DESC + INVALID_END_TIME_DESC, TimePeriod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"xuelinglow"},"content":"        // multiple invalid values, only the first one reported","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + INVALID_DATE_DESC","lastModifiedDate":"2024-03-25"},{"lineNumber":95,"author":{"gitId":"xuelinglow"},"content":"                + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"        // non-empty preamble","lastModifiedDate":"2024-03-25"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB + DATE_DESC_APPOINTMENT_BOB","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"                        + START_TIME_DESC_APPOINTMENT_BOB + END_TIME_DESC_APPOINTMENT_BOB,","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":102}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-24"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-24"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-24"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_NRIC \u003d \"T0123456@\";","lastModifiedDate":"2024-03-24"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_DATE \u003d \"2024-3-23\";","lastModifiedDate":"2024-03-24"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_DOB \u003d \"2025-01-01\";","lastModifiedDate":"2024-03-24"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_APPOINTMENT_TYPE \u003d \"\";","lastModifiedDate":"2024-03-24"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME \u003d \"24:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME_PERIOD_START \u003d \"13:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME_PERIOD_END \u003d \"12:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_NRIC \u003d \"T0123456A\";","lastModifiedDate":"2024-03-24"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_DATE \u003d \"2024-03-23\";","lastModifiedDate":"2024-03-24"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_DOB \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_APPOINTMENT_TYPE \u003d \"Health Check-up\";","lastModifiedDate":"2024-03-24"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_APPOINTMENT_NOTE \u003d \"May come earlier\";","lastModifiedDate":"2024-03-24"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_TIME \u003d \"15:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_TIME_PERIOD_START \u003d \"12:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_TIME_PERIOD_END \u003d \"13:00\";","lastModifiedDate":"2024-03-24"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"    public void parseNric_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNric((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"    public void parseNric_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2024-03-24"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"    public void parseNric_validValueWithoutWhitespace_returnsNric() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2024-03-24"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(VALID_NRIC));","lastModifiedDate":"2024-03-24"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"    public void parseNric_validValueWithWhitespace_returnsTrimmedNric() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"        String nricWithWhitespace \u003d WHITESPACE + VALID_NRIC + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"        Nric expectedNric \u003d new Nric(VALID_NRIC);","lastModifiedDate":"2024-03-24"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedNric, ParserUtil.parseNric(nricWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":129,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"    public void parseDateOfBirth_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDateOfBirth((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"    public void parseDateOfBirth_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDateOfBirth(INVALID_DOB));","lastModifiedDate":"2024-03-24"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":138,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"    public void parseDateOfBirth_validValueWithoutWhitespace_returnsDob() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"        DateOfBirth expectedDob \u003d new DateOfBirth(VALID_DOB);","lastModifiedDate":"2024-03-24"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedDob, ParserUtil.parseDateOfBirth(VALID_DOB));","lastModifiedDate":"2024-03-24"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":144,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":145,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":146,"author":{"gitId":"dayn-1"},"content":"    public void parseDateOfBirth_validValueWithWhitespace_returnsTrimmedDob() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":147,"author":{"gitId":"dayn-1"},"content":"        String dobWithWhitespace \u003d WHITESPACE + VALID_DOB + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":148,"author":{"gitId":"dayn-1"},"content":"        DateOfBirth expectedDob \u003d new DateOfBirth(VALID_DOB);","lastModifiedDate":"2024-03-24"},{"lineNumber":149,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedDob, ParserUtil.parseDateOfBirth(dobWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":150,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":151,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":267,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":268,"author":{"gitId":"dayn-1"},"content":"    public void parseAppointmentType_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":269,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":270,"author":{"gitId":"dayn-1"},"content":"                .parseAppointmentType((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":271,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":272,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":273,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":274,"author":{"gitId":"dayn-1"},"content":"    public void parseAppointmentType_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":275,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":276,"author":{"gitId":"dayn-1"},"content":"                .parseAppointmentType(INVALID_APPOINTMENT_TYPE));","lastModifiedDate":"2024-03-24"},{"lineNumber":277,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":278,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":279,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":280,"author":{"gitId":"dayn-1"},"content":"    public void parseAppointmentType_validValueWithoutWhitespace_returnsAppointmentType()","lastModifiedDate":"2024-03-24"},{"lineNumber":281,"author":{"gitId":"dayn-1"},"content":"            throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":282,"author":{"gitId":"dayn-1"},"content":"        AppointmentType expectedAppointmentType \u003d new AppointmentType(VALID_APPOINTMENT_TYPE);","lastModifiedDate":"2024-03-24"},{"lineNumber":283,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedAppointmentType, ParserUtil.parseAppointmentType(VALID_APPOINTMENT_TYPE));","lastModifiedDate":"2024-03-24"},{"lineNumber":284,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":285,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":286,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":287,"author":{"gitId":"dayn-1"},"content":"    public void parseAppointmentType_validValueWithWhitespace_returnsTrimmedAppointmentType()","lastModifiedDate":"2024-03-24"},{"lineNumber":288,"author":{"gitId":"dayn-1"},"content":"            throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":289,"author":{"gitId":"dayn-1"},"content":"        String apptTypeWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_TYPE + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":290,"author":{"gitId":"dayn-1"},"content":"        AppointmentType expectedAppointmentType \u003d new AppointmentType(VALID_APPOINTMENT_TYPE);","lastModifiedDate":"2024-03-24"},{"lineNumber":291,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedAppointmentType, ParserUtil.parseAppointmentType(apptTypeWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":292,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":293,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":294,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":295,"author":{"gitId":"dayn-1"},"content":"    public void parseNote_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":296,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNote((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":297,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":298,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":299,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":300,"author":{"gitId":"dayn-1"},"content":"    public void parseNote_validValueWithoutWhitespace_returnsNote() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":301,"author":{"gitId":"dayn-1"},"content":"        Note expectedNote \u003d new Note(VALID_APPOINTMENT_NOTE);","lastModifiedDate":"2024-03-24"},{"lineNumber":302,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedNote, ParserUtil.parseNote(VALID_APPOINTMENT_NOTE));","lastModifiedDate":"2024-03-24"},{"lineNumber":303,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":304,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":305,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":306,"author":{"gitId":"dayn-1"},"content":"    public void parseNote_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":307,"author":{"gitId":"dayn-1"},"content":"        String noteWithWhitespace \u003d WHITESPACE + VALID_APPOINTMENT_NOTE + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":308,"author":{"gitId":"dayn-1"},"content":"        Note expectedNote \u003d new Note(VALID_APPOINTMENT_NOTE);","lastModifiedDate":"2024-03-24"},{"lineNumber":309,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedNote, ParserUtil.parseNote(noteWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":310,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":311,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":312,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":313,"author":{"gitId":"dayn-1"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":314,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":315,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":316,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":317,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":318,"author":{"gitId":"dayn-1"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":319,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2024-03-24"},{"lineNumber":320,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":321,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":322,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":323,"author":{"gitId":"dayn-1"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":324,"author":{"gitId":"dayn-1"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2024-03-24"},{"lineNumber":325,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2024-03-24"},{"lineNumber":326,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":327,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":328,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":329,"author":{"gitId":"dayn-1"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":330,"author":{"gitId":"dayn-1"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":331,"author":{"gitId":"dayn-1"},"content":"        Time expectedTime \u003d new Time(VALID_TIME);","lastModifiedDate":"2024-03-24"},{"lineNumber":332,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(timeWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":333,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":334,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":335,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":336,"author":{"gitId":"dayn-1"},"content":"    public void parseTimePeriod_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":337,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":338,"author":{"gitId":"dayn-1"},"content":"                .parseTimePeriod((String) null, (String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":339,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":340,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":341,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":342,"author":{"gitId":"dayn-1"},"content":"    public void parseTimePeriod_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":343,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2024-03-24"},{"lineNumber":344,"author":{"gitId":"dayn-1"},"content":"                .parseTimePeriod(INVALID_TIME_PERIOD_START, INVALID_TIME_PERIOD_END));","lastModifiedDate":"2024-03-24"},{"lineNumber":345,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":346,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":347,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":348,"author":{"gitId":"dayn-1"},"content":"    public void parseTimePeriod_validValueWithoutWhitespace_returnsTimePeriod() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":349,"author":{"gitId":"dayn-1"},"content":"        TimePeriod expectedTimePeriod \u003d new TimePeriod(new Time(VALID_TIME_PERIOD_START),","lastModifiedDate":"2024-03-24"},{"lineNumber":350,"author":{"gitId":"dayn-1"},"content":"                new Time(VALID_TIME_PERIOD_END));","lastModifiedDate":"2024-03-24"},{"lineNumber":351,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedTimePeriod,","lastModifiedDate":"2024-03-24"},{"lineNumber":352,"author":{"gitId":"dayn-1"},"content":"                ParserUtil.parseTimePeriod(VALID_TIME_PERIOD_START, VALID_TIME_PERIOD_END));","lastModifiedDate":"2024-03-24"},{"lineNumber":353,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":354,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":355,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":356,"author":{"gitId":"dayn-1"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":357,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2024-03-24"},{"lineNumber":358,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":359,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":360,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":361,"author":{"gitId":"dayn-1"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2024-03-24"},{"lineNumber":362,"author":{"gitId":"dayn-1"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2024-03-24"},{"lineNumber":363,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":364,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":365,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":366,"author":{"gitId":"dayn-1"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":367,"author":{"gitId":"dayn-1"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2024-03-24"},{"lineNumber":368,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2024-03-24"},{"lineNumber":369,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":370,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":371,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-24"},{"lineNumber":372,"author":{"gitId":"dayn-1"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2024-03-24"},{"lineNumber":373,"author":{"gitId":"dayn-1"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2024-03-24"},{"lineNumber":374,"author":{"gitId":"dayn-1"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2024-03-24"},{"lineNumber":375,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2024-03-24"},{"lineNumber":376,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-24"},{"lineNumber":377,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-24"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"dayn-1":182,"-":196}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAddressBookWithAppointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        assertEquals(Collections.emptyList(), addressBook.getAppointmentList());","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(Collections.emptyList(), addressBook.getAppointmentViewList());","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        AddressBook newData \u003d getTypicalAddressBookWithAppointments();","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        List\u003cAppointment\u003e newAppointments \u003d List.of();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        List\u003cAppointmentView\u003e newAppointmentViews \u003d List.of();","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, newAppointments, newAppointmentViews);","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"    public void hasPerson_personWithNricInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        Nric aliceNric \u003d ALICE.getNric();","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"        assertTrue(addressBook.hasPersonWithNric(aliceNric));","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"limrik"},"content":"    public void getPersonWithNric_personWithNricInAddressBook_returnsPerson() {","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"limrik"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"limrik"},"content":"        Nric aliceNric \u003d ALICE.getNric();","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"        assertEquals(ALICE, addressBook.getPersonWithNric(aliceNric));","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    public void hasAppointment_withAppointmentInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"dayn-1"},"content":"        addressBook.addAppointment(ALICE_APPT);","lastModifiedDate":"2024-03-16"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        assertTrue(addressBook.hasAppointment(ALICE_APPT));","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"    public void hasAppointment_withAppointmentWithSameDetailsInAddressBook_returnsTrue() {","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"        addressBook.addAppointment(ALICE_APPT);","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        Appointment editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"                .withAppointmentType(\"Blood test\").withNote(\"routine checks\")","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"                .build();","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"        assertTrue(addressBook.hasAppointment(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expected \u003d AddressBook.class.getCanonicalName() + \"{persons\u003d\" + addressBook.getPersonList() + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expected, addressBook.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"        private final ObservableList\u003cAppointment\u003e appointments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"xuelinglow"},"content":"        private final ObservableList\u003cAppointmentView\u003e appointmentView \u003d FXCollections.observableArrayList();","lastModifiedDate":"2024-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"xuelinglow"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cAppointment\u003e appointments,","lastModifiedDate":"2024-03-21"},{"lineNumber":141,"author":{"gitId":"xuelinglow"},"content":"            Collection\u003cAppointmentView\u003e appointmentsView) {","lastModifiedDate":"2024-03-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"dayn-1"},"content":"            this.appointments.setAll(appointments);","lastModifiedDate":"2024-03-16"},{"lineNumber":144,"author":{"gitId":"xuelinglow"},"content":"            this.appointmentView.setAll(appointmentView);","lastModifiedDate":"2024-03-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":152,"author":{"gitId":"dayn-1"},"content":"        @Override","lastModifiedDate":"2024-03-13"},{"lineNumber":153,"author":{"gitId":"dayn-1"},"content":"        public ObservableList\u003cAppointment\u003e getAppointmentList() {","lastModifiedDate":"2024-03-13"},{"lineNumber":154,"author":{"gitId":"dayn-1"},"content":"            return appointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":155,"author":{"gitId":"dayn-1"},"content":"        }","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":157,"author":{"gitId":"xuelinglow"},"content":"        @Override","lastModifiedDate":"2024-03-21"},{"lineNumber":158,"author":{"gitId":"xuelinglow"},"content":"        public ObservableList\u003cAppointmentView\u003e getAppointmentViewList() {","lastModifiedDate":"2024-03-21"},{"lineNumber":159,"author":{"gitId":"xuelinglow"},"content":"            return appointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":160,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-21"},{"lineNumber":161,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"xuelinglow":14,"dayn-1":38,"limrik":7,"-":104}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":97,"author":{"gitId":"xuelinglow"},"content":"    public void getFilteredAppointmentViewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":98,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"            modelManager.getFilteredAppointmentViewList().remove(0));","lastModifiedDate":"2024-03-21"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-26"},{"lineNumber":103,"author":{"gitId":"limrik"},"content":"    public void getFilteredAppointmentDayViewList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-26"},{"lineNumber":104,"author":{"gitId":"limrik"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2024-03-26"},{"lineNumber":105,"author":{"gitId":"limrik"},"content":"            modelManager.getFilteredAppointmentDayViewList().remove(0));","lastModifiedDate":"2024-03-26"},{"lineNumber":106,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-26"},{"lineNumber":107,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"xuelinglow":6,"limrik":6,"-":132}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cliftonchee"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"cliftonchee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NOTE_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-26"},{"lineNumber":14,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-26"},{"lineNumber":15,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.ALICE_APPT_VIEW;","lastModifiedDate":"2024-03-26"},{"lineNumber":18,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.AMY_APPT_VIEW;","lastModifiedDate":"2024-03-26"},{"lineNumber":19,"author":{"gitId":"cliftonchee"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.BOB_APPT_VIEW;","lastModifiedDate":"2024-03-26"},{"lineNumber":20,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"cliftonchee"},"content":"import java.util.Optional;","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"cliftonchee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"cliftonchee"},"content":"import seedu.address.testutil.AppointmentViewBuilder;","lastModifiedDate":"2024-03-26"},{"lineNumber":29,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"cliftonchee"},"content":"public class AppointmentContainsKeywordsPredicateTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"cliftonchee"},"content":"    public void test_nricFilterOnly_matchesNric() {","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.of(new Nric(VALID_NRIC_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(), Optional.empty());","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":39,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":40,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":41,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":42,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":43,"author":{"gitId":"cliftonchee"},"content":"    public void test_dateFilterOnly_matchesDate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":45,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(VALID_APPOINTMENT_DATE_AMY)), Optional.empty());","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":48,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":49,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":50,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":51,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":52,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":53,"author":{"gitId":"cliftonchee"},"content":"    public void test_timeFilterOnly_matchesGreaterThanOrEqualTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":55,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.empty(), Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(VALID_APPOINTMENT_START_TIME_BOB)));","lastModifiedDate":"2024-03-25"},{"lineNumber":57,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":58,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(BOB_APPT_VIEW)); // 15:00","lastModifiedDate":"2024-03-26"},{"lineNumber":59,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(ALICE_APPT_VIEW)); // 16:00","lastModifiedDate":"2024-03-26"},{"lineNumber":60,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":61,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":62,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"cliftonchee"},"content":"    public void test_timeFilterOnly_matchesLessThanTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":64,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":65,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.empty(), Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(VALID_APPOINTMENT_START_TIME_BOB)));","lastModifiedDate":"2024-03-25"},{"lineNumber":67,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":68,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(BOB_APPT_VIEW)); // 15:00","lastModifiedDate":"2024-03-26"},{"lineNumber":69,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(AMY_APPT_VIEW)); // 11:00","lastModifiedDate":"2024-03-26"},{"lineNumber":70,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":72,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":73,"author":{"gitId":"cliftonchee"},"content":"    public void test_nricAndDateFilter_matchesNricAndDate() {","lastModifiedDate":"2024-03-25"},{"lineNumber":74,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":75,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.of(new Nric(VALID_NRIC_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":76,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(VALID_APPOINTMENT_DATE_AMY)), Optional.empty());","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":78,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":79,"author":{"gitId":"cliftonchee"},"content":"        // Test for same date and same NRIC but different time","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":81,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":82,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":83,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":84,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":85,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":86,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":87,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":88,"author":{"gitId":"cliftonchee"},"content":"        // Test for differing dates but same NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":89,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":90,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":91,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":92,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":93,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":94,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":95,"author":{"gitId":"cliftonchee"},"content":"        // Test for differing NRIC but same date","lastModifiedDate":"2024-03-25"},{"lineNumber":96,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":97,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_BOB).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":98,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_BOB).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":99,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":102,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":103,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":104,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"cliftonchee"},"content":"    public void test_matchesDateAndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":106,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":107,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.empty(),","lastModifiedDate":"2024-03-25"},{"lineNumber":108,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(VALID_APPOINTMENT_DATE_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":109,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(VALID_APPOINTMENT_START_TIME_AMY)));","lastModifiedDate":"2024-03-25"},{"lineNumber":110,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":112,"author":{"gitId":"cliftonchee"},"content":"        // Test for same date and time but different NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":114,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":115,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_BOB).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":119,"author":{"gitId":"cliftonchee"},"content":"        // Test for same date but different time (but time \u003e\u003d filter time)","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":121,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":122,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":125,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":126,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":127,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":128,"author":{"gitId":"cliftonchee"},"content":"        // Test for different date and time but same NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":129,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":130,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":131,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":132,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":133,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":134,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":135,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":136,"author":{"gitId":"cliftonchee"},"content":"        // Test for different date or time but same NRIC","lastModifiedDate":"2024-03-25"},{"lineNumber":137,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":138,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":139,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":140,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":141,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":142,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":143,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"cliftonchee"},"content":"    public void test_matchesNricAndTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.of(new Nric(VALID_NRIC_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"cliftonchee"},"content":"                        Optional.empty(), Optional.of(new Time(VALID_APPOINTMENT_START_TIME_AMY)));","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":152,"author":{"gitId":"cliftonchee"},"content":"        // Test for same NRIC and time but different date","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":154,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":155,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":158,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":159,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":160,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":161,"author":{"gitId":"cliftonchee"},"content":"        // Test for different NRIC but same date and time","lastModifiedDate":"2024-03-25"},{"lineNumber":162,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":163,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_BOB).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":164,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_BOB).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":165,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":166,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":167,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":168,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":169,"author":{"gitId":"cliftonchee"},"content":"        // Test for different NRIC, date, and time","lastModifiedDate":"2024-03-25"},{"lineNumber":170,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":171,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_BOB).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":172,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_BOB).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":173,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":174,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":175,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":176,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":177,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":178,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":179,"author":{"gitId":"cliftonchee"},"content":"    public void test_matchesNricDateTime() {","lastModifiedDate":"2024-03-25"},{"lineNumber":180,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2024-03-25"},{"lineNumber":181,"author":{"gitId":"cliftonchee"},"content":"                new AppointmentContainsKeywordsPredicate(Optional.of(new Nric(VALID_NRIC_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":182,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Date(VALID_APPOINTMENT_DATE_AMY)),","lastModifiedDate":"2024-03-25"},{"lineNumber":183,"author":{"gitId":"cliftonchee"},"content":"                        Optional.of(new Time(VALID_APPOINTMENT_START_TIME_AMY)));","lastModifiedDate":"2024-03-25"},{"lineNumber":184,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":185,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(AMY_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":186,"author":{"gitId":"cliftonchee"},"content":"        // Test for same NRIC and date but different time (time \u003e\u003d filterTime)","lastModifiedDate":"2024-03-25"},{"lineNumber":187,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":188,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":189,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":190,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":191,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":192,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":193,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":194,"author":{"gitId":"cliftonchee"},"content":"        // Test for same NRIC but different date and time","lastModifiedDate":"2024-03-25"},{"lineNumber":195,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(new AppointmentViewBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":196,"author":{"gitId":"cliftonchee"},"content":"                .withName(VALID_NAME_AMY).withAppointment(new AppointmentBuilder()","lastModifiedDate":"2024-03-26"},{"lineNumber":197,"author":{"gitId":"cliftonchee"},"content":"                .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":198,"author":{"gitId":"cliftonchee"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-25"},{"lineNumber":199,"author":{"gitId":"cliftonchee"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-25"},{"lineNumber":200,"author":{"gitId":"cliftonchee"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_AMY).build()).build()));","lastModifiedDate":"2024-03-26"},{"lineNumber":201,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":202,"author":{"gitId":"cliftonchee"},"content":"        // Test for different NRIC, date, and time","lastModifiedDate":"2024-03-25"},{"lineNumber":203,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate.test(BOB_APPT_VIEW));","lastModifiedDate":"2024-03-26"},{"lineNumber":204,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":205,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":206,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":207,"author":{"gitId":"cliftonchee"},"content":"    public void testEquals_sameInstance_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":208,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":209,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":210,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":211,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":212,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":213,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate.equals(predicate)); // Same instance","lastModifiedDate":"2024-03-25"},{"lineNumber":214,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":215,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":216,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":217,"author":{"gitId":"cliftonchee"},"content":"    public void testEquals_equalInstances_returnsTrue() {","lastModifiedDate":"2024-03-25"},{"lineNumber":218,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate1 \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":219,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":220,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":221,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":222,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":223,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate2 \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":224,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":225,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":226,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":227,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":228,"author":{"gitId":"cliftonchee"},"content":"        assertTrue(predicate1.equals(predicate2)); // Equal instances","lastModifiedDate":"2024-03-25"},{"lineNumber":229,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":230,"author":{"gitId":"cliftonchee"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":231,"author":{"gitId":"cliftonchee"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":232,"author":{"gitId":"cliftonchee"},"content":"    public void testEquals_differentInstances_returnsFalse() {","lastModifiedDate":"2024-03-25"},{"lineNumber":233,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate1 \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":234,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"S1234567A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":235,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-31\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":236,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"10:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":237,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":238,"author":{"gitId":"cliftonchee"},"content":"        AppointmentContainsKeywordsPredicate predicate2 \u003d new AppointmentContainsKeywordsPredicate(","lastModifiedDate":"2024-03-25"},{"lineNumber":239,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Nric(\"T0123456A\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":240,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Date(\"2024-12-30\")),","lastModifiedDate":"2024-03-25"},{"lineNumber":241,"author":{"gitId":"cliftonchee"},"content":"                Optional.of(new Time(\"09:00\"))","lastModifiedDate":"2024-03-25"},{"lineNumber":242,"author":{"gitId":"cliftonchee"},"content":"        );","lastModifiedDate":"2024-03-25"},{"lineNumber":243,"author":{"gitId":"cliftonchee"},"content":"        assertFalse(predicate1.equals(predicate2)); // Different instances","lastModifiedDate":"2024-03-25"},{"lineNumber":244,"author":{"gitId":"cliftonchee"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":245,"author":{"gitId":"cliftonchee"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"cliftonchee":245}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_1;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Collections;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.exceptions.AppointmentNotFoundException;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.exceptions.DuplicateAppointmentException;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"public class AppointmentListTest {","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":"    private final AppointmentList appointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"    public void contains_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.contains(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"    public void contains_appointmentNotInList_returnsFalse() {","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"ThatGirlJam"},"content":"        assertFalse(appointmentList.contains(ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"    public void contains_appointmentInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":40,"author":{"gitId":"ThatGirlJam"},"content":"        assertTrue(appointmentList.contains(ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":41,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"    public void contains_appointmentWithSameIdentityAndTimeInList_returnsTrue() {","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"ThatGirlJam"},"content":"        Appointment editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-18"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"                .withAppointmentType(\"Throat Infection\").withNote(\"called in\")","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"                .build();","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"        assertTrue(appointmentList.contains(editedAliceAppt));","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"ThatGirlJam"},"content":"    public void add_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.add(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"ThatGirlJam"},"content":"    public void add_duplicateAppointment_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e appointmentList.add(ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_nullTargetAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.setAppointment(null, ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_nullEditedAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"                .setAppointment(ALICE_APPT, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_targetAppointmentNotInList_throwsAppointmentNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e appointmentList","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"                .setAppointment(ALICE_APPT, ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":79,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":80,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":81,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_editedAppointmentIsSameAppointment_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":82,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":83,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.setAppointment(ALICE_APPT, ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":84,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":85,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":86,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":87,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":88,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":89,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":90,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_editedAppointmentHasSameIdentity_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":91,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":92,"author":{"gitId":"ThatGirlJam"},"content":"        Appointment editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-18"},{"lineNumber":93,"author":{"gitId":"ThatGirlJam"},"content":"                .withAppointmentType(\"Knee Injury\").withNote(\"Fell down\")","lastModifiedDate":"2024-03-18"},{"lineNumber":94,"author":{"gitId":"ThatGirlJam"},"content":"                .build();","lastModifiedDate":"2024-03-18"},{"lineNumber":95,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.setAppointment(ALICE_APPT, editedAliceAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":96,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":97,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(editedAliceAppt);","lastModifiedDate":"2024-03-18"},{"lineNumber":98,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":99,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":100,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":101,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":102,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_editedAppointmentHasDifferentIdentity_success() {","lastModifiedDate":"2024-03-18"},{"lineNumber":103,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":104,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.setAppointment(ALICE_APPT, BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":105,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":106,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":107,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":108,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":109,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":110,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":111,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointment_editedAppointmentHasNonUniqueIdentity_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":112,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":113,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":114,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e appointmentList","lastModifiedDate":"2024-03-18"},{"lineNumber":115,"author":{"gitId":"ThatGirlJam"},"content":"                .setAppointment(ALICE_APPT, BOB_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":116,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":117,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":118,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":119,"author":{"gitId":"ThatGirlJam"},"content":"    public void remove_nullAppointment_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":120,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.remove(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":121,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":122,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":123,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":124,"author":{"gitId":"ThatGirlJam"},"content":"    public void remove_appointmentDoesNotExist_throwsAppointmentNotFoundException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":125,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e appointmentList.remove(ALICE_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":126,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":127,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":128,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":129,"author":{"gitId":"ThatGirlJam"},"content":"    public void remove_existingAppointment_removesAppointment() {","lastModifiedDate":"2024-03-18"},{"lineNumber":130,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":131,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.remove(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":132,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":133,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":134,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":135,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":136,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":137,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments_nullAppointmentList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":138,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.setAppointments((AppointmentList) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":139,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":140,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":141,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":142,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments_appointmentList_replacesOwnListWithProvidedAppointmentList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":143,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT_1);","lastModifiedDate":"2024-03-18"},{"lineNumber":144,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":145,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":146,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.setAppointments(expectedAppointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":147,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":148,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":149,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":150,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":151,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":152,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.setAppointments((List\u003cAppointment\u003e) null));","lastModifiedDate":"2024-03-18"},{"lineNumber":153,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":154,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":155,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":156,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2024-03-18"},{"lineNumber":157,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":158,"author":{"gitId":"ThatGirlJam"},"content":"        List\u003cAppointment\u003e listOfAppointments \u003d Collections.singletonList(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":159,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.setAppointments(listOfAppointments);","lastModifiedDate":"2024-03-18"},{"lineNumber":160,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":161,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":162,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":163,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":164,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":165,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":166,"author":{"gitId":"ThatGirlJam"},"content":"    public void setAppointments_listWithDuplicateAppointments_throwsDuplicateAppointmentException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"ThatGirlJam"},"content":"        List\u003cAppointment\u003e listWithDuplicateAppointments \u003d Arrays.asList(ALICE_APPT, ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":168,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(DuplicateAppointmentException.class, () -\u003e appointmentList","lastModifiedDate":"2024-03-18"},{"lineNumber":169,"author":{"gitId":"ThatGirlJam"},"content":"                .setAppointments(listWithDuplicateAppointments));","lastModifiedDate":"2024-03-18"},{"lineNumber":170,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":171,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":172,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":173,"author":{"gitId":"ThatGirlJam"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":174,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e appointmentList","lastModifiedDate":"2024-03-18"},{"lineNumber":175,"author":{"gitId":"ThatGirlJam"},"content":"                .asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-18"},{"lineNumber":176,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":177,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":178,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":179,"author":{"gitId":"ThatGirlJam"},"content":"    public void getMatchingAppointment_validInput_appointmentFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":180,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":181,"author":{"gitId":"ThatGirlJam"},"content":"        Nric nricToMatch \u003d ALICE_APPT.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":182,"author":{"gitId":"ThatGirlJam"},"content":"        Date dateToMatch \u003d ALICE_APPT.getDate();","lastModifiedDate":"2024-03-18"},{"lineNumber":183,"author":{"gitId":"ThatGirlJam"},"content":"        TimePeriod timePeriodToMatch \u003d ALICE_APPT.getTimePeriod();","lastModifiedDate":"2024-03-18"},{"lineNumber":184,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":185,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(ALICE_APPT, appointmentList.getMatchingAppointment(nricToMatch, dateToMatch, timePeriodToMatch));","lastModifiedDate":"2024-03-18"},{"lineNumber":186,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":187,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":188,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":189,"author":{"gitId":"ThatGirlJam"},"content":"    public void getMatchingAppointment_invalidInput_appointmentFound() {","lastModifiedDate":"2024-03-18"},{"lineNumber":190,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":191,"author":{"gitId":"ThatGirlJam"},"content":"        Nric nricToMatch \u003d ALICE_APPT_1.getNric();","lastModifiedDate":"2024-03-18"},{"lineNumber":192,"author":{"gitId":"ThatGirlJam"},"content":"        Date dateToMatch \u003d ALICE_APPT_1.getDate();","lastModifiedDate":"2024-03-18"},{"lineNumber":193,"author":{"gitId":"ThatGirlJam"},"content":"        TimePeriod timePeriodToMatch \u003d ALICE_APPT_1.getTimePeriod();","lastModifiedDate":"2024-03-18"},{"lineNumber":194,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":195,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(AppointmentNotFoundException.class, () -\u003e","lastModifiedDate":"2024-03-18"},{"lineNumber":196,"author":{"gitId":"ThatGirlJam"},"content":"                appointmentList.getMatchingAppointment(nricToMatch, dateToMatch, timePeriodToMatch));","lastModifiedDate":"2024-03-18"},{"lineNumber":197,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":198,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":199,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":200,"author":{"gitId":"ThatGirlJam"},"content":"    public void getMatchingAppointment_nullInput_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":201,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.getMatchingAppointment(null, null, null));","lastModifiedDate":"2024-03-18"},{"lineNumber":202,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":203,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":204,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":205,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric_validNric_appointmentsRemoved() {","lastModifiedDate":"2024-03-18"},{"lineNumber":206,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":207,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":208,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":209,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.deleteAppointmentsWithNric(ALICE_APPT.getNric());","lastModifiedDate":"2024-03-18"},{"lineNumber":210,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":211,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":212,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":213,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":214,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":215,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":216,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":217,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":218,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric_nricNotInList_noChange() {","lastModifiedDate":"2024-03-18"},{"lineNumber":219,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":220,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":221,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":222,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.deleteAppointmentsWithNric(ALICE_APPT.getNric());","lastModifiedDate":"2024-03-18"},{"lineNumber":223,"author":{"gitId":"ThatGirlJam"},"content":"        appointmentList.deleteAppointmentsWithNric(ALICE_APPT.getNric()); //to show use of nric that\u0027s not there","lastModifiedDate":"2024-03-18"},{"lineNumber":224,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":225,"author":{"gitId":"ThatGirlJam"},"content":"        AppointmentList expectedAppointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-18"},{"lineNumber":226,"author":{"gitId":"ThatGirlJam"},"content":"        expectedAppointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-18"},{"lineNumber":227,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":228,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(expectedAppointmentList, appointmentList);","lastModifiedDate":"2024-03-18"},{"lineNumber":229,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":230,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":231,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":232,"author":{"gitId":"ThatGirlJam"},"content":"    public void deleteAppointmentsWithNric_nullNric_throwsNullPointerException() {","lastModifiedDate":"2024-03-18"},{"lineNumber":233,"author":{"gitId":"ThatGirlJam"},"content":"        assertThrows(NullPointerException.class, () -\u003e appointmentList.deleteAppointmentsWithNric(null));","lastModifiedDate":"2024-03-18"},{"lineNumber":234,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":235,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":236,"author":{"gitId":"ThatGirlJam"},"content":"    @Test","lastModifiedDate":"2024-03-18"},{"lineNumber":237,"author":{"gitId":"ThatGirlJam"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-18"},{"lineNumber":238,"author":{"gitId":"ThatGirlJam"},"content":"        assertEquals(appointmentList.asUnmodifiableObservableList().toString(), appointmentList.toString());","lastModifiedDate":"2024-03-18"},{"lineNumber":239,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":240,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"},{"lineNumber":241,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"ThatGirlJam":241}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NOTE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_1;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_TRUE;","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.AppointmentBuilder;","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"public class AppointmentTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Appointment(null, null, null, null, null, null));","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    public void isSameAppointment() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        assertTrue(ALICE_APPT.isSameAppointment(ALICE_APPT));","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.isSameAppointment(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        // same nric, date and time, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        Appointment editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_BOB).withNote(VALID_APPOINTMENT_NOTE_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"                .build();","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        assertTrue(ALICE_APPT.isSameAppointment(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.isSameAppointment(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        // different date, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT).withDate(VALID_APPOINTMENT_DATE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.isSameAppointment(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        // different time period, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"                .build();","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.isSameAppointment(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        Appointment aliceApptCopy \u003d new AppointmentBuilder(ALICE_APPT).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        assertTrue(ALICE_APPT.equals(aliceApptCopy));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"        assertTrue(ALICE_APPT.equals(ALICE_APPT));","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(5));","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        Appointment editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"                .withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"                .withDate(VALID_APPOINTMENT_DATE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"        // different time period -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"                .withStartTime(VALID_APPOINTMENT_START_TIME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"                .withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"                .build();","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        // different appointment type -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"                .withAppointmentType(VALID_APPOINTMENT_TYPE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        // different note -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"        editedAliceAppt \u003d new AppointmentBuilder(ALICE_APPT)","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"                .withNote(VALID_APPOINTMENT_NOTE_BOB).build();","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        assertFalse(ALICE_APPT.equals(editedAliceAppt));","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":100,"author":{"gitId":"xuelinglow"},"content":"        // different mark -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":101,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT.equals(ALICE_APPT_TRUE));","lastModifiedDate":"2024-03-25"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        String expected \u003d Appointment.class.getCanonicalName()","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"                + \"{nric\u003d\" + ALICE_APPT_1.getNric()","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"                + \", date\u003d\" + ALICE_APPT_1.getDate()","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"                + \", timePeriod\u003d\" + ALICE_APPT_1.getTimePeriod()","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"                + \", appointmentType\u003d\" + ALICE_APPT_1.getAppointmentType()","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"xuelinglow"},"content":"                + \", note\u003d\" + ALICE_APPT_1.getNote()","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"xuelinglow"},"content":"                + \", mark\u003d\" + ALICE_APPT_1.getMark() + \"}\";","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expected, ALICE_APPT_1.toString());","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xuelinglow":7,"dayn-1":108}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentTypeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class AppointmentTypeTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentType(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public void constructor_invalidAppointmentTypeName_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        String invalidTypeName \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new AppointmentType(invalidTypeName));","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public void isValidAppointmentType() {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        // null appointment type","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppointmentType.isValidAppointmentType(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        // invalid appointment type","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        assertFalse(AppointmentType.isValidAppointmentType(\"\")); // empty string","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        assertFalse(AppointmentType.isValidAppointmentType(\"  \")); // blank spaces","lastModifiedDate":"2024-03-24"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        // valid appointment type","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        assertTrue(AppointmentType.isValidAppointmentType(\"X-ray\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertTrue(AppointmentType.isValidAppointmentType(\"Health Check Up\"));","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        AppointmentType appointmentType \u003d new AppointmentType(\"valid type\");","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        assertTrue(appointmentType.equals(new AppointmentType(\"valid type\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        assertTrue(appointmentType.equals(appointmentType));","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertFalse(appointmentType.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        assertFalse(appointmentType.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        assertFalse(appointmentType.equals(new AppointmentType(\"another valid type\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":57}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentViewListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-27"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-27"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2024-03-27"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import java.util.List;","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2024-03-27"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentViewListTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    private final AppointmentViewList appointmentListView \u003d new AppointmentViewList();","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_nullAppointmentList_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"            appointmentListView.setAppointmentViews(null, (AppointmentList) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_nullList_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"            appointmentListView.setAppointmentViews(null, (List\u003cAppointment\u003e) null));","lastModifiedDate":"2024-03-27"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_nonEmptyLists_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        AppointmentList appointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-27"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        personList.add(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-27"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setAppointmentViews(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(personList.asUnmodifiableObservableList().size(),","lastModifiedDate":"2024-03-27"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"            appointmentListView.asUnmodifiableObservableList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(appointmentList.asUnmodifiableObservableList().size(),","lastModifiedDate":"2024-03-27"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"            appointmentListView.asUnmodifiableObservableList().size());","lastModifiedDate":"2024-03-27"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"        //view list should not be empty","lastModifiedDate":"2024-03-27"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(appointmentListView.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_emptyPersonList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"        AppointmentList appointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-27"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        appointmentList.add(ALICE_APPT);","lastModifiedDate":"2024-03-27"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setAppointmentViews(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(appointmentListView.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_emptyAppointmentList_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"        AppointmentList appointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-27"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        personList.add(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setAppointmentViews(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(appointmentListView.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"    public void setAppointmentViews_noMatches_success() {","lastModifiedDate":"2024-03-27"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2024-03-27"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"        AppointmentList appointmentList \u003d new AppointmentList();","lastModifiedDate":"2024-03-27"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"        personList.add(ALICE);","lastModifiedDate":"2024-03-27"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"        appointmentList.add(BOB_APPT);","lastModifiedDate":"2024-03-27"},{"lineNumber":76,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":77,"author":{"gitId":"xuelinglow"},"content":"        appointmentListView.setAppointmentViews(personList, appointmentList);","lastModifiedDate":"2024-03-27"},{"lineNumber":78,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(appointmentListView.asUnmodifiableObservableList().isEmpty());","lastModifiedDate":"2024-03-27"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":81,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":82,"author":{"gitId":"xuelinglow"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2024-03-27"},{"lineNumber":83,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e appointmentListView","lastModifiedDate":"2024-03-27"},{"lineNumber":84,"author":{"gitId":"xuelinglow"},"content":"                .asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2024-03-27"},{"lineNumber":85,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":86,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":88,"author":{"gitId":"xuelinglow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":89,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(appointmentListView.asUnmodifiableObservableList().toString(), appointmentListView.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":90,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":91,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"},{"lineNumber":92,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":92}},{"path":"src/test/java/seedu/address/model/appointment/AppointmentViewTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.ALICE_APPT_VIEW;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointmentViews.ALICE_APPT_VIEW_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.testutil.AppointmentViewBuilder;","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentViewTest {","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AppointmentView(null, null));","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"    public void isSameAppointmentView() {","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(ALICE_APPT_VIEW.isSameAppointmentView(ALICE_APPT_VIEW));","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.isSameAppointmentView(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"        AppointmentView editedAliceApptView \u003d new AppointmentViewBuilder(ALICE_APPT_VIEW)","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"            .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.isSameAppointmentView(editedAliceApptView));","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        // different appointment, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        editedAliceApptView \u003d new AppointmentViewBuilder(ALICE_APPT_VIEW).withAppointment(BOB_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.isSameAppointmentView(editedAliceApptView));","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"    public void equals() {","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"        AppointmentView aliceApptCopyView \u003d new AppointmentViewBuilder(ALICE_APPT_VIEW).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(ALICE_APPT_VIEW.equals(aliceApptCopyView));","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(ALICE_APPT_VIEW.equals(ALICE_APPT_VIEW));","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.equals(null));","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.equals(5));","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        AppointmentView editedAliceApptView \u003d new AppointmentViewBuilder(ALICE_APPT_VIEW)","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.equals(editedAliceApptView));","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"        // different appointment -\u003e returns false","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        editedAliceApptView \u003d new AppointmentViewBuilder(ALICE_APPT_VIEW)","lastModifiedDate":"2024-03-21"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"                .withAppointment(BOB_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(ALICE_APPT_VIEW.equals(editedAliceApptView));","lastModifiedDate":"2024-03-21"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":66,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":67,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-21"},{"lineNumber":68,"author":{"gitId":"xuelinglow"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-21"},{"lineNumber":69,"author":{"gitId":"xuelinglow"},"content":"        String expected \u003d AppointmentView.class.getCanonicalName()","lastModifiedDate":"2024-03-21"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"                + \"{name\u003d\" + ALICE_APPT_VIEW_1.getName()","lastModifiedDate":"2024-03-21"},{"lineNumber":71,"author":{"gitId":"xuelinglow"},"content":"                + \", appointment\u003d\" + ALICE_APPT_VIEW_1.getAppointment() + \"}\";","lastModifiedDate":"2024-03-21"},{"lineNumber":72,"author":{"gitId":"xuelinglow"},"content":"        assertEquals(expected, ALICE_APPT_VIEW_1.toString());","lastModifiedDate":"2024-03-21"},{"lineNumber":73,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":74,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":75,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":75}},{"path":"src/test/java/seedu/address/model/appointment/MarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-25"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-25"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"public class MarkTest {","lastModifiedDate":"2024-03-25"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"    public void validIsMarked() {","lastModifiedDate":"2024-03-25"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"        Mark marked \u003d new Mark(true);","lastModifiedDate":"2024-03-25"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(marked.isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"        Mark unmarked \u003d new Mark(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(unmarked.isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    public void equals() {","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"        Mark mark \u003d new Mark(false);","lastModifiedDate":"2024-03-25"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(mark.equals(new Mark(false)));","lastModifiedDate":"2024-03-25"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-25"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"        assertTrue(mark.equals(mark));","lastModifiedDate":"2024-03-25"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(mark.equals(null));","lastModifiedDate":"2024-03-25"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(mark.equals(5.0f));","lastModifiedDate":"2024-03-25"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        assertFalse(mark.equals(new Mark(true)));","lastModifiedDate":"2024-03-25"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-25"}],"authorContributionMap":{"xuelinglow":38}},{"path":"src/test/java/seedu/address/model/appointment/NoteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class NoteTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Note(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        Note note \u003d new Note(\"valid note\");","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"        assertTrue(note.equals(new Note(\"valid note\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        assertTrue(note.equals(note));","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        assertFalse(note.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        assertFalse(note.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        assertFalse(note.equals(new Note(\"different note\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":35}},{"path":"src/test/java/seedu/address/model/appointment/TimePeriodTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class TimePeriodTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        Time time \u003d new Time(\"10:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TimePeriod(time, null));","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TimePeriod(null, time));","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public void constructor_invalidTimePeriod_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"        Time startTime \u003d new Time(\"10:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"        Time endTime \u003d new Time(\"09:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TimePeriod(startTime, endTime));","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    public void isValidTimePeriod() {","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        Time time \u003d new Time(\"10:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        // null time","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimePeriod.isValidTimePeriod(time, null));","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimePeriod.isValidTimePeriod(null, time));","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e TimePeriod.isValidTimePeriod(null, null));","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertFalse(TimePeriod.isValidTimePeriod(new Time(\"12:00\"), new Time(\"12:00\"))); // duration 0","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        assertFalse(TimePeriod.isValidTimePeriod(new Time(\"12:01\"), new Time(\"12:00\"))); // start after end","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        assertFalse(TimePeriod.isValidTimePeriod(new Time(\"23:59\"), new Time(\"00:01\"))); // start after end","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        // Valid time period","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        assertTrue(TimePeriod.isValidTimePeriod(new Time(\"11:00\"), new Time(\"12:00\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        assertTrue(TimePeriod.isValidTimePeriod(new Time(\"09:00\"), new Time(\"09:01\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        Time startTime \u003d new Time(\"12:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        Time endTime \u003d new Time(\"13:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        TimePeriod timePeriod \u003d new TimePeriod(startTime, endTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        assertTrue(timePeriod.equals(new TimePeriod(new Time(\"12:00\"), new Time(\"13:00\"))));","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        assertTrue(timePeriod.equals(timePeriod));","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        assertFalse(timePeriod.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        assertFalse(timePeriod.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        assertFalse(timePeriod.equals(new TimePeriod(new Time(\"12:30\"), new Time(\"13:00\"))));","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":64}},{"path":"src/test/java/seedu/address/model/appointment/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"public class TimeTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    public void isValidTime() {","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"        // null time","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e Time.isValidTime(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        // blank time","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"\")); // empty string","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\" \")); // spaces only","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"        // missing parts","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\":00\")); // missing HH part","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:\")); // missing mm part","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"1200\")); // missing \u0027:\u0027 symbol","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        // invalid parts","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"24:00\")); // invalid HH part","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"1200:00\")); // invalid HH part","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"012:00\")); // invalid HH part","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:60\")); // invalid mm part","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:555\")); // invalid mm part","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:0\")); // invalid mm part","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12/50\")); // invalid delimiter","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12-50\")); // invalid delimiter","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12::50\")); // invalid delimiter","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:50:22\")); // ss given","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\" 12:50\")); // leading space","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"        assertFalse(Time.isValidTime(\"12:50 \")); // trailing space","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        // valid time","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Time.isValidTime(\"23:59\")); // 24-hour clock","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Time.isValidTime(\"11:59\")); // 24-hour clock","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        assertTrue(Time.isValidTime(\"00:00\")); // 24-hour clock","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        Time time \u003d new Time(\"12:00\");","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        assertTrue(time.equals(new Time(\"12:00\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        assertTrue(time.equals(time));","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        assertFalse(time.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        assertFalse(time.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        assertFalse(time.equals(new Time(\"00:00\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"dayn-1":75}},{"path":"src/test/java/seedu/address/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import java.time.LocalDate;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateOfBirth(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    public void constructor_invalidDateOfBirth_throwsDateTimeParseException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"        String invalidDob \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DateOfBirth(invalidDob));","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    public void isValidDateOfBirth() {","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        // null dob","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidDateOfBirth(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        // invalid dob","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        assertFalse(DateOfBirth.isValidDateOfBirth(LocalDate.now().plusDays(1).toString())); // Tomorrow","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        // Test dob","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        assertTrue(DateOfBirth.isValidDateOfBirth(LocalDate.now().minusDays(1).toString())); // Yesterday","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        DateOfBirth dob \u003d new DateOfBirth(\"2001-01-01\");","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        assertTrue(dob.equals(new DateOfBirth(\"2001-01-01\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"        assertTrue(dob.equals(dob));","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"        assertFalse(dob.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        assertFalse(dob.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"        assertFalse(dob.equals(new DateOfBirth(\"2001-01-02\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"limrik":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        // part of name","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"ali\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        // Matches but not at the start","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"lice\"));","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d List.of(\"keyword1\", \"keyword2\");","lastModifiedDate":"2019-02-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(keywords);","lastModifiedDate":"2019-02-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expected \u003d NameContainsKeywordsPredicate.class.getCanonicalName() + \"{keywords\u003d\" + keywords + \"}\";","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"dayn-1":10,"-":84}},{"path":"src/test/java/seedu/address/model/person/NricContainsMatchPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-23"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-23"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-23"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-23"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-23"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-23"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2024-03-23"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"public class NricContainsMatchPredicateTest {","lastModifiedDate":"2024-03-23"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"    public void equals() {","lastModifiedDate":"2024-03-23"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"        String firstPredicateKeyword \u003d \"first\";","lastModifiedDate":"2024-03-23"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"        String secondPredicateKeyword \u003d \"second\";","lastModifiedDate":"2024-03-23"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate firstPredicate \u003d new NricContainsMatchPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-23"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate secondPredicate \u003d new NricContainsMatchPredicate(secondPredicateKeyword);","lastModifiedDate":"2024-03-23"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2024-03-23"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-23"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate firstPredicateCopy \u003d new NricContainsMatchPredicate(firstPredicateKeyword);","lastModifiedDate":"2024-03-23"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2024-03-23"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2024-03-23"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2024-03-23"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2024-03-23"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"    public void test_nricContainsKeyword_returnsTrue() {","lastModifiedDate":"2024-03-23"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        // Matches part of start of name","lastModifiedDate":"2024-03-23"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate predicate \u003d new NricContainsMatchPredicate(\"T012\");","lastModifiedDate":"2024-03-23"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"        // Matches name completely","lastModifiedDate":"2024-03-23"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NricContainsMatchPredicate(\"T0123456A\");","lastModifiedDate":"2024-03-23"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"        // Mixed-case keywords","lastModifiedDate":"2024-03-23"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NricContainsMatchPredicate(\"t01\");","lastModifiedDate":"2024-03-23"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"    public void test_nricDoesNotContainKeyword_returnsFalse() {","lastModifiedDate":"2024-03-23"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"        // Non-matching keyword","lastModifiedDate":"2024-03-23"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate predicate \u003d new NricContainsMatchPredicate(\"T0123456B\");","lastModifiedDate":"2024-03-23"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        // Keywords match name, but does not match nric","lastModifiedDate":"2024-03-23"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NricContainsMatchPredicate(\"Alice\");","lastModifiedDate":"2024-03-23"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\")","lastModifiedDate":"2024-03-23"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"                .withNric(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"        // Matches but keyword contains more words","lastModifiedDate":"2024-03-23"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"        predicate \u003d new NricContainsMatchPredicate(\"T0123456A1\");","lastModifiedDate":"2024-03-23"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"        assertFalse(predicate.test(new PersonBuilder().withNric(\"T0123456A\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"    public void test_keywordNullOrEmpty_throwsException() {","lastModifiedDate":"2024-03-23"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        // Empty keyword","lastModifiedDate":"2024-03-23"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate predicate \u003d new NricContainsMatchPredicate(\"\");","lastModifiedDate":"2024-03-23"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e predicate","lastModifiedDate":"2024-03-23"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"                .test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2024-03-23"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NricContainsMatchPredicate(null));","lastModifiedDate":"2024-03-23"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-23"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"    public void toStringMethod() {","lastModifiedDate":"2024-03-23"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"        String keyword \u003d \"keyword1\";","lastModifiedDate":"2024-03-23"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"        NricContainsMatchPredicate predicate \u003d new NricContainsMatchPredicate(\"keyword1\");","lastModifiedDate":"2024-03-23"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-23"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"        String expected \u003d NricContainsMatchPredicate.class.getCanonicalName() + \"{nricPrefixToMatch\u003d\" + keyword + \"}\";","lastModifiedDate":"2024-03-23"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"        assertEquals(expected, predicate.toString());","lastModifiedDate":"2024-03-23"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-23"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-23"}],"authorContributionMap":{"dayn-1":89}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.model.person;","lastModifiedDate":"2024-03-13"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-13"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"public class NricTest {","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2024-03-13"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    public void isValidNric() {","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"        // null nric","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"        // blank nric","lastModifiedDate":"2024-03-13"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2024-03-13"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        // missing parts","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"01234567A\")); // missing first alphabet","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"T01234567\")); // missing last alphabet","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        // invalid parts","lastModifiedDate":"2024-03-13"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"T01234567@\")); // \"@\u0027 invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"@0123456A\")); // \"@\u0027 invalid","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"T012345A\")); // missing number","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"T01234567A\")); // extra number","lastModifiedDate":"2024-03-13"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"TT0123456A\")); // extra first alphabet","lastModifiedDate":"2024-03-13"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        assertFalse(Nric.isValidNric(\"T0123456AA\")); // extra last alphabet","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"        // valid nric","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        assertTrue(Nric.isValidNric(\"T0123456A\"));","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"limrik"},"content":"    public void equals() {","lastModifiedDate":"2024-03-13"},{"lineNumber":49,"author":{"gitId":"limrik"},"content":"        Nric nric \u003d new Nric(\"T0123456A\");","lastModifiedDate":"2024-03-13"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"        assertTrue(nric.equals(new Nric(\"T0123456A\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        assertTrue(nric.equals(nric));","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        assertFalse(nric.equals(null));","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"        assertFalse(nric.equals(5.0f));","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"        assertFalse(nric.equals(new Nric(\"T0123456B\")));","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-13"}],"authorContributionMap":{"limrik":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-02-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2024-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-23"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"        String expected \u003d Person.class.getCanonicalName() + \"{name\u003d\" + ALICE.getName() + \", nric\u003d\" + ALICE.getNric()","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"                + \", dob\u003d\" + ALICE.getDob() + \", phone\u003d\" + ALICE.getPhone()","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                + \", email\u003d\" + ALICE.getEmail() + \", address\u003d\" + ALICE.getAddress() + \", tags\u003d\" + ALICE.getTags() + \"}\";","lastModifiedDate":"2024-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertEquals(expected, ALICE.toString());","lastModifiedDate":"2019-02-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"dayn-1":6,"limrik":2,"-":85}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":166,"author":{"gitId":"limrik"},"content":"    public void getPersonWithNric_existingPerson_personReturned() {","lastModifiedDate":"2024-03-18"},{"lineNumber":167,"author":{"gitId":"limrik"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2024-03-16"},{"lineNumber":168,"author":{"gitId":"limrik"},"content":"        assertEquals(ALICE, uniquePersonList.getPersonWithNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":169,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":170,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":171,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":172,"author":{"gitId":"limrik"},"content":"    public void getPersonWithNric_invalidNric_throwsPersonNotFoundException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":173,"author":{"gitId":"limrik"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.getPersonWithNric(ALICE.getNric()));","lastModifiedDate":"2024-03-16"},{"lineNumber":174,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":175,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2019-02-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void toStringMethod() {","lastModifiedDate":"2019-02-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(uniquePersonList.asUnmodifiableObservableList().toString(), uniquePersonList.toString());","lastModifiedDate":"2019-02-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"limrik":11,"-":175}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    public void equals() {","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        Tag tag \u003d new Tag(\"Insulin\");","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"        assertTrue(tag.equals(new Tag(\"Insulin\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"        // null -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"limrik"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        assertFalse(tag.equals(5.0f));","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"limrik"},"content":"        assertFalse(tag.equals(new Tag(\"Panadol\")));","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"limrik":21,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedAppointmentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.storage;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2024-03-25"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.storage.JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"public class JsonAdaptedAppointmentTest {","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_NRIC \u003d \"t01234567A\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_DATE \u003d \"2024-13-01\";","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME \u003d \"25:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME_PERIOD_START \u003d \"12:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TIME_PERIOD_END \u003d \"11:00\";","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    private static final String INVALID_TYPE \u003d \"\";","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_NRIC \u003d ALICE_APPT.getNric().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_DATE \u003d ALICE_APPT.getDate().toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"    private static final String VALID_START_TIME \u003d ALICE_APPT.getStartTime().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"    private static final String VALID_END_TIME \u003d ALICE_APPT.getEndTime().toString();","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_TYPE \u003d ALICE_APPT.getAppointmentType().typeName;","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    private static final String VALID_NOTE \u003d ALICE_APPT.getNote().note;","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"    private static final boolean VALID_MARK \u003d ALICE_APPT.getMark().isMarked;","lastModifiedDate":"2024-03-25"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_validAppointmentDetails_returnsAppointment() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(ALICE_APPT);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"        assertEquals(ALICE_APPT, appointment.toModelType());","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(INVALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(null, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"dayn-1"},"content":"                Nric.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, INVALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d seedu.address.commons.core.date.Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, null,","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"                Date.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidStartTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"xuelinglow"},"content":"                INVALID_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"xuelinglow"},"content":"                null, VALID_END_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"                Time.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidEndTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, INVALID_TIME, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidTimePeriod_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"xuelinglow"},"content":"                INVALID_TIME_PERIOD_START, INVALID_TIME_PERIOD_END, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d TimePeriod.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":111,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":112,"author":{"gitId":"xuelinglow"},"content":"                VALID_END_TIME, null, VALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(JsonAdaptedAppointment.MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":114,"author":{"gitId":"dayn-1"},"content":"                Time.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":115,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":116,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":117,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":118,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":119,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_invalidType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":120,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":121,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, INVALID_TYPE, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":122,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d AppointmentType.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-16"},{"lineNumber":123,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":126,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":127,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullType_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":128,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":129,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, null, VALID_NOTE, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":130,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":131,"author":{"gitId":"dayn-1"},"content":"                AppointmentType.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":132,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":133,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":134,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":135,"author":{"gitId":"dayn-1"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":136,"author":{"gitId":"dayn-1"},"content":"    public void toModelType_nullNote_throwsIllegalValueException() {","lastModifiedDate":"2024-03-16"},{"lineNumber":137,"author":{"gitId":"dayn-1"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-16"},{"lineNumber":138,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, null, VALID_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":139,"author":{"gitId":"dayn-1"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2024-03-16"},{"lineNumber":140,"author":{"gitId":"dayn-1"},"content":"                Note.class.getSimpleName());","lastModifiedDate":"2024-03-16"},{"lineNumber":141,"author":{"gitId":"dayn-1"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, appointment::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":142,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":143,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":144,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":145,"author":{"gitId":"xuelinglow"},"content":"    public void toModelType_convertTrueMark_succeeds() {","lastModifiedDate":"2024-03-25"},{"lineNumber":146,"author":{"gitId":"xuelinglow"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":147,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, true);","lastModifiedDate":"2024-03-25"},{"lineNumber":148,"author":{"gitId":"xuelinglow"},"content":"        assertDoesNotThrow(appointment::toModelType); //does not throw any exceptions","lastModifiedDate":"2024-03-25"},{"lineNumber":149,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":150,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":151,"author":{"gitId":"xuelinglow"},"content":"    @Test","lastModifiedDate":"2024-03-25"},{"lineNumber":152,"author":{"gitId":"xuelinglow"},"content":"    public void toModelType_convertFalseMark_succeeds() {","lastModifiedDate":"2024-03-25"},{"lineNumber":153,"author":{"gitId":"xuelinglow"},"content":"        JsonAdaptedAppointment appointment \u003d new JsonAdaptedAppointment(VALID_NRIC, VALID_DATE,","lastModifiedDate":"2024-03-25"},{"lineNumber":154,"author":{"gitId":"xuelinglow"},"content":"                VALID_START_TIME, VALID_END_TIME, VALID_TYPE, VALID_NOTE, false);","lastModifiedDate":"2024-03-25"},{"lineNumber":155,"author":{"gitId":"xuelinglow"},"content":"        assertDoesNotThrow(appointment::toModelType); //does not throw any exceptions","lastModifiedDate":"2024-03-25"},{"lineNumber":156,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":157,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xuelinglow":28,"dayn-1":127,"limrik":2}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"    private static final String INVALID_NRIC \u003d \"t01234567A\";","lastModifiedDate":"2024-03-13"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    private static final String INVALID_DOB \u003d \"20220-13-01\";","lastModifiedDate":"2024-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"    private static final String VALID_DOB \u003d BENSON.getDob().toString();","lastModifiedDate":"2024-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_NRIC, VALID_DOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"limrik"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"    public void toModelType_invalidDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, INVALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"limrik"},"content":"        String expectedMessage \u003d DateOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2024-03-13"},{"lineNumber":87,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":88,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":89,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":90,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-13"},{"lineNumber":91,"author":{"gitId":"limrik"},"content":"    public void toModelType_nullDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2024-03-13"},{"lineNumber":92,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, null, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":93,"author":{"gitId":"limrik"},"content":"                VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":94,"author":{"gitId":"limrik"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName());","lastModifiedDate":"2024-03-13"},{"lineNumber":95,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2024-03-13"},{"lineNumber":96,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":97,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, INVALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":102,"author":{"gitId":"limrik"},"content":"                        VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB,","lastModifiedDate":"2024-03-13"},{"lineNumber":110,"author":{"gitId":"limrik"},"content":"                null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":119,"author":{"gitId":"limrik"},"content":"                        INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":127,"author":{"gitId":"limrik"},"content":"                null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":136,"author":{"gitId":"limrik"},"content":"                        VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"limrik"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":144,"author":{"gitId":"limrik"},"content":"                VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2024-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"limrik"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_NRIC, VALID_DOB, VALID_PHONE,","lastModifiedDate":"2024-03-13"},{"lineNumber":155,"author":{"gitId":"limrik"},"content":"                        VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2024-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limrik":58,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":"import seedu.address.testutil.TypicalAppointments;","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    private static final Path TYPICAL_APPOINTMENTS_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"            .resolve(\"typicalAppointmentsAddressBook.json\");","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    private static final Path INVALID_APPOINTMENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidAppointmentAddressBook.json\");","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"    private static final Path DUPLICATE_APPOINTMENT_FILE \u003d TEST_DATA_FOLDER","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"            .resolve(\"duplicateAppointmentAddressBook.json\");","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"    public void toModelType_typicalAppointmentsFile_success() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_APPOINTMENTS_FILE,","lastModifiedDate":"2024-03-16"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"        AddressBook typicalAppointmentsAddressBookWithAppointments \u003d","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"                TypicalAppointments.getTypicalAddressBookWithAppointments();","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"limrik"},"content":"        assertEquals(addressBookFromFile, typicalAppointmentsAddressBookWithAppointments);","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"limrik"},"content":"    public void toModelType_invalidAppointmentsFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"limrik"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_APPOINTMENT_FILE,","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"    @Test","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"    public void toModelType_duplicateAppointments_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_APPOINTMENT_FILE,","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_APPOINTMENT,","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"limrik":30,"-":47}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"     * Adds a new {@code Appointment} to the {@code AddressBook} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"    public AddressBookBuilder withAppointment(Appointment appt) {","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"        addressBook.addAppointment(appt);","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"xuelinglow":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/AppointmentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dayn-1"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"dayn-1"},"content":"import seedu.address.commons.core.date.Date;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.AppointmentType;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Note;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.Time;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.appointment.TimePeriod;","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"dayn-1"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"dayn-1"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"dayn-1"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"dayn-1"},"content":"public class AppointmentBuilder {","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456I\";","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_DATE \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_START_TIME \u003d \"23:58\";","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_END_TIME \u003d \"23:59\";","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_APPOINTMENT_TYPE \u003d \"Health Check-up\";","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_NOTE \u003d \"Only speaks mandarin\";","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    public static final boolean DEFAULT_MARK \u003d false;","lastModifiedDate":"2024-03-25"},{"lineNumber":23,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"dayn-1"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"dayn-1"},"content":"    private Date date;","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"dayn-1"},"content":"    private TimePeriod timePeriod;","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"dayn-1"},"content":"    private AppointmentType appointmentType;","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"dayn-1"},"content":"    private Note note;","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"    private Mark mark;","lastModifiedDate":"2024-03-25"},{"lineNumber":30,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"dayn-1"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2024-03-16"},{"lineNumber":33,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":34,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder() {","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"dayn-1"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"dayn-1"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"dayn-1"},"content":"        Time startTime \u003d new Time(DEFAULT_START_TIME);","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"dayn-1"},"content":"        Time endTime \u003d new Time(DEFAULT_END_TIME);","lastModifiedDate":"2024-03-16"},{"lineNumber":39,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":40,"author":{"gitId":"dayn-1"},"content":"        timePeriod \u003d new TimePeriod(startTime, endTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":41,"author":{"gitId":"dayn-1"},"content":"        appointmentType \u003d new AppointmentType(DEFAULT_APPOINTMENT_TYPE);","lastModifiedDate":"2024-03-16"},{"lineNumber":42,"author":{"gitId":"dayn-1"},"content":"        note \u003d new Note(DEFAULT_NOTE);","lastModifiedDate":"2024-03-16"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"        mark \u003d new Mark(DEFAULT_MARK);","lastModifiedDate":"2024-03-25"},{"lineNumber":44,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":45,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":46,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":47,"author":{"gitId":"dayn-1"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2024-03-16"},{"lineNumber":48,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":49,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder(Appointment apptToCopy) {","lastModifiedDate":"2024-03-16"},{"lineNumber":50,"author":{"gitId":"dayn-1"},"content":"        nric \u003d apptToCopy.getNric();","lastModifiedDate":"2024-03-16"},{"lineNumber":51,"author":{"gitId":"dayn-1"},"content":"        date \u003d apptToCopy.getDate();","lastModifiedDate":"2024-03-16"},{"lineNumber":52,"author":{"gitId":"dayn-1"},"content":"        timePeriod \u003d apptToCopy.getTimePeriod();","lastModifiedDate":"2024-03-16"},{"lineNumber":53,"author":{"gitId":"dayn-1"},"content":"        appointmentType \u003d apptToCopy.getAppointmentType();","lastModifiedDate":"2024-03-16"},{"lineNumber":54,"author":{"gitId":"dayn-1"},"content":"        note \u003d apptToCopy.getNote();","lastModifiedDate":"2024-03-16"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"        mark \u003d apptToCopy.getMark();","lastModifiedDate":"2024-03-25"},{"lineNumber":56,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":57,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":58,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":59,"author":{"gitId":"dayn-1"},"content":"     * Sets the {@code Nric} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":60,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withNric(String nric) {","lastModifiedDate":"2024-03-16"},{"lineNumber":62,"author":{"gitId":"dayn-1"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-16"},{"lineNumber":63,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":64,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":65,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":66,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":67,"author":{"gitId":"dayn-1"},"content":"     * Sets the {@code Date} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":68,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":69,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withDate(String date) {","lastModifiedDate":"2024-03-16"},{"lineNumber":70,"author":{"gitId":"dayn-1"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2024-03-16"},{"lineNumber":71,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":72,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":73,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":74,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":75,"author":{"gitId":"dayn-1"},"content":"     * Sets the start time of {@code TimePeriod} of the {@code Appointment}","lastModifiedDate":"2024-03-16"},{"lineNumber":76,"author":{"gitId":"dayn-1"},"content":"     * that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":77,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":78,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withStartTime(String startTime) {","lastModifiedDate":"2024-03-16"},{"lineNumber":79,"author":{"gitId":"dayn-1"},"content":"        Time newStart \u003d new Time(startTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":80,"author":{"gitId":"dayn-1"},"content":"        this.timePeriod \u003d new TimePeriod(newStart, this.timePeriod.getEndTime());","lastModifiedDate":"2024-03-16"},{"lineNumber":81,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":82,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":83,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":84,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":85,"author":{"gitId":"dayn-1"},"content":"     * Sets the end time of {@code TimePeriod} of the {@code Appointment}","lastModifiedDate":"2024-03-16"},{"lineNumber":86,"author":{"gitId":"dayn-1"},"content":"     * that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":87,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":88,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withEndTime(String endTime) {","lastModifiedDate":"2024-03-16"},{"lineNumber":89,"author":{"gitId":"dayn-1"},"content":"        Time newEnd \u003d new Time(endTime);","lastModifiedDate":"2024-03-16"},{"lineNumber":90,"author":{"gitId":"dayn-1"},"content":"        this.timePeriod \u003d new TimePeriod(this.timePeriod.getStartTime(), newEnd);","lastModifiedDate":"2024-03-16"},{"lineNumber":91,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":92,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":93,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":94,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":95,"author":{"gitId":"dayn-1"},"content":"     * Sets the {@code AppointmentType} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":96,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":97,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withAppointmentType(String typeName) {","lastModifiedDate":"2024-03-16"},{"lineNumber":98,"author":{"gitId":"dayn-1"},"content":"        this.appointmentType \u003d new AppointmentType(typeName);","lastModifiedDate":"2024-03-16"},{"lineNumber":99,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":100,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":101,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":102,"author":{"gitId":"dayn-1"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":103,"author":{"gitId":"dayn-1"},"content":"     * Sets the {@code Note} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-16"},{"lineNumber":104,"author":{"gitId":"dayn-1"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":105,"author":{"gitId":"dayn-1"},"content":"    public AppointmentBuilder withNote(String note) {","lastModifiedDate":"2024-03-16"},{"lineNumber":106,"author":{"gitId":"dayn-1"},"content":"        this.note \u003d new Note(note);","lastModifiedDate":"2024-03-16"},{"lineNumber":107,"author":{"gitId":"dayn-1"},"content":"        return this;","lastModifiedDate":"2024-03-16"},{"lineNumber":108,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":109,"author":{"gitId":"dayn-1"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":110,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":111,"author":{"gitId":"xuelinglow"},"content":"     * Sets the {@code Mark} of the {@code Appointment} that we are building.","lastModifiedDate":"2024-03-25"},{"lineNumber":112,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":113,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentBuilder withMark(boolean isMarked) {","lastModifiedDate":"2024-03-25"},{"lineNumber":114,"author":{"gitId":"xuelinglow"},"content":"        this.mark \u003d new Mark(isMarked);","lastModifiedDate":"2024-03-25"},{"lineNumber":115,"author":{"gitId":"xuelinglow"},"content":"        return this;","lastModifiedDate":"2024-03-25"},{"lineNumber":116,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-25"},{"lineNumber":117,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-25"},{"lineNumber":118,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-25"},{"lineNumber":119,"author":{"gitId":"xuelinglow"},"content":"     * Builds Appointment object using the provided data.","lastModifiedDate":"2024-03-25"},{"lineNumber":120,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-25"},{"lineNumber":121,"author":{"gitId":"dayn-1"},"content":"    public Appointment build() {","lastModifiedDate":"2024-03-16"},{"lineNumber":122,"author":{"gitId":"xuelinglow"},"content":"        Appointment appt \u003d new Appointment(nric, date, timePeriod, appointmentType, note, mark);","lastModifiedDate":"2024-03-25"},{"lineNumber":123,"author":{"gitId":"xuelinglow"},"content":"        return appt;","lastModifiedDate":"2024-03-25"},{"lineNumber":124,"author":{"gitId":"dayn-1"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":125,"author":{"gitId":"dayn-1"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"xuelinglow":18,"dayn-1":107}},{"path":"src/test/java/seedu/address/testutil/AppointmentUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"limrik"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-16"},{"lineNumber":2,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":3,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2024-03-16"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NOTE;","lastModifiedDate":"2024-03-16"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-16"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2024-03-16"},{"lineNumber":8,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2024-03-16"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.logic.commands.AddAppCommand;","lastModifiedDate":"2024-03-16"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-16"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":13,"author":{"gitId":"limrik"},"content":"/**","lastModifiedDate":"2024-03-16"},{"lineNumber":14,"author":{"gitId":"limrik"},"content":" * A utility class for Appointment..","lastModifiedDate":"2024-03-16"},{"lineNumber":15,"author":{"gitId":"limrik"},"content":" */","lastModifiedDate":"2024-03-16"},{"lineNumber":16,"author":{"gitId":"limrik"},"content":"public class AppointmentUtil {","lastModifiedDate":"2024-03-16"},{"lineNumber":17,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":18,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":19,"author":{"gitId":"limrik"},"content":"     * Returns an addApp command string for adding the {@code appointment}.","lastModifiedDate":"2024-03-16"},{"lineNumber":20,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":21,"author":{"gitId":"limrik"},"content":"    public static String getAddAppCommand(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":22,"author":{"gitId":"limrik"},"content":"        return AddAppCommand.COMMAND_WORD + \" \" + getAppointmentDetails(appointment);","lastModifiedDate":"2024-03-16"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":24,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-16"},{"lineNumber":25,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-16"},{"lineNumber":26,"author":{"gitId":"limrik"},"content":"     * Returns the part of command string for the given {@code appointment}\u0027s details.","lastModifiedDate":"2024-03-16"},{"lineNumber":27,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-16"},{"lineNumber":28,"author":{"gitId":"limrik"},"content":"    public static String getAppointmentDetails(Appointment appointment) {","lastModifiedDate":"2024-03-16"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2024-03-16"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_NRIC + appointment.getNric().value + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_DATE + appointment.getDate().toString() + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":32,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_START_TIME + appointment.getStartTime().toString() + \" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":33,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_END_TIME + appointment.getEndTime().toString() + \" \");","lastModifiedDate":"2024-03-26"},{"lineNumber":34,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_TAG + appointment.getAppointmentType().typeName + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":35,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_NOTE + appointment.getNote().note + \" \");","lastModifiedDate":"2024-03-16"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        return sb.toString();","lastModifiedDate":"2024-03-16"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-16"},{"lineNumber":38,"author":{"gitId":"limrik"},"content":"}","lastModifiedDate":"2024-03-16"}],"authorContributionMap":{"limrik":38}},{"path":"src/test/java/seedu/address/testutil/AppointmentViewBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":" * A utility class to help with building Appointment objects.","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"public class AppointmentViewBuilder {","lastModifiedDate":"2024-03-21"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2024-03-21"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"    //for appointment","lastModifiedDate":"2024-03-21"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456I\";","lastModifiedDate":"2024-03-21"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_DATE \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-21"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_START_TIME \u003d \"23:58\";","lastModifiedDate":"2024-03-21"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_END_TIME \u003d \"23:59\";","lastModifiedDate":"2024-03-21"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_APPOINTMENT_TYPE \u003d \"Health Check-up\";","lastModifiedDate":"2024-03-21"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"    public static final String DEFAULT_NOTE \u003d \"Only speaks mandarin\";","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"    public static final boolean DEFAULT_MARK \u003d false;","lastModifiedDate":"2024-03-25"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":"    private Name name;","lastModifiedDate":"2024-03-21"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":"    private Appointment appt;","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"     * Creates a {@code AppointmentBuilder} with the default details.","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentViewBuilder() {","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"        appt \u003d new AppointmentBuilder().withNric(DEFAULT_NRIC).withDate(DEFAULT_DATE).withStartTime(DEFAULT_START_TIME)","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"        .withEndTime(DEFAULT_END_TIME).withAppointmentType(DEFAULT_APPOINTMENT_TYPE)","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"        .withNote(DEFAULT_NOTE).withMark(DEFAULT_MARK).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"     * Initializes the AppointmentBuilder with the data of {@code appointmentToCopy}.","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentViewBuilder(AppointmentView apptViewToCopy) {","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"        name \u003d apptViewToCopy.getName();","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"        appt \u003d apptViewToCopy.getAppointment();","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"     * Sets the {@code Nric} of the {@code AppointmentView} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentViewBuilder withName(String name) {","lastModifiedDate":"2024-03-21"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2024-03-21"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-21"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"     * Sets the {@code Appointment} of the {@code AppointmentView} that we are building.","lastModifiedDate":"2024-03-21"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-21"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentViewBuilder withAppointment(Appointment appt) {","lastModifiedDate":"2024-03-21"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"        this.appt \u003d appt;","lastModifiedDate":"2024-03-21"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"        return this;","lastModifiedDate":"2024-03-21"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"    public AppointmentView build() {","lastModifiedDate":"2024-03-21"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"        return new AppointmentView(name, appt);","lastModifiedDate":"2024-03-21"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-21"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":62}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"limrik"},"content":"        descriptor.setDateOfBirth(person.getDob());","lastModifiedDate":"2024-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"     * Sets the {@code DateOfBirth} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"    public EditPersonDescriptorBuilder withDateOfBirth(String dob) {","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"limrik"},"content":"        descriptor.setDateOfBirth(new DateOfBirth(dob));","lastModifiedDate":"2024-03-13"},{"lineNumber":57,"author":{"gitId":"limrik"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"dayn-1":1,"limrik":10,"-":86}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"limrik"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"dayn-1"},"content":"    public static final String DEFAULT_NRIC \u003d \"T0123456I\";","lastModifiedDate":"2024-03-13"},{"lineNumber":23,"author":{"gitId":"limrik"},"content":"    public static final String DEFAULT_DOB \u003d \"2001-01-01\";","lastModifiedDate":"2024-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"limrik"},"content":"    private Nric nric;","lastModifiedDate":"2024-03-13"},{"lineNumber":30,"author":{"gitId":"limrik"},"content":"    private DateOfBirth dob;","lastModifiedDate":"2024-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"limrik"},"content":"        dob \u003d new DateOfBirth(DEFAULT_DOB);","lastModifiedDate":"2024-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"limrik"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2024-03-13"},{"lineNumber":55,"author":{"gitId":"limrik"},"content":"        dob \u003d personToCopy.getDob();","lastModifiedDate":"2024-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":71,"author":{"gitId":"limrik"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":72,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":73,"author":{"gitId":"limrik"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2024-03-13"},{"lineNumber":74,"author":{"gitId":"limrik"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2024-03-13"},{"lineNumber":75,"author":{"gitId":"limrik"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":76,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":77,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":78,"author":{"gitId":"limrik"},"content":"    /**","lastModifiedDate":"2024-03-13"},{"lineNumber":79,"author":{"gitId":"limrik"},"content":"     * Sets the {@code DateOfBirth} of the {@code Person} that we are building.","lastModifiedDate":"2024-03-13"},{"lineNumber":80,"author":{"gitId":"limrik"},"content":"     */","lastModifiedDate":"2024-03-13"},{"lineNumber":81,"author":{"gitId":"limrik"},"content":"    public PersonBuilder withDateOfBirth(String dob) {","lastModifiedDate":"2024-03-13"},{"lineNumber":82,"author":{"gitId":"limrik"},"content":"        this.dob \u003d new DateOfBirth(dob);","lastModifiedDate":"2024-03-13"},{"lineNumber":83,"author":{"gitId":"limrik"},"content":"        return this;","lastModifiedDate":"2024-03-13"},{"lineNumber":84,"author":{"gitId":"limrik"},"content":"    }","lastModifiedDate":"2024-03-13"},{"lineNumber":85,"author":{"gitId":"limrik"},"content":"","lastModifiedDate":"2024-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":119,"author":{"gitId":"limrik"},"content":"        return new Person(name, nric, dob, phone, email, address, tags);","lastModifiedDate":"2024-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"limrik":26,"dayn-1":1,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2024-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":14,"author":{"gitId":"dayn-1"},"content":"import seedu.address.logic.commands.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2024-03-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"        sb.append(PREFIX_NRIC + person.getNric().value + \" \");","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"        sb.append(PREFIX_DOB + person.getDob().toString() + \" \");","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"        descriptor.getDateOfBirth().ifPresent(dob -\u003e sb.append(PREFIX_DOB).append(dob.value).append(\" \"));","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"limrik":4,"dayn-1":1,"ThatGirlJam":1,"-":61}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointmentViews.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xuelinglow"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-21"},{"lineNumber":2,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":3,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2024-03-21"},{"lineNumber":4,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2024-03-21"},{"lineNumber":5,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT;","lastModifiedDate":"2024-03-21"},{"lineNumber":6,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.ALICE_APPT_1;","lastModifiedDate":"2024-03-21"},{"lineNumber":7,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.AMY_APPT;","lastModifiedDate":"2024-03-21"},{"lineNumber":8,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.BENSON_APPT;","lastModifiedDate":"2024-03-21"},{"lineNumber":9,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.BOB_APPT;","lastModifiedDate":"2024-03-21"},{"lineNumber":10,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalAppointments.getTypicalAppointments;","lastModifiedDate":"2024-03-28"},{"lineNumber":11,"author":{"gitId":"xuelinglow"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":12,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":13,"author":{"gitId":"xuelinglow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-28"},{"lineNumber":14,"author":{"gitId":"xuelinglow"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-28"},{"lineNumber":15,"author":{"gitId":"xuelinglow"},"content":"import java.util.List;","lastModifiedDate":"2024-03-28"},{"lineNumber":16,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":17,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-28"},{"lineNumber":18,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-28"},{"lineNumber":19,"author":{"gitId":"xuelinglow"},"content":"import seedu.address.model.appointment.AppointmentView;","lastModifiedDate":"2024-03-21"},{"lineNumber":20,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":21,"author":{"gitId":"xuelinglow"},"content":"/**","lastModifiedDate":"2024-03-21"},{"lineNumber":22,"author":{"gitId":"xuelinglow"},"content":" * A utility class containing a list of {@code AppointmentView} objects to be used in tests.","lastModifiedDate":"2024-03-27"},{"lineNumber":23,"author":{"gitId":"xuelinglow"},"content":" * Appointment NRICs match those in {@code TypicalPersons}.","lastModifiedDate":"2024-03-21"},{"lineNumber":24,"author":{"gitId":"xuelinglow"},"content":" */","lastModifiedDate":"2024-03-21"},{"lineNumber":25,"author":{"gitId":"xuelinglow"},"content":"public class TypicalAppointmentViews {","lastModifiedDate":"2024-03-21"},{"lineNumber":26,"author":{"gitId":"xuelinglow"},"content":"    //set up appointmentViews","lastModifiedDate":"2024-03-21"},{"lineNumber":27,"author":{"gitId":"xuelinglow"},"content":"    public static final AppointmentView ALICE_APPT_VIEW \u003d new AppointmentViewBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":28,"author":{"gitId":"xuelinglow"},"content":"            .withName(\"Alice Pauline\").withAppointment(ALICE_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":29,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":30,"author":{"gitId":"xuelinglow"},"content":"    public static final AppointmentView ALICE_APPT_VIEW_1 \u003d new AppointmentViewBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":31,"author":{"gitId":"xuelinglow"},"content":"            .withName(\"Alice Pauline\").withAppointment(ALICE_APPT_1).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":32,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":33,"author":{"gitId":"xuelinglow"},"content":"    public static final AppointmentView BENSON_APPT_VIEW \u003d new AppointmentViewBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"            .withName(\"Benson Meier\").withAppointment(BENSON_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":35,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":36,"author":{"gitId":"xuelinglow"},"content":"    //set up appointmentViews","lastModifiedDate":"2024-03-21"},{"lineNumber":37,"author":{"gitId":"xuelinglow"},"content":"    public static final AppointmentView AMY_APPT_VIEW \u003d new AppointmentViewBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":38,"author":{"gitId":"xuelinglow"},"content":"            .withName(VALID_NAME_AMY).withAppointment(AMY_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    public static final AppointmentView BOB_APPT_VIEW \u003d new AppointmentViewBuilder()","lastModifiedDate":"2024-03-21"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"            .withName(VALID_NAME_BOB).withAppointment(BOB_APPT).build();","lastModifiedDate":"2024-03-21"},{"lineNumber":42,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":43,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-21"},{"lineNumber":44,"author":{"gitId":"xuelinglow"},"content":"    private TypicalAppointmentViews() {","lastModifiedDate":"2024-03-21"},{"lineNumber":45,"author":{"gitId":"xuelinglow"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-21"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":47,"author":{"gitId":"xuelinglow"},"content":"    /**","lastModifiedDate":"2024-03-28"},{"lineNumber":48,"author":{"gitId":"xuelinglow"},"content":"     * Returns an {@code AddressBook} with all the typical","lastModifiedDate":"2024-03-28"},{"lineNumber":49,"author":{"gitId":"xuelinglow"},"content":"     * persons and appointments","lastModifiedDate":"2024-03-28"},{"lineNumber":50,"author":{"gitId":"xuelinglow"},"content":"     */","lastModifiedDate":"2024-03-28"},{"lineNumber":51,"author":{"gitId":"xuelinglow"},"content":"    public static AddressBook getTypicalAddressBookWithAppointmentViews() {","lastModifiedDate":"2024-03-28"},{"lineNumber":52,"author":{"gitId":"xuelinglow"},"content":"        AddressBook ab \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-28"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":54,"author":{"gitId":"xuelinglow"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2024-03-28"},{"lineNumber":55,"author":{"gitId":"xuelinglow"},"content":"            //appointmentView is updated every time","lastModifiedDate":"2024-03-28"},{"lineNumber":56,"author":{"gitId":"xuelinglow"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2024-03-28"},{"lineNumber":57,"author":{"gitId":"xuelinglow"},"content":"        }","lastModifiedDate":"2024-03-28"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"        return ab;","lastModifiedDate":"2024-03-28"},{"lineNumber":59,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":60,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":61,"author":{"gitId":"xuelinglow"},"content":"    public static List\u003cAppointmentView\u003e getTypicalAppointmentViews() {","lastModifiedDate":"2024-03-28"},{"lineNumber":62,"author":{"gitId":"xuelinglow"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPT_VIEW, ALICE_APPT_VIEW_1, BENSON_APPT_VIEW));","lastModifiedDate":"2024-03-28"},{"lineNumber":63,"author":{"gitId":"xuelinglow"},"content":"    }","lastModifiedDate":"2024-03-28"},{"lineNumber":64,"author":{"gitId":"xuelinglow"},"content":"","lastModifiedDate":"2024-03-28"},{"lineNumber":65,"author":{"gitId":"xuelinglow"},"content":"}","lastModifiedDate":"2024-03-21"}],"authorContributionMap":{"xuelinglow":65}},{"path":"src/test/java/seedu/address/testutil/TypicalAppointments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ThatGirlJam"},"content":"package seedu.address.testutil;","lastModifiedDate":"2024-03-18"},{"lineNumber":2,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":3,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":4,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_DATE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":5,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":6,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_END_TIME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":7,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NOTE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":8,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_NOTE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":9,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":10,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_START_TIME_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":11,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":12,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_APPOINTMENT_TYPE_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":13,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-18"},{"lineNumber":14,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-18"},{"lineNumber":15,"author":{"gitId":"ThatGirlJam"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":16,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":17,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2024-03-18"},{"lineNumber":18,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.Arrays;","lastModifiedDate":"2024-03-18"},{"lineNumber":19,"author":{"gitId":"ThatGirlJam"},"content":"import java.util.List;","lastModifiedDate":"2024-03-18"},{"lineNumber":20,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":21,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2024-03-18"},{"lineNumber":22,"author":{"gitId":"ThatGirlJam"},"content":"import seedu.address.model.appointment.Appointment;","lastModifiedDate":"2024-03-18"},{"lineNumber":23,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":24,"author":{"gitId":"ThatGirlJam"},"content":"/**","lastModifiedDate":"2024-03-18"},{"lineNumber":25,"author":{"gitId":"ThatGirlJam"},"content":" * A utility class containing a list of {@code Appointment} objects to be used in tests.","lastModifiedDate":"2024-03-18"},{"lineNumber":26,"author":{"gitId":"ThatGirlJam"},"content":" * Appointment NRICs match those in {@code TypicalPersons}.","lastModifiedDate":"2024-03-18"},{"lineNumber":27,"author":{"gitId":"ThatGirlJam"},"content":" */","lastModifiedDate":"2024-03-18"},{"lineNumber":28,"author":{"gitId":"ThatGirlJam"},"content":"public class TypicalAppointments {","lastModifiedDate":"2024-03-18"},{"lineNumber":29,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":30,"author":{"gitId":"ThatGirlJam"},"content":"    public static final Appointment ALICE_APPT \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-18"},{"lineNumber":31,"author":{"gitId":"ThatGirlJam"},"content":"            .withNric(\"T0123456A\").withDate(\"2024-03-01\")","lastModifiedDate":"2024-03-18"},{"lineNumber":32,"author":{"gitId":"ThatGirlJam"},"content":"            .withStartTime(\"16:00\").withEndTime(\"17:00\")","lastModifiedDate":"2024-03-18"},{"lineNumber":33,"author":{"gitId":"ThatGirlJam"},"content":"            .withAppointmentType(\"Monthly check-up\")","lastModifiedDate":"2024-03-18"},{"lineNumber":34,"author":{"gitId":"xuelinglow"},"content":"            .withNote(\"Routine follow up\").withMark(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":35,"author":{"gitId":"ThatGirlJam"},"content":"    public static final Appointment ALICE_APPT_1 \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-18"},{"lineNumber":36,"author":{"gitId":"ThatGirlJam"},"content":"            .withNric(\"T0123456A\").withDate(\"2024-04-01\")","lastModifiedDate":"2024-03-18"},{"lineNumber":37,"author":{"gitId":"ThatGirlJam"},"content":"            .withStartTime(\"16:00\").withEndTime(\"17:00\")","lastModifiedDate":"2024-03-18"},{"lineNumber":38,"author":{"gitId":"ThatGirlJam"},"content":"            .withAppointmentType(\"Monthly check-up\")","lastModifiedDate":"2024-03-18"},{"lineNumber":39,"author":{"gitId":"xuelinglow"},"content":"            .withNote(\"Routine follow up\").withMark(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":40,"author":{"gitId":"xuelinglow"},"content":"    public static final Appointment ALICE_APPT_TRUE \u003d new AppointmentBuilder(ALICE_APPT) //alice_appt with mark true","lastModifiedDate":"2024-03-26"},{"lineNumber":41,"author":{"gitId":"xuelinglow"},"content":"            .withMark(true).build();","lastModifiedDate":"2024-03-26"},{"lineNumber":42,"author":{"gitId":"ThatGirlJam"},"content":"    public static final Appointment BENSON_APPT \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-18"},{"lineNumber":43,"author":{"gitId":"ThatGirlJam"},"content":"            .withNric(\"T0123456B\").withDate(\"2024-03-02\")","lastModifiedDate":"2024-03-18"},{"lineNumber":44,"author":{"gitId":"ThatGirlJam"},"content":"            .withStartTime(\"12:00\").withEndTime(\"12:30\")","lastModifiedDate":"2024-03-18"},{"lineNumber":45,"author":{"gitId":"ThatGirlJam"},"content":"            .withAppointmentType(\"X-Ray\")","lastModifiedDate":"2024-03-18"},{"lineNumber":46,"author":{"gitId":"xuelinglow"},"content":"            .withNote(\"Fractured finger\").withMark(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":47,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":48,"author":{"gitId":"ThatGirlJam"},"content":"    // Manually added - Appointment\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2024-03-18"},{"lineNumber":49,"author":{"gitId":"ThatGirlJam"},"content":"    public static final Appointment AMY_APPT \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-18"},{"lineNumber":50,"author":{"gitId":"ThatGirlJam"},"content":"            .withNric(VALID_NRIC_AMY).withDate(VALID_APPOINTMENT_DATE_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":51,"author":{"gitId":"ThatGirlJam"},"content":"            .withStartTime(VALID_APPOINTMENT_START_TIME_AMY).withEndTime(VALID_APPOINTMENT_END_TIME_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":52,"author":{"gitId":"ThatGirlJam"},"content":"            .withAppointmentType(VALID_APPOINTMENT_TYPE_AMY)","lastModifiedDate":"2024-03-18"},{"lineNumber":53,"author":{"gitId":"xuelinglow"},"content":"            .withNote(VALID_APPOINTMENT_NOTE_AMY).withMark(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":54,"author":{"gitId":"ThatGirlJam"},"content":"    public static final Appointment BOB_APPT \u003d new AppointmentBuilder()","lastModifiedDate":"2024-03-18"},{"lineNumber":55,"author":{"gitId":"ThatGirlJam"},"content":"            .withNric(VALID_NRIC_BOB).withDate(VALID_APPOINTMENT_DATE_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":56,"author":{"gitId":"ThatGirlJam"},"content":"            .withStartTime(VALID_APPOINTMENT_START_TIME_BOB).withEndTime(VALID_APPOINTMENT_END_TIME_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":57,"author":{"gitId":"ThatGirlJam"},"content":"            .withAppointmentType(VALID_APPOINTMENT_TYPE_BOB)","lastModifiedDate":"2024-03-18"},{"lineNumber":58,"author":{"gitId":"xuelinglow"},"content":"            .withNote(VALID_APPOINTMENT_NOTE_BOB).withMark(false).build();","lastModifiedDate":"2024-03-25"},{"lineNumber":59,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":60,"author":{"gitId":"ThatGirlJam"},"content":"    private TypicalAppointments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":61,"author":{"gitId":"ThatGirlJam"},"content":"    } // prevents instantiation","lastModifiedDate":"2024-03-18"},{"lineNumber":62,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":63,"author":{"gitId":"ThatGirlJam"},"content":"    /**","lastModifiedDate":"2024-03-18"},{"lineNumber":64,"author":{"gitId":"ThatGirlJam"},"content":"     * Returns an {@code AddressBook} with all the typical","lastModifiedDate":"2024-03-18"},{"lineNumber":65,"author":{"gitId":"ThatGirlJam"},"content":"     * persons and appointments","lastModifiedDate":"2024-03-18"},{"lineNumber":66,"author":{"gitId":"ThatGirlJam"},"content":"     */","lastModifiedDate":"2024-03-18"},{"lineNumber":67,"author":{"gitId":"ThatGirlJam"},"content":"    public static AddressBook getTypicalAddressBookWithAppointments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":68,"author":{"gitId":"ThatGirlJam"},"content":"        AddressBook ab \u003d getTypicalAddressBook();","lastModifiedDate":"2024-03-18"},{"lineNumber":69,"author":{"gitId":"ThatGirlJam"},"content":"        for (Appointment appointment : getTypicalAppointments()) {","lastModifiedDate":"2024-03-18"},{"lineNumber":70,"author":{"gitId":"ThatGirlJam"},"content":"            ab.addAppointment(appointment);","lastModifiedDate":"2024-03-18"},{"lineNumber":71,"author":{"gitId":"ThatGirlJam"},"content":"        }","lastModifiedDate":"2024-03-18"},{"lineNumber":72,"author":{"gitId":"ThatGirlJam"},"content":"        return ab;","lastModifiedDate":"2024-03-18"},{"lineNumber":73,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":74,"author":{"gitId":"ThatGirlJam"},"content":"","lastModifiedDate":"2024-03-18"},{"lineNumber":75,"author":{"gitId":"ThatGirlJam"},"content":"    public static List\u003cAppointment\u003e getTypicalAppointments() {","lastModifiedDate":"2024-03-18"},{"lineNumber":76,"author":{"gitId":"ThatGirlJam"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_APPT, ALICE_APPT_1, BENSON_APPT));","lastModifiedDate":"2024-03-18"},{"lineNumber":77,"author":{"gitId":"ThatGirlJam"},"content":"    }","lastModifiedDate":"2024-03-18"},{"lineNumber":78,"author":{"gitId":"ThatGirlJam"},"content":"}","lastModifiedDate":"2024-03-18"}],"authorContributionMap":{"xuelinglow":7,"ThatGirlJam":71}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":6,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOB_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2024-03-13"},{"lineNumber":12,"author":{"gitId":"limrik"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2024-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456A\").withDateOfBirth(\"2001-01-01\")","lastModifiedDate":"2024-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2024-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456B\").withDateOfBirth(\"2001-01-02\")","lastModifiedDate":"2024-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2024-02-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456C\").withDateOfBirth(\"2001-01-03\")","lastModifiedDate":"2024-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456D\").withDateOfBirth(\"2001-01-04\")","lastModifiedDate":"2024-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456E\").withDateOfBirth(\"2001-01-05\")","lastModifiedDate":"2024-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456F\").withDateOfBirth(\"2001-01-06\")","lastModifiedDate":"2024-03-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456G\").withDateOfBirth(\"2001-01-07\")","lastModifiedDate":"2024-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"limrik"},"content":"            .withNric(\"T0123456H\").withDateOfBirth(\"2001-01-08\")","lastModifiedDate":"2024-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"dayn-1"},"content":"            .withNric(\"T0123456I\").withDateOfBirth(\"2001-01-09\")","lastModifiedDate":"2024-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"limrik"},"content":"            .withNric(VALID_NRIC_AMY).withDateOfBirth(VALID_DOB_AMY)","lastModifiedDate":"2024-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"limrik"},"content":"            .withNric(VALID_NRIC_BOB).withDateOfBirth(VALID_DOB_BOB)","lastModifiedDate":"2024-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"limrik":14,"dayn-1":1,"-":76}}]
